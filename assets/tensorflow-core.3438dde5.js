import{K as im,s as ga,w as am,n as om,a as lm,b as um,r as Mr,g as Gl,c as Pr,e as Tt,f as cm,d as Zs,h as We,i as Nr,j as Vr,k as jl,l as hm,m as pm,o as dm,p as Fe,q as ur,t as wn,u as Fo,v as Ue,x as zo,y as Js,z as ql,A as ya,B as fm,C as mm,R as gm,D as $A,E as AA}from"./tensorflow-backend.2ee24a15.js";function ym(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const i=Object.getOwnPropertyDescriptor(s,r);i&&Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bm(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,wm(n,t,e)}function Sr(n,t,e){return Math.max(n,Math.min(t,e))}function xA(n){return n%2===0?n:n+1}function wm(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function DA(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function g(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function Ie(n,t,e=""){g(Ot(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Ns(n){g(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function st(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function Nm(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==null&&t[e]!==null&&n[e]!==t[e])return!1;return!0}function Ot(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Rs(n){return n%1===0}function _A(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function mr(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function CA(n,t=r=>0,e,s){return new Promise((r,i)=>{let a=0;const o=()=>{if(n()){r();return}a++;const l=t(a);if(e!=null&&a>=e){i();return}s!=null?s(o,l):setTimeout(o,l)};o()})}function OA(n,t){let e=1,s=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)e*=n[i];else if(n[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function ze(n,t){const e=t.length;return n=n==null?t.map((s,r)=>r):[].concat(n),g(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),g(n.every(s=>Rs(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function Sm(n,t){const e=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||r?null:ze(t,n).sort();let a=0;for(let o=0;o<n.length;++o){if(i!=null){if(i[a]===o&&n[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(i[a]==null||i[a]>o)&&n[o]===1&&(e.push(n[o]),s.push(o)),i[a]<=o&&a++}n[o]!==1&&(e.push(n[o]),s.push(o))}return{newShape:e,keptDims:s}}function km(n,t){return Hl(n,t)}function Hl(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Tm(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Im(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function FA(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function $i(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function vm(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function ba(n){return typeof n=="string"||n instanceof String}function Em(n){return typeof n=="boolean"}function Ai(n){return typeof n=="number"}function Wr(n){return Array.isArray(n)?Wr(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Ai(n)?"float32":ba(n)?"string":Em(n)?"bool":"float32"}function xi(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Di(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function Xs(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Kl(n,t,e,s=!1){const r=new Array;if(t.length===1){const i=t[0]*(s?2:1);for(let a=0;a<i;a++)r[a]=e[n+a]}else{const i=t[0],a=t.slice(1),o=a.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<i;l++)r[l]=Kl(n+l*o,a,e,s)}return r}function is(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((r,i)=>r*i)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Kl(0,n,t,e)}function zA(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function Zl(n,t){const e=wa(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function wa(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function LA(n,t){const e=n.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return is(n,new Float32Array(e));if(t==="int32")return is(n,new Int32Array(e));if(t==="bool")return is(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function ue(n){n.forEach(t=>{g(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function RA(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function BA(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Ln(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo="tfjsflags";class $m{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Am,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Ln(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);Lo in t&&t[Lo].split(",").forEach(s=>{const[r,i]=s.split(":");this.urlFlags[r]=Dm(r,i)})}}function Am(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(xm(t,s[0],s[1]),s.join("="))),t}function xm(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function Dm(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function H(){return Jl}let Jl=null;function _m(n){Jl=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yi;function Xl(){if(yi==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");yi=n}return yi}function Cm(){const n=Xl();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Na(n,t){const e=Cm();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Yl="Abs",Ql="Acos",tu="Acosh",Sa="Add",eu="AddN",Om="All",Fm="Any",nu="ArgMax",su="ArgMin",ru="Asin",iu="Asinh",au="Atan",ou="Atanh",lu="Atan2",uu="AvgPool",zm="AvgPoolGrad",cu="AvgPool3D",Lm="AvgPool3DGrad",hu="BatchMatMul",pu="BatchToSpaceND",Rm="Bincount",Bm="BitwiseAnd",Mm="BroadcastTo",Pm="BroadcastArgs",ka="Cast",du="Ceil",fu="ClipByValue",Vm="Complex",mu="ComplexAbs",gu="Concat",yu="Conv2D",Wm="Conv2DBackpropFilter",bu="Conv2DBackpropInput",wu="Conv3D",Um="Conv3DBackpropFilterV2",Gm="Conv3DBackpropInputV2",Nu="Cos",Su="Cosh",jm="Cumprod",ku="Cumsum",qm="CropAndResize",Hm="DenseBincount",Km="DepthToSpace",Tu="DepthwiseConv2dNative",Zm="DepthwiseConv2dNativeBackpropFilter",Jm="DepthwiseConv2dNativeBackpropInput",Xm="Diag",Iu="Dilation2D",Ym="Dilation2DBackpropInput",Qm="Dilation2DBackpropFilter",MA="Draw",vu="RealDiv",tg="Einsum",Eu="Elu",eg="EluGrad",$u="Erf",ng="Equal",Au="Exp",xu="ExpandDims",Du="Expm1",sg="FFT",rg="Fill",ig="FlipLeftRight",_u="Floor",Cu="FloorDiv",Ou="FusedBatchNorm",Fu="GatherV2",ag="GatherNd",og="Greater",zu="GreaterEqual",Ta="Identity",lg="IFFT",ug="Imag",Lu="IsFinite",Ru="IsInf",Bu="IsNan",Mu="LeakyRelu",cg="Less",hg="LessEqual",pg="LinSpace",Pu="Log",Vu="Log1p",dg="LogicalAnd",fg="LogicalNot",mg="LogicalOr",gg="LogSoftmax",Wu="LRN",yg="LRNGrad",Uu="Max",Gu="Maximum",ju="MaxPool",bg="MaxPoolGrad",qu="MaxPool3D",wg="MaxPool3DGrad",Ng="MaxPoolWithArgmax",Hu="Mean",Ku="Min",Zu="Minimum",Ju="MirrorPad",Xu="Mod",Sg="Multinomial",Yu="Multiply",Qu="Neg",kg="NotEqual",Tg="NonMaxSuppressionV3",Ig="NonMaxSuppressionV4",vg="NonMaxSuppressionV5",tc="OnesLike",ec="OneHot",nc="Pack",sc="PadV2",rc="Pow",ic="Prelu",ac="Prod",Eg="RaggedGather",$g="RaggedRange",Ag="RaggedTensorToTensor",xg="Range",Dg="Real",oc="Reciprocal",lc="Relu",uc="Reshape",cc="ResizeNearestNeighbor",_g="ResizeNearestNeighborGrad",hc="ResizeBilinear",Cg="ResizeBilinearGrad",pc="Relu6",dc="Reverse",fc="Round",mc="Rsqrt",Og="ScatterNd",Fg="TensorScatterUpdate",zg="SearchSorted",gc="Select",yc="Selu",bc="Slice",wc="Sin",Nc="Sinh",Sc="Sign",kc="Sigmoid",Tc="Softplus",Ic="Sqrt",vc="Sum",Ec="SpaceToBatchND",$c="SplitV",Ac="Softmax",Lg="SparseFillEmptyRows",Rg="SparseReshape",Bg="SparseSegmentMean",Mg="SparseSegmentSum",Pg="SparseToDense",xc="SquaredDifference",Vg="Square",Wg="StaticRegexReplace",Ug="StridedSlice",Gg="StringNGrams",jg="StringSplit",qg="StringToHashBucketFast",Dc="Sub",_c="Tan",Cc="Tanh",Ia="Tile",Hg="TopK",Kg="Transform",gr="Transpose",Zg="Unique",Oc="Unpack",Fc="UnsortedSegmentSum",zc="ZerosLike",Lc="Step",Ro="FromPixels",Jg="RotateWithOffset",Bo="_FusedMatMul",Mo="FusedConv2D",Po="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...n)}function PA(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr=Na("kernelRegistry",()=>new Map),_i=Na("gradRegistry",()=>new Map);function Ci(n,t){const e=Rc(n,t);return kr.get(e)}function Vo(n){return _i.get(n)}function Wo(n){const t=kr.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===n&&e.push(a)}return e}function VA(n){const{kernelName:t,backendName:e}=n,s=Rc(t,e);kr.has(s)&&xn(`The kernel '${t}' for backend '${e}' is already registered`),kr.set(s,n)}function Xg(n){const{kernelName:t}=n;_i.has(t)&&H().getBool("DEBUG")&&xn(`Overriding the gradient for '${t}'`),_i.set(t,n)}function Rc(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bc(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Oi=ut,ge=null;try{ge=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ut(n,t,e){this.low=n|0,this.high=t|0,this.unsigned=!!e}ut.prototype.__isLong__;Object.defineProperty(ut.prototype,"__isLong__",{value:!0});function re(n){return(n&&n.__isLong__)===!0}ut.isLong=re;var Uo={},Go={};function qn(n,t){var e,s,r;return t?(n>>>=0,(r=0<=n&&n<256)&&(s=Go[n],s)?s:(e=ct(n,(n|0)<0?-1:0,!0),r&&(Go[n]=e),e)):(n|=0,(r=-128<=n&&n<128)&&(s=Uo[n],s)?s:(e=ct(n,n<0?-1:0,!1),r&&(Uo[n]=e),e))}ut.fromInt=qn;function ye(n,t){if(isNaN(n))return t?On:be;if(t){if(n<0)return On;if(n>=Mc)return Wc}else{if(n<=-qo)return Yt;if(n+1>=qo)return Vc}return n<0?ye(-n,t).neg():ct(n%hs|0,n/hs|0,t)}ut.fromNumber=ye;function ct(n,t,e){return new ut(n,t,e)}ut.fromBits=ct;var Tr=Math.pow;function va(n,t,e){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return be;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return va(n.substring(1),t,e).neg();for(var r=ye(Tr(e,8)),i=be,a=0;a<n.length;a+=8){var o=Math.min(8,n.length-a),l=parseInt(n.substring(a,a+o),e);if(o<8){var u=ye(Tr(e,o));i=i.mul(u).add(ye(l))}else i=i.mul(r),i=i.add(ye(l))}return i.unsigned=t,i}ut.fromString=va;function Le(n,t){return typeof n=="number"?ye(n,t):typeof n=="string"?va(n,t):ct(n.low,n.high,typeof t=="boolean"?t:n.unsigned)}ut.fromValue=Le;var jo=1<<16,Yg=1<<24,hs=jo*jo,Mc=hs*hs,qo=Mc/2,Ho=qn(Yg),be=qn(0);ut.ZERO=be;var On=qn(0,!0);ut.UZERO=On;var rs=qn(1);ut.ONE=rs;var Pc=qn(1,!0);ut.UONE=Pc;var Fi=qn(-1);ut.NEG_ONE=Fi;var Vc=ct(-1,2147483647,!1);ut.MAX_VALUE=Vc;var Wc=ct(-1,-1,!0);ut.MAX_UNSIGNED_VALUE=Wc;var Yt=ct(0,-2147483648,!1);ut.MIN_VALUE=Yt;var R=ut.prototype;R.toInt=function(){return this.unsigned?this.low>>>0:this.low};R.toNumber=function(){return this.unsigned?(this.high>>>0)*hs+(this.low>>>0):this.high*hs+(this.low>>>0)};R.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Yt)){var e=ye(t),s=this.div(e),r=s.mul(e).sub(this);return s.toString(t)+r.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=ye(Tr(t,6),this.unsigned),a=this,o="";;){var l=a.div(i),u=a.sub(l.mul(i)).toInt()>>>0,c=u.toString(t);if(a=l,a.isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}};R.getHighBits=function(){return this.high};R.getHighBitsUnsigned=function(){return this.high>>>0};R.getLowBits=function(){return this.low};R.getLowBitsUnsigned=function(){return this.low>>>0};R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Yt)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};R.isZero=function(){return this.high===0&&this.low===0};R.eqz=R.isZero;R.isNegative=function(){return!this.unsigned&&this.high<0};R.isPositive=function(){return this.unsigned||this.high>=0};R.isOdd=function(){return(this.low&1)===1};R.isEven=function(){return(this.low&1)===0};R.equals=function(t){return re(t)||(t=Le(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};R.eq=R.equals;R.notEquals=function(t){return!this.eq(t)};R.neq=R.notEquals;R.ne=R.notEquals;R.lessThan=function(t){return this.comp(t)<0};R.lt=R.lessThan;R.lessThanOrEqual=function(t){return this.comp(t)<=0};R.lte=R.lessThanOrEqual;R.le=R.lessThanOrEqual;R.greaterThan=function(t){return this.comp(t)>0};R.gt=R.greaterThan;R.greaterThanOrEqual=function(t){return this.comp(t)>=0};R.gte=R.greaterThanOrEqual;R.ge=R.greaterThanOrEqual;R.compare=function(t){if(re(t)||(t=Le(t)),this.eq(t))return 0;var e=this.isNegative(),s=t.isNegative();return e&&!s?-1:!e&&s?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};R.comp=R.compare;R.negate=function(){return!this.unsigned&&this.eq(Yt)?Yt:this.not().add(rs)};R.neg=R.negate;R.add=function(t){re(t)||(t=Le(t));var e=this.high>>>16,s=this.high&65535,r=this.low>>>16,i=this.low&65535,a=t.high>>>16,o=t.high&65535,l=t.low>>>16,u=t.low&65535,c=0,h=0,p=0,f=0;return f+=i+u,p+=f>>>16,f&=65535,p+=r+l,h+=p>>>16,p&=65535,h+=s+o,c+=h>>>16,h&=65535,c+=e+a,c&=65535,ct(p<<16|f,c<<16|h,this.unsigned)};R.subtract=function(t){return re(t)||(t=Le(t)),this.add(t.neg())};R.sub=R.subtract;R.multiply=function(t){if(this.isZero())return be;if(re(t)||(t=Le(t)),ge){var e=ge.mul(this.low,this.high,t.low,t.high);return ct(e,ge.get_high(),this.unsigned)}if(t.isZero())return be;if(this.eq(Yt))return t.isOdd()?Yt:be;if(t.eq(Yt))return this.isOdd()?Yt:be;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(Ho)&&t.lt(Ho))return ye(this.toNumber()*t.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,i=this.low>>>16,a=this.low&65535,o=t.high>>>16,l=t.high&65535,u=t.low>>>16,c=t.low&65535,h=0,p=0,f=0,w=0;return w+=a*c,f+=w>>>16,w&=65535,f+=i*c,p+=f>>>16,f&=65535,f+=a*u,p+=f>>>16,f&=65535,p+=r*c,h+=p>>>16,p&=65535,p+=i*u,h+=p>>>16,p&=65535,p+=a*l,h+=p>>>16,p&=65535,h+=s*c+r*u+i*l+a*o,h&=65535,ct(f<<16|w,h<<16|p,this.unsigned)};R.mul=R.multiply;R.divide=function(t){if(re(t)||(t=Le(t)),t.isZero())throw Error("division by zero");if(ge){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?ge.div_u:ge.div_s)(this.low,this.high,t.low,t.high);return ct(e,ge.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?On:be;var s,r,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return On;if(t.gt(this.shru(1)))return Pc;i=On}else{if(this.eq(Yt)){if(t.eq(rs)||t.eq(Fi))return Yt;if(t.eq(Yt))return rs;var a=this.shr(1);return s=a.div(t).shl(1),s.eq(be)?t.isNegative()?rs:Fi:(r=this.sub(t.mul(s)),i=s.add(r.div(t)),i)}else if(t.eq(Yt))return this.unsigned?On:be;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=be}for(r=this;r.gte(t);){s=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));for(var o=Math.ceil(Math.log(s)/Math.LN2),l=o<=48?1:Tr(2,o-48),u=ye(s),c=u.mul(t);c.isNegative()||c.gt(r);)s-=l,u=ye(s,this.unsigned),c=u.mul(t);u.isZero()&&(u=rs),i=i.add(u),r=r.sub(c)}return i};R.div=R.divide;R.modulo=function(t){if(re(t)||(t=Le(t)),ge){var e=(this.unsigned?ge.rem_u:ge.rem_s)(this.low,this.high,t.low,t.high);return ct(e,ge.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};R.mod=R.modulo;R.rem=R.modulo;R.not=function(){return ct(~this.low,~this.high,this.unsigned)};R.and=function(t){return re(t)||(t=Le(t)),ct(this.low&t.low,this.high&t.high,this.unsigned)};R.or=function(t){return re(t)||(t=Le(t)),ct(this.low|t.low,this.high|t.high,this.unsigned)};R.xor=function(t){return re(t)||(t=Le(t)),ct(this.low^t.low,this.high^t.high,this.unsigned)};R.shiftLeft=function(t){return re(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?ct(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):ct(0,this.low<<t-32,this.unsigned)};R.shl=R.shiftLeft;R.shiftRight=function(t){return re(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?ct(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):ct(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};R.shr=R.shiftRight;R.shiftRightUnsigned=function(t){if(re(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var s=this.low;return ct(s>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?ct(e,0,this.unsigned):ct(e>>>t-32,0,this.unsigned)};R.shru=R.shiftRightUnsigned;R.shr_u=R.shiftRightUnsigned;R.toSigned=function(){return this.unsigned?ct(this.low,this.high,!1):this};R.toUnsigned=function(){return this.unsigned?this:ct(this.low,this.high,!0)};R.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};R.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};R.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};ut.fromBytes=function(t,e,s){return s?ut.fromBytesLE(t,e):ut.fromBytesBE(t,e)};ut.fromBytesLE=function(t,e){return new ut(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};ut.fromBytesBE=function(t,e){return new ut(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const Qg=ym({__proto__:null,default:Oi},[Oi]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dn=Oi||Qg;function Ur(n){return Dn.fromString(n,!0,16)}const Uc=Ur("c3a5c85c97cb3127"),An=Ur("b492b66fbe98f273"),Wt=Ur("9ae16a3b2f90404f");function zi(n){return n.xor(n.shru(47))}function Gc(n,t,e){const s=n.slice(t,t+e);return Dn.fromBytes(Array.from(s),!0,!0)}function ot(n,t){return Gc(n,t,8)}function Ko(n,t){return Gc(n,t,4)}function xt(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function cn(n,t,e=Ur("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let r=t.xor(s).mul(e);return r=r.xor(r.shru(47)),r=r.mul(e),r}function ty(n,t,e,s,r,i){r=r.add(n),i=xt(i.add(r).add(s),21);const a=r;return r=r.add(t),r=r.add(e),i=i.add(xt(r,44)),[r.add(s),i.add(a)]}function cr(n,t,e,s){return ty(ot(n,t),ot(n,t+8),ot(n,t+16),ot(n,t+24),e,s)}function ey(n,t=n.length){if(t>=8){const e=Wt.add(t*2),s=ot(n,0).add(Wt),r=ot(n,t-8),i=xt(r,37).mul(e).add(s),a=xt(s,25).add(r).mul(e);return cn(i,a,e)}if(t>=4){const e=Wt.add(t*2),s=Ko(n,0);return cn(s.shl(3).add(t),Ko(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],r=n[t-1],i=e+(s<<8),a=t+(r<<2);return zi(Wt.mul(i).xor(Uc.mul(a))).mul(Wt)}return Wt}function ny(n,t=n.length){const e=Wt.add(t*2),s=ot(n,0).mul(An),r=ot(n,8),i=ot(n,t-8).mul(e),a=ot(n,t-16).mul(Wt);return cn(xt(s.add(r),43).add(xt(i,30)).add(a),s.add(xt(r.add(Wt),18)).add(i),e)}function sy(n,t=n.length){const e=Wt.add(t*2),s=ot(n,0).mul(Wt),r=ot(n,8),i=ot(n,t-8).mul(e),a=ot(n,t-16).mul(Wt),o=xt(s.add(r),43).add(xt(i,30)).add(a),l=cn(o,s.add(xt(r.add(Wt),18)).add(i),e),u=ot(n,16).mul(e),c=ot(n,24),h=o.add(ot(n,t-32)).mul(e),p=l.add(ot(n,t-24)).mul(e);return cn(xt(u.add(c),43).add(xt(h,30)).add(p),u.add(xt(c.add(s),18)).add(h),e)}function WA(n,t=n.length){const e=Dn.fromNumber(81,!0);if(t<=32)return t<=16?ey(n,t):ny(n,t);if(t<=64)return sy(n,t);let s=e,r=e.mul(An).add(113),i=zi(r.mul(Wt).add(113)).mul(Wt),a=[Dn.UZERO,Dn.UZERO],o=[Dn.UZERO,Dn.UZERO];s=s.mul(Wt).add(ot(n,0));let l=0;const u=(t-1>>6)*64,c=u+(t-1&63)-63;do s=xt(s.add(r).add(a[0]).add(ot(n,l+8)),37).mul(An),r=xt(r.add(a[1]).add(ot(n,l+48)),42).mul(An),s=s.xor(o[1]),r=r.add(a[0]).add(ot(n,l+40)),i=xt(i.add(o[0]),33).mul(An),a=cr(n,l,a[1].mul(An),s.add(o[0])),o=cr(n,l+32,i.add(o[1]),r.add(ot(n,l+16))),[i,s]=[s,i],l+=64;while(l!==u);const h=An.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),s=xt(s.add(r).add(a[0]).add(ot(n,l+8)),37).mul(h),r=xt(r.add(a[1]).add(ot(n,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(a[0].mul(9).add(ot(n,l+40))),i=xt(i.add(o[0]),33).mul(h),a=cr(n,l,a[1].mul(h),s.add(o[0])),o=cr(n,l+32,i.add(o[1]),r.add(ot(n,l+16))),[i,s]=[s,i],cn(cn(a[0],o[0],h).add(zi(r).mul(Uc)).add(i),cn(a[1],o[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n,t){return t==="string"?jc(n):Ea([n],t)}function ry(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Ea(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Bs(n)),H().getBool("DEBUG")&&Tm(n,t),ry(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function ps(){return H().platform.now()}function jc(n,t="utf-8"){return t=t||"utf-8",H().platform.encode(n,t)}function Zo(n,t="utf-8"){return t=t||"utf-8",H().platform.decode(n,t)}function Se(n){return H().platform.isTypedArray!=null?H().platform.isTypedArray(n):Bc(n)}function Bs(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Ln(n)||n==null||Se(n)&&e)t.push(n);else if(Array.isArray(n)||Se(n))for(let s=0;s<n.length;++s)Bs(n[s],t,e);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Bs(n[r],t,e)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iy{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new oy)}profileKernel(t,e,s){let r;const i=()=>{r=s()};let a;const o=ps();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(i);else{i();for(const u of r)u.dataSync();a=Promise.resolve({kernelMs:ps()-o})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{ay(h,c.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:i,extraInfo:a}=t;s.forEach(o=>{Promise.all([o.data(),r,a]).then(l=>{this.logger.logKernelProfile(e,o,l[0],l[1],i,l[2])})})}}function ay(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class oy{logKernelProfile(t,e,s,r,i,a){const o=typeof r=="number"?mr(`${r}ms`,9):r.error,l=mr(t,25),u=e.rank,c=e.size,h=mr(e.shape.toString(),14);let p="";for(const f in i){const w=i[f];if(w!=null){const y=w.shape||e.shape,b=y.length;p+=`${f}: ${b}D ${b>0?y:""} `}}console.log(`%c${l}	%c${o}	%c${u}D ${h}	%c${c}	%c${p}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ly(n,t,e){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const p=c[h];let f=!1;for(let w=0;w<t.length;w++)if(s[p.id]){u.outputs.forEach(y=>s[y.id]=!0),f=!0,r[u.id]=!0;break}if(f)break}}const i={};i[e.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(i[u.outputs[h].id]){for(const p in c)i[c[p].id]=!0,a[u.id]=!0;break}}const o=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&a[u.id]){const c={};for(const p in u.inputs){const f=u.inputs[p];s[f.id]&&(c[p]=f)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,o.push(h)}}return o}function uy(n,t,e,s){for(let r=t.length-1;r>=0;r--){const i=t[r],a=[];if(i.outputs.forEach(l=>{const u=n[l.id];u!=null?a.push(u):a.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const l in i.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const u=e(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=i.inputs[l];if(!Ot(u.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jo=20,$s=3,bi=7;function cy(n,t,e,s){const r=Xs(t),i=hy(n,t,e,r),a=t.length,o=yr(n,t,e,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function hy(n,t,e,s){const r=st(t),i=s[s.length-1],a=new Array(i).fill(0),o=t.length,l=e==="complex64"?Cs(n):n;if(o>1)for(let u=0;u<r/i;u++){const c=u*i;for(let h=0;h<i;h++)a[h]=Math.max(a[h],_s(l[c+h],0,e).length)}return a}function _s(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(bi))} + ${parseFloat(n[1].toFixed(bi))}j`:ba(n)?s=`'${n}'`:e==="bool"?s=qc(n):s=parseFloat(n.toFixed(bi)).toString(),mr(s,t)}function qc(n){return n===0?"false":"true"}function yr(n,t,e,s,r,i=!0){const a=e==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(e==="complex64"){const y=Cs(n);return[_s(y[0],0,e)]}return e==="bool"?[qc(n[0])]:[n[0].toString()]}if(l===1){if(o>Jo){const b=$s*a;let S=Array.from(n.slice(0,b)),I=Array.from(n.slice((o-$s)*a,o*a));return e==="complex64"&&(S=Cs(S),I=Cs(I)),["["+S.map(($,v)=>_s($,r[v],e)).join(", ")+", ..., "+I.map(($,v)=>_s($,r[o-$s+v],e)).join(", ")+"]"]}return["["+(e==="complex64"?Cs(n):Array.from(n)).map((b,S)=>_s(b,r[S],e)).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*a,p=[];if(o>Jo){for(let y=0;y<$s;y++){const b=y*h,S=b+h;p.push(...yr(n.slice(b,S),u,e,c,r,!1))}p.push("...");for(let y=o-$s;y<o;y++){const b=y*h,S=b+h;p.push(...yr(n.slice(b,S),u,e,c,r,y===o-1))}}else for(let y=0;y<o;y++){const b=y*h,S=b+h;p.push(...yr(n.slice(b,S),u,e,c,r,y===o-1))}const f=l===2?",":"";p[0]="["+(o>0?p[0]+f:"");for(let y=1;y<p.length-1;y++)p[y]=" "+p[y]+f;let w=`,
`;for(let y=2;y<l;y++)w+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(i?"":w),p}function Cs(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Li{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=st(t),s!=null){const r=s.length;g(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Hl(e,this.size),this.strides=Xs(t)}set(t,...e){e.length===0&&(e=[0]),g(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Ae().makeTensor(this.values,this.shape,this.dtype)}}let Ae=null,es=null;function py(n){Ae=n}function dy(n){es=n}class mt{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=st(t),this.strides=Xs(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return es.buffer(this.shape,this.dtype,t)}bufferSync(){return es.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return is(this.shape,t,this.dtype==="complex64")}arraySync(){return is(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Ae().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>Zo(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Ae().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Ae().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Zo(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Ae().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ae().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return es.print(this,t)}clone(){return this.throwIfDisposed(),es.clone(this)}toString(t=!1){const e=this.dataSync();return cy(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),es.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),Ae().makeVariable(this,t,e,s)}}Object.defineProperty(mt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function _(){return Na("Tensor",()=>mt)}_();class Ir extends mt{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Ot(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Ae().disposeTensor(this),this.dataId=t.dataId,Ae().incRef(this,null)}dispose(){Ae().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ir,Symbol.hasInstance,{value:n=>n instanceof mt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Xo;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Xo||(Xo={}));var Ri;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Ri||(Ri={}));var Bi;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Bi||(Bi={}));var Mi;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Mi||(Mi={}));var Pi;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Pi||(Pi={}));const fy={float32:Mi,int32:Ri,bool:Bi,complex64:Pi};function Hc(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return fy[n][t]}function GA(n){return Hc(n,"int32")}function Kc(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function Zc(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nt(n,t){if(n.dtype===t.dtype)return[n,t];const e=Hc(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function my(n,t){g(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function Jc(n){const t=[];return Xc(n,t,new Set),t}function Xc(n,t,e){if(n==null)return;if(n instanceof mt){t.push(n);return}if(!gy(n))return;const s=n;for(const r in s){const i=s[r];e.has(i)||(e.add(i),Xc(i,t,e))}}function gy(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wi(n){return n.kernelName!=null}class Yo{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class ds{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Yo}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(xn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new iy(this.backendInstance),!0}setupRegisteredKernels(){Wo(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Wo(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof im)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,xn(`Initialization of backend ${t} failed`),xn(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return xn(`Initialization of backend ${t} failed`),xn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),r=s.backend,i=this.readSync(e),a=r.refCount(e);r.disposeData(e,!0),s.backend=t,t.move(e,i,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,s){t();try{const r=s();return e(),r}catch(r){throw e(),r}}nextTensorId(){return ds.nextTensorId++}nextVariableId(){return ds.nextVariableId++}clone(t){const e=k.runKernel(Ta,{x:t}),s={x:t},r=a=>({x:()=>{const o="float32",l={x:a},u={dtype:o};return k.runKernel(ka,l,u)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[e],r,i,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(Ci(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const r=this.backend.numDataIds();let i=0;s.forEach(l=>{i+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-e-i-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const r=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const u=wi(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(wi(t)){const{kernelName:w,inputs:y,attrs:b}=t;this.backendName==null&&this.backend;const S=Ci(w,this.backendName);g(S!=null,()=>`Cannot find registered kernel '${w}' for backend '${this.backendName}'`),o=()=>{const I=this.backend.numDataIds();l=S.kernelFunc({inputs:y,attrs:b,backend:this.backend});const $=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(w,I,$);const v=$.map(D=>D.rank!=null?D:this.makeTensorFromTensorInfo(D));if(r){const D=this.getTensorsForGradient(w,y,v);s=this.saveTensorsForBackwardMode(D)}return v}}else{const{forwardFunc:w}=t,y=b=>{!r||(s=b.map(S=>this.keep(this.clone(S))))};o=()=>{const b=this.backend.numDataIds();l=this.tidy(()=>w(this.backend,y));const S=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,b,S),S}}const{inputs:c,attrs:h}=t,p=wi(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=o():(f=this.profiler.profileKernel(u,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),r&&this.addTapeNode(u,c,e,p,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(w=>c[w]!=null?c[w].shape:null),outputShapes:e.map(w=>w.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const r=Vo(t);if(r!=null){const i=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(g(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(e).map(u=>e[u])):o=i.map(u=>e[u]);const l=s.filter((u,c)=>a[c]);return o.concat(l)}return[]}makeTensor(t,e,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=t;s==="string"&&ba(t[0])&&(i=t.map(l=>jc(l)));const a=r.write(i,e,s),o=new mt(e,s,a,this.nextTensorId());if(this.trackTensor(o,r),s==="string"){const l=this.state.tensorInfo.get(a),u=vm(i);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(t,e,s,r){s=s||"float32";const i={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:r,dtype:i}=t,a=new mt(r,i,s,this.nextTensorId());return this.trackTensor(a,e),a}makeVariable(t,e=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const i=new Ir(t,e,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*$i(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof Ir||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*$i(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,r,i,a){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:i},l=Vo(t);l!=null&&(r=l.gradFunc),r!=null&&(o.gradient=u=>(u=u.map((c,h)=>{if(c==null){const p=s[h],f=wa(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return c}),r(u.length>1?u:u[0],i,a))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Jc(t),s=new Set(e.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const a=this.state.activeScope.track[i];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(t,e,s,r=!1){if(g(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));g(i instanceof mt,()=>"The result y returned by f() must be a tensor.");const a=ly(this.state.activeTape,e,i);if(!r&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[i.id]=s==null?yy(i.shape):s,uy(o,a,u=>this.tidy(u),by);const l=e.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(t){return g(xi(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{g(e.every(o=>o instanceof mt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};e.forEach((o,l)=>{r[l]=o});const i=(o,l)=>(s=t(...e,l),g(s.value instanceof mt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),g(xi(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(o,l)=>{const u=s.gradFunc(o,l),c=Array.isArray(u)?u:[u];g(c.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),g(c.every(p=>p instanceof mt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((p,f)=>{h[f]=()=>p}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=ps(),s=await this.backend.time(t);return s.wallMs=ps()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Yo;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ds.nextTensorId=0;ds.nextVariableId=0;function yy(n){const t=Zl(st(n),"float32");return k.makeTensor(t,n,"float32")}function Yc(){const n=Xl();if(n._tfengine==null){const t=new $m(n);n._tfengine=new ds(t)}return _m(n._tfengine.ENV),py(()=>n._tfengine),n._tfengine}const k=Yc();function by(n,t){const e={a:n,b:t};return k.runKernel(Sa,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wy(){return typeof navigator<"u"&&navigator!=null}function jA(n){if(n||wy()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ny(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kt=H();Kt.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Kt.registerFlag("IS_BROWSER",()=>Ny());Kt.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Kt.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Kt.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Kt.registerFlag("PROD",()=>!1);Kt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Kt.getBool("DEBUG"));Kt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Kt.registerFlag("IS_TEST",()=>!1);Kt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Kt.getBool("DEBUG"));Kt.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Kt.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Kt.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(n,t){let e=n;if(Se(n))return t==="string"?[]:[n.length];if(Kc(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(Zc(n))return[n.buffer.size/(t==null?4:$i(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||Se(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Qc(n,s,[]),s}function Qc(n,t,e){if(e=e||[],!Array.isArray(n)&&!Se(n)){g(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}g(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),g(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)Qc(n[r],s,e.concat(r))}function Qo(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function m(n,t,e,s="numeric"){if(n instanceof _())return Qo(s,n.dtype,t,e),n;let r=Wr(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Qo(s,r,t,e),n==null||!Se(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const i=Nn(n,r);!Se(n)&&!Array.isArray(n)&&(n=[n]);const o=r!=="string"?Ea(n,r):Bs(n,[],!0);return k.makeTensor(o,i,r)}function vr(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,a)=>m(i,`${t}[${a}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const th="__op";function N(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+th;const r=(...i)=>{k.startScope(e);try{const a=s(...i);return Ln(a)&&console.error("Cannot return a Promise inside of tidy."),k.endScope(a),a}catch(a){throw k.endScope(null),a}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sy(n,t){const e=m(n,"real","complex"),s=m(t,"imag","complex");Ie(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:e,imag:s};return k.runKernel(Vm,r)}const pn=N({complex_:Sy});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(n,t,e,s){if(s==null)s=Wr(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Zc(n)||Kc(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return k.backend.createTensorFromGPUData(n,t||e,s)}if(!Se(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){ue(t);const r=st(t),i=st(e);g(r===i,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${i}`);for(let a=0;a<e.length;++a){const o=e[a],l=a===e.length-1?o!==st(t.slice(a)):!0;g(e[a]===t[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Se(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?Ea(n,s):Bs(n,[],!0),k.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function De(n,t,e){const s=Nn(n,e);return Sn(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rn={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Re{static join(t){return new Re(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>Se(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const r=t[s];s!==t.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=e+r.byteLength;this.shards.push({buffer:r,start:e,end:i}),e=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const r=e-t,i=new ArrayBuffer(r),a=new Uint8Array(i);let o=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],h=t+o-u.start,p=o,w=Math.min(e,u.end)-u.start,y=new Uint8Array(u.buffer,h,w-h);if(a.set(y,p),o+=y.length,e<u.end)break}return i}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(r){return t<r.start?-1:t>=r.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=ky(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function ky(n,t){let e=0,s=n.length;for(;e<=s;){const r=Math.floor((s-e)/2)+e,i=t(n[r]);if(i===0)return r;i<0?s=r:e=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(){return k}function Vi(){return k.memory()}function x(n,t){return k.tidy(n,t)}function Z(n){Jc(n).forEach(e=>e.dispose())}function _t(n){return k.keep(n)}function HA(){return k.ready()}function Ty(){return k.backendName}function KA(n,t,e=1){return k.registerBackend(n,t,e)}function Iy(){return k.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn=4;async function Wi(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const o=r[a],l=Array.isArray(n)?n[a].tensor:n[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const p=await l.bytes(),f=p.reduce((b,S)=>b+S.length,0)+dn*p.length,w=new Uint8Array(f);let y=0;for(let b=0;b<p.length;b++){const S=p[b],I=new Uint8Array(new Uint32Array([S.length]).buffer);w.set(I,y),y+=dn,w.set(S,y),y+=S.length}h(w)});s.push(c)}else s.push(l.data());t!=null&&(u.group=t),e.push(u)}const i=await Promise.all(s);return{data:$y(i),specs:e}}function eh(n,t){const e=new Re(n),s={};let r=0;for(const i of t){const a=vy(i,(o,l)=>e.slice(r+o,r+l));s[i.name]=nh(i,e.slice(r,r+a)),r+=a}return s}function vy(n,t){const e=st(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Rn[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<e;i++)r+=dn+new Uint32Array(t(r,r+dn))[0];return r}else s=Rn[n.dtype];return e*s}async function Ey(n,t){const e=st(n.shape);let s;if("quantization"in n){const r=n.quantization;s=Rn[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<e;i++)r+=dn+new Uint32Array(await t(r,r+dn))[0];return r}else s=Rn[n.dtype];return e*s}function nh(n,t){const e=n.name,s=n.dtype,r=n.shape,i=st(r);let a,o=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=Rn[l.dtype],c=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){a=new Float32Array(c.length);for(let h=0;h<c.length;h++){const p=c[h];a[h]=p*l.scale+l.min}}else if(l.dtype==="float16")a=Oy()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);a=new Int32Array(c.length);for(let h=0;h<c.length;h++){const p=c[h];a[h]=Math.round(p*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);o+=i*u}else if(s==="string"){const l=st(n.shape);a=[];for(let u=0;u<l;u++){const c=new Uint32Array(t.slice(o,o+dn))[0];o+=dn;const h=new Uint8Array(t.slice(o,o+c));a.push(h),o+=c}}else{const l=Rn[s];if(s==="float32")a=new Float32Array(t);else if(s==="int32")a=new Int32Array(t);else if(s==="bool")a=new Uint8Array(t);else if(s==="complex64"){a=new Float32Array(t);const u=new Float32Array(a.length/2),c=new Float32Array(a.length/2);for(let w=0;w<u.length;w++)u[w]=a[w*2],c[w]=a[w*2+1];const h=De(u,r,"float32"),p=De(c,r,"float32"),f=pn(h,p);return h.dispose(),p.dispose(),f}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);o+=i*l}return De(a,r,s)}async function tl(n,t,e){let s=new Uint8Array(t);for(;s.byteLength<e;){const{done:r,value:i}=await n.read();if(r&&i==null){const o=e-s.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}const a=new Uint8Array(s.length+i.byteLength);a.set(s,0),a.set(new Uint8Array(i),s.length),s=a}return s.buffer}async function sh(n,t){const e={},s=n.getReader();let r=new ArrayBuffer(0);for(const i of t){const a=await Ey(i,async(u,c)=>(r=await tl(s,r,c),r.slice(u,c)));r=await tl(s,r,a);const o=r.slice(0,a);r=r.slice(a);const l=nh(i,o);if(e[i.name]=l,Ty()==="webgpu"){const u=Iy();"uploadToGPU"in u&&st(l.shape)>=H().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return e}function $y(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(i=>{if(t+=i.byteLength,e.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const $a=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function el(n){return $a?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function Ay(n){if($a)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function xy(n){if($a){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function rh(n){return Re.join(n)}function nl(n){const t="/";for(n=n.trim();n.endsWith(t);)n=n.slice(0,n.length-1);const e=n.split(t);return e[e.length-1]}function ih(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(e.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function ah(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function Aa(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),ah(n,e,s)}function Ys(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:el(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:el(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Re(n.weightData).byteLength}}function Ui(n){const t=[];for(const e of n)t.push(...e.weights);return t}function Dy(){const n=e=>{let s=e<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function _y(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function Cy(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function Oy(){const n=Dy(),t=_y(),e=Cy();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let a=0;a<s.length;a++){const o=s[a],l=n[e[o>>10]+(o&1023)]+t[o>>10];i[a]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ft{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return ft.instance==null&&(ft.instance=new ft),ft.instance}static registerSaveRouter(t){ft.getInstance().saveRouters.push(t)}static registerLoadRouter(t){ft.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return ft.getHandlers(t,"save")}static getLoadHandlers(t,e){return ft.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return(e==="load"?ft.getInstance().loadRouters:ft.getInstance().saveRouters).forEach(a=>{const o=a(t,s);o!==null&&r.push(o)}),r}}const Fy=n=>ft.registerSaveRouter(n),zy=n=>ft.registerLoadRouter(n),oh=n=>ft.getSaveHandlers(n),Ly=(n,t)=>ft.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gi="tensorflowjs",ji=1,Fn="models_store",ln="model_info_store";function lh(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function qi(n){const t=n.result;t.createObjectStore(Fn,{keyPath:"modelPath"}),t.createObjectStore(ln,{keyPath:"modelPath"})}class Bn{constructor(t){if(this.indexedDB=lh(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,r)=>{const i=this.indexedDB.open(Gi,ji);i.onupgradeneeded=()=>qi(i),i.onsuccess=()=>{const a=i.result;if(e==null){const o=a.transaction(Fn,"readonly"),u=o.objectStore(Fn).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(a.close(),r(u.error)),o.oncomplete=()=>a.close()}else{e.weightData=Re.join(e.weightData);const o=Ys(e),l=a.transaction(ln,"readwrite");let u=l.objectStore(ln),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(p){return r(p)}let h;c.onsuccess=()=>{h=a.transaction(Fn,"readwrite");const p=h.objectStore(Fn);let f;try{f=p.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:o})}catch(w){return r(w)}f.onsuccess=()=>s({modelArtifactsInfo:o}),f.onerror=w=>{u=l.objectStore(ln);const y=u.delete(this.modelPath);y.onsuccess=()=>(a.close(),r(f.error)),y.onerror=b=>(a.close(),r(f.error))}},c.onerror=p=>(a.close(),r(c.error)),l.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},i.onerror=a=>r(i.error)})}}Bn.URL_SCHEME="indexeddb://";const uh=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Bn.URL_SCHEME)?Ry(n.slice(Bn.URL_SCHEME.length)):null;ft.registerSaveRouter(uh);ft.registerLoadRouter(uh);function Ry(n){return new Bn(n)}function By(n){return n.startsWith(Bn.URL_SCHEME)?n.slice(Bn.URL_SCHEME.length):n}class My{constructor(){this.indexedDB=lh()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(Gi,ji);s.onupgradeneeded=()=>qi(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(ln,"readonly"),o=i.objectStore(ln).getAll();o.onsuccess=()=>{const l={};for(const u of o.result)l[u.modelPath]=u.modelArtifactsInfo;t(l)},o.onerror=l=>(r.close(),e(o.error)),i.oncomplete=()=>r.close()},s.onerror=r=>e(s.error)})}async removeModel(t){return t=By(t),new Promise((e,s)=>{const r=this.indexedDB.open(Gi,ji);r.onupgradeneeded=()=>qi(r),r.onsuccess=()=>{const i=r.result,a=i.transaction(ln,"readwrite"),o=a.objectStore(ln),l=o.get(t);let u;l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const c=o.delete(t),h=()=>{u=i.transaction(Fn,"readwrite");const f=u.objectStore(Fn).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=w=>s(l.error)};c.onsuccess=h,c.onerror=p=>(h(),i.close(),s(l.error))}},l.onerror=c=>(i.close(),s(l.error)),a.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qe="/",ns="tensorflowjs_models",ch="info",Py="model_topology",Vy="weight_specs",Wy="weight_data",Uy="model_metadata";function hh(n){return{info:[ns,n,ch].join(Qe),topology:[ns,n,Py].join(Qe),weightSpecs:[ns,n,Vy].join(Qe),weightData:[ns,n,Wy].join(Qe),modelMetadata:[ns,n,Uy].join(Qe)}}function ph(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function Gy(n){const t=n.split(Qe);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Qe)}function jy(n){return n.startsWith(Mn.URL_SCHEME)?n.slice(Mn.URL_SCHEME.length):n}class Mn{constructor(t){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=hh(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=Ys(t),i=Re.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,Ay(i));const a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw ph(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const o=JSON.parse(i);e.format=o.format,e.generatedBy=o.generatedBy,e.convertedBy=o.convertedBy,o.signature!=null&&(e.signature=o.signature),o.userDefinedMetadata!=null&&(e.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(e.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(e.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(e.trainingConfig=o.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=xy(a),e}}Mn.URL_SCHEME="localstorage://";const dh=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Mn.URL_SCHEME)?qy(n.slice(Mn.URL_SCHEME.length)):null;ft.registerSaveRouter(dh);ft.registerLoadRouter(dh);function qy(n){return new Mn(n)}class Hy{constructor(){g(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),g(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=ns+Qe,s=Qe+ch;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(e)&&i.endsWith(s)){const a=Gy(i);t[a]=JSON.parse(this.LS.getItem(i))}}return t}async removeModel(t){t=jy(t);const e=hh(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return ph(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const as="://";class Vt{constructor(){this.managers={}}static getInstance(){return Vt.instance==null&&(Vt.instance=new Vt),Vt.instance}static registerManager(t,e){g(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(as)&&(t=t.slice(0,t.indexOf(as))),g(t.length>0,()=>"scheme must not be an empty string.");const s=Vt.getInstance();g(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=Vt.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Vt.getInstance().managers)}}function br(n){if(n.indexOf(as)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Vt.getSchemes().join(",")}`);return{scheme:n.split(as)[0],path:n.split(as)[1]}}async function fh(n,t,e=!1){g(n!==t,()=>`Old path and new path are the same: '${n}'`);const s=ft.getLoadHandlers(n);g(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),g(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],i=ft.getSaveHandlers(t);g(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),g(i.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const a=i[0],o=br(n).scheme,l=br(n).path,u=o===br(n).scheme,c=await r.load();e&&u&&await Vt.getManager(o).removeModel(l);const h=await a.save(c);return e&&!u&&await Vt.getManager(o).removeModel(l),h.modelArtifactsInfo}async function Ky(){const n=Vt.getSchemes(),t={};for(const e of n){const s=await Vt.getManager(e).listModels();for(const r in s){const i=e+as+r;t[i]=s[r]}}return t}async function Zy(n){const t=br(n);return Vt.getManager(t.scheme).removeModel(t.path)}async function Jy(n,t){return fh(n,t,!1)}async function Xy(n,t){return fh(n,t,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yy{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return Bc(t)}}if(H().get("IS_BROWSER")){H().setPlatform("browser",new Yy);try{Vt.registerManager(Mn.URL_SCHEME,new Hy)}catch{}try{Vt.registerManager(Bn.URL_SCHEME,new My)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qy={importFetch:()=>require("node-fetch")};let Ni;class tb{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return H().global.fetch!=null?H().global.fetch(t,e):(Ni==null&&(Ni=Qy.importFetch()),Ni(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new tb);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hn(n,t="float32",e){return t=t||"float32",ue(n),new Li(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eb(n,t){const e=m(n,"x","cast");if(!Im(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},r={dtype:t};return k.runKernel(ka,s,r)}const B=N({cast_:eb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nb(n){const e={x:m(n,"x","clone","string_or_numeric")};return k.runKernel(Ta,e)}const tn=N({clone_:nb});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mh(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yc();const sb={buffer:Hn,cast:B,clone:tn,print:mh};dy(sb);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(n,t){let e=m(n,"a","add"),s=m(t,"b","add");[e,s]=Nt(e,s);const r={a:e,b:s};return k.runKernel(Sa,r)}const O=N({add_:rb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ib(n,t){let e=m(n,"a","floorDiv"),s=m(t,"b","floorDiv");[e,s]=Nt(e,s);const r={a:e,b:s};return k.runKernel(Cu,r)}const xa=N({floorDiv_:ib});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ab(n,t){let e=m(n,"a","div"),s=m(t,"b","div");if([e,s]=Nt(e,s),e.dtype==="int32"&&s.dtype==="int32")return xa(e,s);const r={a:e,b:s},i={};return k.runKernel(vu,r,i)}const U=N({div_:ab});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ob(n,t){let e=m(n,"a","mul"),s=m(t,"b","mul");[e,s]=Nt(e,s);const r={a:e,b:s};return k.runKernel(Yu,r)}const T=N({mul_:ob});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(n){const t=m(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return k.runKernel(mu,e)}else{const e={x:t};return k.runKernel(Yl,e)}}const At=N({abs_:lb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ub(n){const e={x:m(n,"x","acos")};return k.runKernel(Ql,e)}const gh=N({acos_:ub});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cb(n){const e={x:m(n,"x","acosh")};return k.runKernel(tu,e)}const yh=N({acosh_:cb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hb(n){g(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),g(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((r,i)=>m(r,`tensors${i}`,"addN")),e=t[0];t.forEach(r=>{if(r.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Ot(r.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=t;return k.runKernel(eu,s)}const pb=N({addN_:hb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(n,t=null,e=!1){const r={x:m(n,"x","all","bool")},i={axis:t,keepDims:e};return k.runKernel(Om,r,i)}const Da=N({all_:db});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fb(n,t=null,e=!1){const r={x:m(n,"x","any","bool")},i={axis:t,keepDims:e};return k.runKernel(Fm,r,i)}const Er=N({any_:fb});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mb(n,t=0){const s={x:m(n,"x","argMax")},r={axis:t};return k.runKernel(nu,s,r)}const fs=N({argMax_:mb});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gb(n,t=0){const s={x:m(n,"x","argMin")},r={axis:t};return k.runKernel(su,s,r)}const bh=N({argMin_:gb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yb(n){const e={x:m(n,"x","asin")};return k.runKernel(ru,e)}const wh=N({asin_:yb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n){const e={x:m(n,"x","asinh")};return k.runKernel(iu,e)}const Nh=N({asinh_:bb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wb(n){const e={x:m(n,"x","atan")};return k.runKernel(au,e)}const Sh=N({atan_:wb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nb(n,t){let e=m(n,"a","atan2"),s=m(t,"b","atan2");[e,s]=Nt(e,s);const r={a:e,b:s};return k.runKernel(lu,r)}const kh=N({atan2_:Nb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sb(n){const e={x:m(n,"x","atanh")};return k.runKernel(ou,e)}const Th=N({atanh_:Sb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n,t,e,s,r="NHWC",i){const a=n[3],o=[...t,a],l=Ab(r);return Gr(n,o,e,i,s,null,null,l)}function kb(n,t,e,s,r,i,a="channelsLast"){const[o,l]=Ms(t);let u;if(a==="channelsLast")u=[o,l,n[3],n[3]];else if(a==="channelsFirst")u=[o,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Gr(n,u,e,s,r,i,!1,a)}function JA(n,t,e,s,r,i,a="NDHWC"){const[o,l,u]=Hi(t);let c,h;if(a==="NDHWC")h="channelsLast",c=[o,l,u,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",c=[o,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Tb(n,c,e,s,r,!1,h,i)}function Gr(n,t,e,s,r,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,h]=n;else if(o==="channelsFirst")[l,h,u,c]=n;else throw new Error(`Unknown dataFormat ${o}`);const[p,f,,w]=t,[y,b]=Ms(e),[S,I]=Ms(s),$=os(p,S),v=os(f,I),{padInfo:D,outHeight:C,outWidth:M}=Eb(r,u,c,y,b,$,v,i,o),L=a?w*h:w;let z;return o==="channelsFirst"?z=[l,L,C,M]:o==="channelsLast"&&(z=[l,C,M,L]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:C,outWidth:M,outChannels:L,padInfo:D,strideHeight:y,strideWidth:b,filterHeight:p,filterWidth:f,effectiveFilterHeight:$,effectiveFilterWidth:v,dilationHeight:S,dilationWidth:I,inShape:n,outShape:z,filterShape:t}}function Tb(n,t,e,s,r,i=!1,a="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h,p]=n;else if(a==="channelsFirst")[l,p,u,c,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[f,w,y,,b]=t,[S,I,$]=Hi(e),[v,D,C]=Hi(s),M=os(f,v),L=os(w,D),z=os(y,C),{padInfo:V,outDepth:j,outHeight:rt,outWidth:yt}=$b(r,u,c,h,S,I,$,M,L,z,o),St=i?b*p:b;let bt;return a==="channelsFirst"?bt=[l,St,j,rt,yt]:a==="channelsLast"&&(bt=[l,j,rt,yt,St]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:j,outHeight:rt,outWidth:yt,outChannels:St,padInfo:V,strideDepth:S,strideHeight:I,strideWidth:$,filterDepth:f,filterHeight:w,filterWidth:y,effectiveFilterDepth:M,effectiveFilterHeight:L,effectiveFilterWidth:z,dilationDepth:v,dilationHeight:D,dilationWidth:C,inShape:n,outShape:bt,filterShape:t}}function Ib(n,t,e,s,r){s==null&&(s=Ih(n,t,e));const i=n[0],a=n[1],o=Ps((i-t+2*s)/e+1,r),l=Ps((a-t+2*s)/e+1,r);return[o,l]}function vb(n,t,e,s,r,i){r==null&&(r=Ih(n,t[0],s[0]));const a=[0,0,0,e];for(let o=0;o<3;o++)n[o]+2*r>=t[o]&&(a[o]=Ps((n[o]-t[o]+2*r)/s[o]+1,i));return a}function Ih(n,t,e,s=1){const r=os(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function Ms(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Hi(n){return typeof n=="number"?[n,n,n]:n}function os(n,t){return t<=1?n:n+(n-1)*(t-1)}function Eb(n,t,e,s,r,i,a,o,l){let u,c,h;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=Ib([t,e],i,s,n,o);c=f[0],h=f[1]}else if(n==="same"){c=Math.ceil(t/s),h=Math.ceil(e/r);const p=Math.max(0,(c-1)*s+i-t),f=Math.max(0,(h-1)*r+a-e),w=Math.floor(p/2),y=p-w,b=Math.floor(f/2),S=f-b;u={top:w,bottom:y,left:b,right:S,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/s),h=Math.ceil((e-a+1)/r);else if(typeof n=="object"){const p=l==="channelsLast"?n[1][0]:n[2][0],f=l==="channelsLast"?n[1][1]:n[2][1],w=l==="channelsLast"?n[2][0]:n[3][0],y=l==="channelsLast"?n[2][1]:n[3][1];u={top:p,bottom:f,left:w,right:y,type:p===0&&f===0&&w===0&&y===0?"VALID":"EXPLICIT"},c=Ps((t-i+p+f)/s+1,o),h=Ps((e-a+w+y)/r+1,o)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:c,outWidth:h}}function $b(n,t,e,s,r,i,a,o,l,u,c){let h,p,f,w;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const b=vb([t,e,s,1],[o,l,u],1,[r,i,a],n,c);p=b[0],f=b[1],w=b[2]}else if(n==="same"){p=Math.ceil(t/r),f=Math.ceil(e/i),w=Math.ceil(s/a);const y=(p-1)*r+o-t,b=(f-1)*i+l-e,S=(w-1)*a+u-s,I=Math.floor(y/2),$=y-I,v=Math.floor(b/2),D=b-v,C=Math.floor(S/2),M=S-C;h={top:v,bottom:D,left:C,right:M,front:I,back:$,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:p,outHeight:f,outWidth:w}}function Ps(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Pn(n){const[t,e,s]=Ms(n);return t===1&&e===1&&s===1}function rn(n,t){return Pn(n)||Pn(t)}function ms(n){return Ms(n).every(t=>t>0)}function Ab(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Zt(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")g(Rs(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{g(Rs(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xb(n,t){const s={x:m(n,"x","reshape","string_or_numeric")},r={shape:t};return k.runKernel(uc,s,r)}const A=N({reshape_:xb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Db(n,t,e,s,r){const i=m(n,"x","avgPool","float32"),a=1;g(rn(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let o=i,l=!1;i.rank===3&&(l=!0,o=A(i,[1,i.shape[0],i.shape[1],i.shape[2]])),g(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),Zt("avgPool",s,r);const u={x:o},c={filterSize:t,strides:e,pad:s,dimRoundingMode:r};let h=k.runKernel(uu,u,c);return h=B(h,i.dtype),l?A(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const jr=N({avgPool_:Db});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _b(n,t,e,s,r,i="NDHWC"){const a=m(n,"x","avgPool3d","float32");let o=a,l=!1;a.rank===4&&(l=!0,o=A(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),g(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),g(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),g(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Zt("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:i};let h=k.runKernel(cu,u,c);return h=B(h,o.dtype),l?A(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const vh=N({avgPool3d_:_b});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cb(n,t=0){g(n.length>=1,()=>"Pass at least one tensor to concat");const e=vr(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),e.length===1)return tn(e[0]);const s=e,r={axis:t};return k.runKernel(gu,s,r)}const vt=N({concat_:Cb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ob(n,t,e=!1,s=!1){let r=m(n,"a","matMul"),i=m(t,"b","matMul");[r,i]=Nt(r,i);const a={a:r,b:i},o={transposeA:e,transposeB:s};return k.runKernel(hu,a,o)}const X=N({matMul_:Ob});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fb(n){const e={x:m(n,"x","sigmoid","float32")};return k.runKernel(kc,e)}const Ge=N({sigmoid_:Fb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zb(n,t,e){const s=m(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:t,size:e};return k.runKernel(bc,r,i)}const tt=N({slice_:zb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lb(n){const e={x:m(n,"x","tanh","float32")};return k.runKernel(Cc,e)}const Vn=N({tanh_:Lb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rb(n,t,e,s,r,i){const a=m(n,"forgetBias","basicLSTMCell"),o=m(t,"lstmKernel","basicLSTMCell"),l=m(e,"lstmBias","basicLSTMCell"),u=m(s,"data","basicLSTMCell"),c=m(r,"c","basicLSTMCell"),h=m(i,"h","basicLSTMCell"),p=vt([u,h],1),f=X(p,o),w=O(f,l),y=w.shape[0],b=w.shape[1]/4,S=[y,b],I=tt(w,[0,0],S),$=tt(w,[0,b],S),v=tt(w,[0,b*2],S),D=tt(w,[0,b*3],S),C=O(T(Ge(I),Vn($)),T(c,Ge(O(a,v)))),M=T(Vn(C),Ge(D));return[C,M]}const Bb=N({basicLSTMCell_:Rb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mb(n,t,e){const s=m(n,"x","batchToSpaceND"),r=t.reduce((o,l)=>o*l);g(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),g(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),g(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const i={x:s},a={blockShape:t,crops:e};return k.runKernel(pu,i,a)}const qr=N({batchToSpaceND_:Mb});function Pb(n){let t;return n.rank===0||n.rank===1?t=A(n,[1,1,1,n.size]):n.rank===2?t=A(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=A(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vb(n,t,e,s,r,i){i==null&&(i=.001);const a=m(n,"x","batchNorm"),o=m(t,"mean","batchNorm"),l=m(e,"variance","batchNorm");let u;r!=null&&(u=m(r,"scale","batchNorm"));let c;s!=null&&(c=m(s,"offset","batchNorm")),g(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),g(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),g(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p={x:Pb(a),scale:u,offset:c,mean:o,variance:l},f={varianceEpsilon:i},w=k.runKernel(Ou,p,f);return A(w,a.shape)}const Qs=N({batchNorm_:Vb});function Wb(n,t,e,s,r,i){const a=m(n,"x","batchNorm"),o=m(t,"mean","batchNorm"),l=m(e,"variance","batchNorm");let u;r!=null&&(u=m(r,"scale","batchNorm"));let c;return s!=null&&(c=m(s,"offset","batchNorm")),g(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),g(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),g(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&g(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&g(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Qs(a,o,l,c,u,i)}const Eh=N({batchNorm2d_:Wb});function Ub(n,t,e,s,r,i){const a=m(n,"x","batchNorm"),o=m(t,"mean","batchNorm"),l=m(e,"variance","batchNorm");let u;r!=null&&(u=m(r,"scale","batchNorm"));let c;return s!=null&&(c=m(s,"offset","batchNorm")),g(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),g(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),g(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&g(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&g(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Qs(a,o,l,c,u,i)}const $h=N({batchNorm3d_:Ub});function Gb(n,t,e,s,r,i){const a=m(n,"x","batchNorm"),o=m(t,"mean","batchNorm"),l=m(e,"variance","batchNorm");let u;r!=null&&(u=m(r,"scale","batchNorm"));let c;return s!=null&&(c=m(s,"offset","batchNorm")),g(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),g(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),g(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&g(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&g(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Qs(a,o,l,c,u,i)}const Ah=N({batchNorm4d_:Gb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jb(n,t,e){const s=m(n,"x","bincount"),r=m(t,"weights","bincount");g(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),g(e>=0,()=>`size must be non-negative, but got ${e}.`),g(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const i={x:s,weights:r},a={size:e};return k.runKernel(Rm,i,a)}const xh=N({bincount_:jb});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qb(n,t){const e=m(n,"x","bitwiseAnd"),s=m(t,"y","bitwiseAnd");if(!Ot(e.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${s.shape}`);if(e.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${s.dtype}`);const r={a:e,b:s};return k.runKernel(Bm,r)}const Hb=N({bitwiseAnd_:qb});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kb(n,t){const e=m(n,"s0","broadcastArgs","int32"),s=m(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:e,s1:s};return k.runKernel(Pm,r)}const Zb=N({broadcastArgs_:Kb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jb(n,t){let e=m(n,"broadcastTo","x");const s=e.shape;if(ue(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=A(e,u)}const r=e.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])i[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(i.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return tn(e);const o={x:e},l={reps:i};return k.runKernel(Ia,o,l)}const Fs=N({broadcastTo_:Jb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xb(n){const e={x:m(n,"x","ceil","float32")};return k.runKernel(du,e)}const Dh=N({ceil_:Xb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(n,t,e){ue(n),e=e||Wr(t);const s={shape:n,value:t,dtype:e};return k.runKernel(rg,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(n,t,e){const s=m(n,"x","clipByValue");if(g(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Ss(s.shape,t,s.dtype);const r={x:s},i={clipValueMin:t,clipValueMax:e};return k.runKernel(fu,r,i)}const ae=N({clipByValue_:Yb});function Qb(n){return vt(n,0)}const tw=N({concat1d_:Qb});function ew(n,t){return vt(n,t)}const nw=N({concat2d_:ew});function sw(n,t){return vt(n,t)}const rw=N({concat3d_:sw});function iw(n,t){return vt(n,t)}const aw=N({concat4d_:iw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ow(n,t,e,s,r="NHWC",i=[1,1],a){const o=m(n,"x","conv2d","float32"),l=m(t,"filter","conv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=A(o,[1,o.shape[0],o.shape[1],o.shape[2]])),g(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),g(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Zt("conv2d",s,a);const h=r==="NHWC"?u.shape[3]:u.shape[1];g(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),g(rn(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),g(ms(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),g(ms(e),()=>"Error in conv2D: Strides should be larger than 0.");const p={x:u,filter:l},f={strides:e,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},w=k.runKernel(yu,p,f);return c?A(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const fn=N({conv2d_:ow});function lw(n,t,e,s,r="NWC",i=1,a){const o=m(n,"x","conv1d"),l=m(t,"filter","conv1d");let u=o,c=!1;o.rank===2&&(c=!0,u=A(o,[1,o.shape[0],o.shape[1]])),g(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),g(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Zt("conv1d",s,a),g(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),g(rn(e,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${i}'`),g(ms(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),g(ms(e),()=>"Error in conv1D: Stride should be larger than 0."),g(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=A(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=A(u,[u.shape[0],1,u.shape[1],u.shape[2]]),b=fn(p,h,[1,e],s,"NHWC",[1,i],a);return c?A(b,[b.shape[2],b.shape[3]]):A(b,[b.shape[0],b.shape[2],b.shape[3]])}const _a=N({conv1d_:lw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uw(n,t,e,s,r,i="NHWC",a){g(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,l=t,u=!1;t.rank===3&&(u=!0,l=A(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,n[0],n[1],n[2]]),g(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),g(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),g(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const c=i==="NHWC"?o[3]:o[1],h=i==="NHWC"?l.shape[3]:l.shape[1];g(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),g(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),Zt("conv2dDerInput",r,a);const p={dy:l,filter:e},f={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},w=k.runKernel(bu,p,f);return u?A(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const Ca=N({conv2DBackpropInput_:uw});function cw(n,t,e,s,r,i){const a=m(n,"x","conv2dTranspose"),o=m(t,"filter","conv2dTranspose");return Ca(e,a,o,s,r,"NHWC",i)}const Oa=N({conv2dTranspose_:cw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hw(n,t,e,s,r="NDHWC",i=[1,1,1]){const a=m(n,"x","conv3d"),o=m(t,"filter","conv3d");let l=a,u=!1;a.rank===4&&(u=!0,l=A(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),g(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),g(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),g(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),g(rn(e,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),g(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),g(ms(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),g(ms(e),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:o},h={strides:e,pad:s,dataFormat:r,dilations:i},p=k.runKernel(wu,c,h);return u?A(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const _h=N({conv3d_:hw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pw(n,t,e,s,r){g(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,a=t,o=!1;t.rank===4&&(o=!0,a=A(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],u=a.shape[4];g(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),g(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),g(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),g(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),g(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);const c={dy:a,filter:e},h={pad:r,strides:s,inputShape:i},p=k.runKernel(Gm,c,h);return o?A(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Ch=N({conv3DBackpropInput_:pw});function dw(n,t,e,s,r){const i=m(n,"x","conv3dTranspose"),a=m(t,"filter","conv3dTranspose");return Ch(e,i,a,s,r)}const Oh=N({conv3dTranspose_:dw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fw(n){const e={x:m(n,"x","cos","float32")};return k.runKernel(Nu,e)}const Hr=N({cos_:fw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mw(n){const e={x:m(n,"x","cosh","float32")};return k.runKernel(Su,e)}const Fa=N({cosh_:mw});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gw(n,t=0,e=!1,s=!1){const i={x:m(n,"x","cumprod")},a={axis:t,exclusive:e,reverse:s};return k.runKernel(jm,i,a)}const $r=N({cumprod_:gw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(n,t=0,e=!1,s=!1){const i={x:m(n,"x","cumsum")},a={axis:t,exclusive:e,reverse:s};return k.runKernel(ku,i,a)}const za=N({cumsum_:yw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bw(n,t,e,s=!1){const r=m(n,"x","denseBincount"),i=m(t,"weights","denseBincount");g(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),g(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),g(e>=0,()=>`size must be non-negative, but got ${e}.`),g(i.size===r.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);const a={x:r,weights:i},o={size:e,binaryOutput:s};return k.runKernel(Hm,a,o)}const Ki=N({denseBincount_:bw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ww(n,t,e="NHWC"){const s=m(n,"x","depthToSpace","float32"),r=e==="NHWC"?s.shape[1]:s.shape[2],i=e==="NHWC"?s.shape[2]:s.shape[3],a=e==="NHWC"?s.shape[3]:s.shape[1];g(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),g(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),g(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${s.shape}`),g(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`);const o={x:s},l={blockSize:t,dataFormat:e};return k.runKernel(Km,o,l)}const Fh=N({depthToSpace_:ww});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nw(n,t,e,s,r="NHWC",i=[1,1],a){const o=m(n,"x","depthwiseConv2d","float32"),l=m(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;o.rank===3&&(c=!0,u=A(o,[1,o.shape[0],o.shape[1],o.shape[2]])),g(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),g(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?u.shape[3]:u.shape[1];g(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Zt("depthwiseConv2d",s,a);const p={x:u,filter:l},f={strides:e,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},w=k.runKernel(Tu,p,f);return c?A(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const tr=N({depthwiseConv2d_:Nw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sw(n){const e={x:m(n,"x","diag")};return k.runKernel(Xm,e)}const kw=N({diag_:Sw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(n,t,e,s,r=[1,1],i="NHWC"){const a=m(n,"x","dilation2d"),o=m(t,"filter","dilation2d");g(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),g(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),g(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=a,u=!1;a.rank===3&&(l=A(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),g(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const c={x:l,filter:o},h={strides:e,pad:s,dilations:r},p=k.runKernel(Iu,c,h);return u?A(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const zh=N({dilation2d_:Tw});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const i=e-1-r,a=n[i]||1;(t[t.length-1-r]||1)>1&&a===1&&s.unshift(i)}return s}function Ft(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],i=t.length-s-1,a=t[i];(r==null||r===1&&a>1)&&e.unshift(i)}return e}function lt(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let r=0;r<e;r++){let i=n[n.length-r-1];i==null&&(i=1);let a=t[t.length-r-1];if(a==null&&(a=1),i===1)s[e-r-1]=a;else if(a===1)s[e-r-1]=i;else if(i!==a){const o=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(o)}else s[e-r-1]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iw(n,t){let e=m(n,"a","equal","string_or_numeric"),s=m(t,"b","equal","string_or_numeric");[e,s]=Nt(e,s),lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(ng,r)}const Ce=N({equal_:Iw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(n,t,e){const s=m(t,"a","where"),r=m(e,"b","where"),i=m(n,"condition","where","bool"),a=lt(lt(i.shape,s.shape),r.shape),o=Fs(i,a),l=Fs(s,a),u=Fs(r,a),c={condition:o,t:l,e:u};return k.runKernel(gc,c)}const Bt=N({where_:vw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(n){const e={x:m(n,"x","zerosLike")};return k.runKernel(zc,e)}const Y=N({zerosLike_:Ew});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $w(n,t){let e=m(n,"a","div"),s=m(t,"b","div");[e,s]=Nt(e,s);const r=U(e,s),i=Y(r),a=Ce(s,i);return Bt(a,i,r)}const Lh=N({divNoNan_:$w});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aw(n,t){const e=m(n,"t1","dot"),s=m(t,"t2","dot");g((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=e.rank===1?e.size:e.shape[1],i=s.rank===1?s.size:s.shape[0];if(g(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),e.rank===1&&s.rank===1){const a=A(e,[1,-1]),o=A(s,[-1,1]),l=X(a,o);return A(l,[])}else if(e.rank===1&&s.rank===2){const a=A(e,[1,-1]),o=A(s,[s.shape[0],s.shape[1]]),l=X(a,o);return A(l,[l.size])}else if(e.rank===2&&s.rank===1){const a=A(s,[-1,1]),o=X(e,a);return A(o,[o.size])}else{const a=A(s,[s.shape[0],s.shape[1]]);return X(e,a)}}const Rh=N({dot_:Aw});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xw(n,...t){const e=t.map((r,i)=>m(r,`tensors${i}`,"einsum")),s={equation:n};return k.runKernel(tg,e,s)}const ss=N({einsum_:xw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dw(n){const e={x:m(n,"x","elu","float32")};return k.runKernel(Eu,e)}const Kr=N({elu_:Dw});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _w(n,t){const e=m(n,"x","ensureShape","string_or_numeric");if(!Nm(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return n}const Cw=N({ensureShape_:_w});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ow(n){let t=m(n,"x","erf");g(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=B(t,"float32"));const e={x:t};return k.runKernel($u,e)}const La=N({erf_:Ow});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bh(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function Fw(n,t,e){const s=n.length+t.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)e.indexOf(o)===-1?r.push(n[i++]):r.push(t[a++]);return r}function zw(n,t){const e=[],s=n.length;for(let i=0;i<s;i++)t.indexOf(i)===-1&&e.push(n[i]);const r=t.map(i=>n[i]);return[e,r]}function gs(n,t){const e=t.map(s=>1);return Fw(n,e,t)}function YA(n,t,e){g(Bh(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function Mh(n,t){if(Bh(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function Ra(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function QA(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lw(n,t=null,e=!1){const r={x:m(n,"x","max")},i={reductionIndices:t,keepDims:e};return k.runKernel(Uu,r,i)}const Ne=N({max_:Lw});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rw(n,t=null,e=!1){const r={x:m(n,"x","min")},i={axis:t,keepDims:e};return k.runKernel(Ku,r,i)}const Vs=N({min_:Rw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(n,t){let e=m(n,"base","pow"),s=m(t,"exp","pow");[e,s]=Nt(e,s);const r={a:e,b:s};return k.runKernel(rc,r)}const nn=N({pow_:Bw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G(n,t){if((Se(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Se(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Sn(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mw(n){const e={x:m(n,"x","sqrt","float32")};return k.runKernel(Ic,e)}const Lt=N({sqrt_:Mw});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pw(n){const t=m(n,"x","square"),e={};return k.runKernel("Square",{x:t},e)}const it=N({square_:Pw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vw(n,t=null,e=!1){let s=m(n,"x","sum");s.dtype==="bool"&&(s=B(s,"int32"));const r={x:s},i={axis:t,keepDims:e};return k.runKernel(vc,r,i)}const W=N({sum_:Vw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ww(n,t="euclidean",e=null,s=!1){n=m(n,"x","norm");const r=Ph(n,t,e);let i=r.shape;if(s){const a=ze(e,n.shape);i=gs(r.shape,a)}return A(r,i)}function Ph(n,t,e=null){if(n.rank===0)return At(n);if(n.rank!==1&&e===null)return Ph(A(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return W(At(n),e);if(t===1/0)return Ne(At(n),e);if(t===-1/0)return Vs(At(n),e);if(t==="euclidean"||t===2)return Lt(W(nn(At(n),G(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Ne(W(At(n),e[0]),e[1]-1);if(t===1/0)return Ne(W(At(n),e[1]),e[0]);if(t===-1/0)return Vs(W(At(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Lt(W(it(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const er=N({norm_:Ww});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uw(n,t=null,e=!1){return er(n,"euclidean",t,e)}const Vh=N({euclideanNorm_:Uw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(n){const e={x:m(n,"x","exp")};return k.runKernel(Au,e)}const ee=N({exp_:Gw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jw(n,t=0){const e=m(n,"x","expandDims","string_or_numeric");g(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},r={dim:t};return k.runKernel(xu,s,r)}const Ut=N({expandDims_:jw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qw(n){const e={x:m(n,"x","expm1")};return k.runKernel(Du,e)}const Wh=N({expm1_:qw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(n,t){const e=m(n,"x","tile","string_or_numeric");g(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},r={reps:t};return k.runKernel(Ia,s,r)}const xe=N({tile_:Hw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(n,t,e,s="float32"){t==null&&(t=n);const r=Hn([n,t],s),i=n<=t?n:t;for(let o=0;o<i;++o)r.set(1,o,o);const a=A(r.toTensor(),[n,t]);if(e==null)return a;if(e.length===1)return xe(Ut(a,0),[e[0],1,1]);if(e.length===2)return xe(Ut(Ut(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return xe(Ut(Ut(Ut(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const Ba=N({eye_:Kw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(n){const e={x:m(n,"x","floor","float32")};return k.runKernel(_u,e)}const nr=N({floor_:Zw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jw(n,t,e=0,s=0){const r=m(n,"x","gather"),i=m(t,"indices","gather","int32"),a={x:r,indices:i},o={axis:e,batchDims:s};return k.runKernel(Fu,a,o)}const Zr=N({gather_:Jw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xw(n,t){let e=m(n,"a","greater","string_or_numeric"),s=m(t,"b","greater","string_or_numeric");[e,s]=Nt(e,s),lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(og,r)}const ie=N({greater_:Xw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yw(n,t){let e=m(n,"a","greaterEqual","string_or_numeric"),s=m(t,"b","greaterEqual","string_or_numeric");[e,s]=Nt(e,s),lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(zu,r)}const kn=N({greaterEqual_:Yw});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qw(n){const e={input:m(n,"input","imag")};return k.runKernel(ug,e)}const Jr=N({imag_:Qw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t0(n){const e={x:m(n,"x","isFinite")};return k.runKernel(Lu,e)}const Uh=N({isFinite_:t0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0(n){const e={x:m(n,"x","isInf")};return k.runKernel(Ru,e)}const Gh=N({isInf_:e0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n0(n){const e={x:m(n,"x","isNaN")};return k.runKernel(Bu,e)}const jh=N({isNaN_:n0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s0(n,t=.2){const s={x:m(n,"x","leakyRelu")},r={alpha:t};return k.runKernel(Mu,s,r)}const Xr=N({leakyRelu_:s0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0(n,t){let e=m(n,"a","less","string_or_numeric"),s=m(t,"b","less","string_or_numeric");[e,s]=Nt(e,s),lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(cg,r)}const Ws=N({less_:r0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i0(n,t){let e=m(n,"a","lessEqual","string_or_numeric"),s=m(t,"b","lessEqual","string_or_numeric");[e,s]=Nt(e,s),lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(hg,r)}const Kn=N({lessEqual_:i0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a0(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:t,num:e};return k.runKernel(pg,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o0(n,t=5,e=1,s=1,r=.5){const i=m(n,"x","localResponseNormalization");g(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),g(Rs(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=i,o=!1;i.rank===3&&(o=!0,a=A(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:t,bias:e,alpha:s,beta:r},c=k.runKernel(Wu,l,u);return o?A(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const qh=N({localResponseNormalization_:o0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l0(n){const e={x:m(n,"x","log","float32")};return k.runKernel(Pu,e)}const oe=N({log_:l0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u0(n){const e={x:m(n,"x","log1p")};return k.runKernel(Vu,e)}const Yr=N({log1p_:u0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c0(n,t){g(xi(n),()=>"The f passed in variableGrads(f) must be a function"),g(t==null||Array.isArray(t)&&t.every(u=>u instanceof Ir),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const u in k.registeredVariables)t.push(k.registeredVariables[u])}const s=e?t.filter(u=>!u.trainable):null,r=t.length;t=t.filter(u=>u.trainable),g(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:a,grads:o}=k.gradients(n,t,null,i);g(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),g(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return t.forEach((u,c)=>{o[c]!=null&&(l[u.name]=o[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:a,grads:l}}function sn(n){return k.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h0(n){const e={x:m(n,"x","neg")};return k.runKernel(Qu,e)}const ht=N({neg_:h0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p0(n){const e={x:m(n,"x","softplus")};return k.runKernel(Tc,e)}const ks=N({softplus_:p0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d0(n){const t=m(n,"x","logSigmoid");return sn(s=>({value:ht(ks(ht(s))),gradFunc:a=>T(a,Ge(ht(s)))}))(t)}const Hh=N({logSigmoid_:d0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0(n,t){let e=m(n,"a","sub"),s=m(t,"b","sub");[e,s]=Nt(e,s);const r={a:e,b:s};return k.runKernel(Dc,r)}const P=N({sub_:f0});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m0(n,t=-1){const e=m(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return sn((r,i)=>{const o=Ne(r,t,!0),l=P(r,o),u=P(B(l,"float32"),oe(W(ee(l),t,!0)));return i([u]),{value:u,gradFunc:(h,p)=>{const[f]=p,w=!0,y=ee(f);return P(h,T(W(h,t,w),y))}}})(e)}const Ma=N({logSoftmax_:m0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g0(n,t=null,e=!1){const s=m(n,"x","logSumExp"),r=ze(t,s.shape),i=Ne(s,r,!0),a=P(s,i),o=ee(a),l=W(o,r),u=oe(l),c=O(A(i,u.shape),u);if(e){const h=gs(c.shape,r);return A(c,h)}return c}const Qr=N({logSumExp_:g0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y0(n,t){const e=m(n,"a","logicalAnd","bool"),s=m(t,"b","logicalAnd","bool");lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(dg,r)}const je=N({logicalAnd_:y0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b0(n){const e={x:m(n,"x","logicalNot","bool")};return k.runKernel(fg,e)}const ti=N({logicalNot_:b0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w0(n,t){const e=m(n,"a","logicalOr","bool"),s=m(t,"b","logicalOr","bool");lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(mg,r)}const Pa=N({logicalOr_:w0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N0(n,t){const e=m(n,"a","logicalXor","bool"),s=m(t,"b","logicalXor","bool");return lt(e.shape,s.shape),je(Pa(n,t),ti(je(n,t)))}const Kh=N({logicalXor_:N0});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=2147483648;function S0(n,t,e="left"){const s=m(n,"sortedSequence","searchSorted"),r=m(t,"values","searchSorted"),i=s.shape[s.shape.length-1],a=r.shape[r.shape.length-1],o=A(s,[-1,i]),l=A(r,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(st(l.shape)>=hr)throw new Error(`values tensor size must less than ${hr}`);if(o.shape[1]>=hr)throw new Error(`trailing dim_size must less than ${hr} for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:e};return k.runKernel(zg,u,c)}const Va=N({searchSorted_:S0});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k0(n,t){return Va(n,t,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T0(n,t,e,s,r){const i=m(n,"x","maxPool"),a=1;let o=i,l=!1;i.rank===3&&(l=!0,o=A(i,[1,i.shape[0],i.shape[1],i.shape[2]])),g(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),g(rn(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),Zt("maxPool",s,r);const u={x:o},c={filterSize:t,strides:e,pad:s,dimRoundingMode:r},h=k.runKernel(ju,u,c);return l?A(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const ei=N({maxPool_:T0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I0(n,t=[1,1,1],e,s,r,i="NDHWC"){const a=m(n,"x","maxPool3d");let o=a,l=!1;a.rank===4&&(l=!0,o=A(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),g(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),g(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Zt("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:i},h=k.runKernel(qu,u,c);return l?A(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Zh=N({maxPool3d_:I0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v0(n,t,e,s,r=!1){const a={x:m(n,"x","maxPoolWithArgmax")},o={filterSize:t,strides:e,pad:s,includeBatchInIndex:r},l=k.runKernel(Ng,a,o);return{result:l[0],indexes:l[1]}}const E0=N({maxPoolWithArgmax_:v0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0(n,t){let e=m(n,"a","maximum"),s=m(t,"b","maximum");[e,s]=Nt(e,s),e.dtype==="bool"&&(e=B(e,"int32"),s=B(s,"int32")),lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(Gu,r)}const an=N({maximum_:$0});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A0(n,t=null,e=!1){const r={x:m(n,"x","mean")},i={axis:t,keepDims:e};return k.runKernel(Hu,r,i)}const wt=N({mean_:A0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(n,t="float32"){if(ue(n),t==="complex64"){const s=Dt(n,"float32"),r=Dt(n,"float32");return pn(s,r)}const e=wa(st(n),t);return k.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qt(n,t="float32"){if(ue(n),t==="complex64"){const s=Qt(n,"float32"),r=Dt(n,"float32");return pn(s,r)}const e=Zl(st(n),t);return k.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x0(n,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=m(n,"x","meshgrid",n instanceof mt?n.dtype:"float32");if(t===void 0)return[s];let r=m(t,"y","meshgrid",t instanceof mt?t.dtype:"float32");const i=st(s.shape),a=st(r.shape);return e==="xy"?(s=A(s,[1,-1]),r=A(r,[-1,1]),[X(Qt([a,1],s.dtype),s),X(r,Qt([1,i],r.dtype))]):(s=A(s,[-1,1]),r=A(r,[1,-1]),[X(s,Qt([1,a],s.dtype)),X(Qt([i,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D0(n,t){let e=m(n,"a","minimum"),s=m(t,"b","minimum");[e,s]=Nt(e,s),e.dtype==="bool"&&(e=B(e,"int32"),s=B(s,"int32")),lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(Zu,r)}const Wn=N({minimum_:D0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _0(n,t,e){g(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=m(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");g(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=e==="reflect"?1:0;for(let o=0;o<s.rank;o++)g(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),g(t[o][0]>=0&&t[o][0]<=s.shape[o]-r&&t[o][1]>=0&&t[o][1]<=s.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:t,mode:e},a={x:s};return k.runKernel(Ju,a,i)}const Jh=N({mirrorPad_:_0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C0(n,t){let e=m(n,"a","mod"),s=m(t,"b","mod");[e,s]=Nt(e,s);const r={a:e,b:s};return k.runKernel(Xu,r)}const Xh=N({mod_:C0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0(n,t=null,e=!1){n=m(n,"x","moments");const s=ze(t,n.shape),r=wt(n,s,e);let i=r.shape;e||(i=gs(r.shape,s));const a=it(P(B(n,"float32"),A(r,i))),o=wt(a,s,e);return{mean:r,variance:o}}const ni=N({moments_:O0});function F0(n,t,e,s){const r=m(t,"data","multiRNNCell"),i=vr(e,"c","multiRNNCell"),a=vr(s,"h","multiRNNCell");let o=r;const l=[];for(let h=0;h<n.length;h++){const p=n[h](o,i[h],a[h]);l.push(p[0]),l.push(p[1]),o=p[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const z0=N({multiRNNCell_:F0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0(n,t,e,s=!1){const r=m(n,"logits","multinomial"),i=r.size,a=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);e=e||Math.random();const l={logits:a===1?A(r,[1,-1]):r},u={numSamples:t,seed:e,normalized:s},c=k.runKernel(Sg,l,u);return a===1?A(c,[c.size]):c}const R0=N({multinomial_:L0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B0(n,t){let e=m(n,"a","notEqual","string_or_numeric"),s=m(t,"b","notEqual","string_or_numeric");[e,s]=Nt(e,s),lt(e.shape,s.shape);const r={a:e,b:s};return k.runKernel(kg,r)}const ys=N({notEqual_:B0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M0(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:m(n,"indices","oneHot","int32")},o={dtype:r,depth:t,onValue:e,offValue:s};return k.runKernel(ec,a,o)}const Wa=N({oneHot_:M0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P0(n){const e={x:m(n,"x","onesLike")};return k.runKernel(tc,e)}const le=N({onesLike_:P0});function V0(n,t){const e=m(n,"v1","outerProduct"),s=m(t,"v2","outerProduct");g(e.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${s.rank}.`);const r=A(e,[-1,1]),i=A(s,[1,-1]);return X(r,i)}const W0=N({outerProduct_:V0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0(n,t,e=0){const s=m(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:e},i={x:s};return k.runKernel(sc,i,r)}const Tn=N({pad_:U0});function G0(n,t,e=0){return g(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Tn(n,[t],e)}const j0=N({pad1d_:G0});function q0(n,t,e=0){return g(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Tn(n,t,e)}const H0=N({pad2d_:q0});function K0(n,t,e=0){return g(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Tn(n,t,e)}const Z0=N({pad3d_:K0});function J0(n,t,e=0){return g(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Tn(n,t,e)}const X0=N({pad4d_:J0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y0(n,t,e){const s=m(n,"x","spaceToBatchND");g(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),g(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),g(s.shape.reduce((a,o,l)=>l>0&&l<=t.length?a&&(o+e[l-1][0]+e[l-1][1])%t[l-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},i={blockShape:t,paddings:e};return k.runKernel(Ec,r,i)}const si=N({spaceToBatchND_:Y0});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q0(n,t,e,s,r,i,a){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const o=m(n,"x","maxPool");let l=o,u=!1;o.rank===3&&(u=!0,l=A(o,[1,o.shape[0],o.shape[1],o.shape[2]])),g(rn(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const c=kb(l.shape,t,i,r,s),h=[c.dilationHeight,c.dilationWidth];let p;s==="same"?p=eN([c.filterHeight,c.filterWidth],h):p=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[w,y]=tN([c.inHeight,c.inWidth],h,p),b=f?s:"valid",S=f?l:si(l,h,w),$=(e==="avg"?()=>jr(S,t,i,b,a):()=>ei(S,t,i,b,a))(),v=f?$:qr($,h,y);return u?A(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function tN(n,t,e){const s=e.map(c=>c[0]),r=e.map(c=>c[1]),i=n.concat(s,r),a=t.map((c,h)=>(c-i[h]%c)%c),o=r.map((c,h)=>c+a[h]),l=t.map((c,h)=>[s[h],o[h]]),u=t.map((c,h)=>[0,a[h]]);return[l,u]}function eN(n,t){const s=n.map((a,o)=>a+(a-1)*(t[o]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),i=s.map((a,o)=>a-r[o]);return s.map((a,o)=>[r[o],i[o]])}const Yh=N({pool_:Q0});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,t){const e=m(n,"x","prelu"),s=m(t,"alpha","prelu"),r={x:e,alpha:s};return k.runKernel(ic,r)}const ri=N({prelu_:nN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n,t=null,e=!1){let s=m(n,"x","prod");s.dtype==="bool"&&(s=B(s,"int32"));const r={x:s},i={axis:t,keepDims:e};return k.runKernel(ac,r,i)}const Qh=N({prod_:sN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,t,e,s){const r=n.map((c,h)=>m(c,`tensors${h}`,"raggedGather","int32")),i=m(t,"paramsDenseValues","raggedGather"),a=m(e,"indices","raggedGather","int32"),o={paramsNestedSplits:r,paramsDenseValues:i,indices:a},l={outputRaggedRank:s},u=k.runKernel(Eg,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const iN=N({raggedGather_:rN});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n,t,e){const s=m(n,"starts","raggedRange"),r=m(t,"limits","raggedRange",s.dtype),i=m(e,"deltas","raggedRange",s.dtype),a={starts:s,limits:r,deltas:i},o=k.runKernel($g,a);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const oN=N({raggedRange_:aN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n,t,e,s,r){const i=m(n,"shape","raggedTensorToTensor","int32"),a=m(t,"values","raggedTensorToTensor"),o=m(e,"defaultValue","raggedTensorToTensor",a.dtype),l=s.map((h,p)=>m(h,`tensors${p}`,"raggedTensorToTensor","int32")),u={shape:i,values:a,defaultValue:o,rowPartitionTensors:l},c={rowPartitionTypes:r};return k.runKernel(Ag,u,c)}const uN=N({raggedTensorToTensor_:lN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n,t,e){ue(n);const s=st(n);let r=null;if(e==null||e==="float32")r=new Float32Array(s);else if(e==="int32")r=new Int32Array(s);else if(e==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${e}`);for(let i=0;i<s;i++)r[i]=t();return k.makeTensor(r,n,e)}const hN=N({rand_:cN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ua{constructor(t,e,s,r,i){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=i||Math.random();this.random=ga.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,i,a;do r=2*this.random()-1,i=2*this.random()-1,a=r*r+i*i;while(a>=1||a===0);const o=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*o,e=this.mean+this.stdDev*i*o,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class pN{constructor(t,e,s,r){this.alpha=t,this.beta=1/e,this.dtype=s;const i=r||Math.random();this.randu=ga.alea(i.toString()),this.randn=new Ua(0,1,s,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,s,r,i,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,t=r*r,e=1-.331*t*t,s=.5*t+this.d*(1-a+Math.log(a)),i=this.randu(),i<e||Math.log(i)<s)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class dN{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ga.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(n,t,e=1,s="float32",r){if(ue(n),e==null&&(e=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const i=new pN(t,e,s,r),a=Hn(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const mN=N({randomGamma_:fN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,t=0,e=1,s,r){if(ue(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new Ua(t,e,s,!1,r),a=Hn(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const tp=N({randomNormal_:gN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return tp(n,0,1,t,e)}const bN=N({randomStandardNormal_:yN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n,t=0,e=1,s="float32",r){ue(n);const i=Hn(n,s),a=new dN(t,e,null,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const Zn=N({randomUniform_:wN});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(n,t,e,s){return Zn(n,t,e,"int32",s)}const SN=N({randomUniformInt_:NN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:t,step:e,dtype:s};return k.runKernel(xg,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n){const e={input:m(n,"input","real")};return k.runKernel(Dg,e)}const Us=N({real_:kN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n){const e={x:m(n,"x","reciprocal")};return k.runKernel(oc,e)}const ep=N({reciprocal_:TN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n){const e={x:m(n,"x","relu")};return k.runKernel(lc,e)}const He=N({relu_:IN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n){const e={x:m(n,"x","relu6")};return k.runKernel(pc,e)}const Ga=N({relu6_:vN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n,t){const s={x:m(n,"x","reverse")},r={dims:t};return k.runKernel(dc,s,r)}const ke=N({reverse_:EN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n){const t=m(n,"x","reverse");return g(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ke(t,0)}const AN=N({reverse1d_:$N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xN(n,t){const e=m(n,"x","reverse");return g(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),ke(e,t)}const DN=N({reverse2d_:xN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n,t){const e=m(n,"x","reverse");return g(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),ke(e,t)}const CN=N({reverse3d_:_N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n,t){const e=m(n,"x","reverse");return g(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),ke(e,t)}const FN=N({reverse4d_:ON});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(n){const e={x:m(n,"x","round")};return k.runKernel(fc,e)}const ja=N({round_:zN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n){const e={x:m(n,"x","rsqrt","float32")};return k.runKernel(mc,e)}const qa=N({rsqrt_:LN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n){const e={x:m(n,"x","selu")};return k.runKernel(yc,e)}const Ha=N({selu_:RN});function BN(n,t,e,s,r,i=[1,1],a="NHWC"){const o=m(n,"x","separableConv2d"),l=m(t,"depthwiseFilter","separableConv2d"),u=m(e,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(o.rank===3&&(h=!0,c=A(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");g(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),g(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),g(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),g(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),g(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const p=l.shape[2],f=l.shape[3];g(u.shape[2]===p*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${u.shape[2]}.`);const w=tr(c,l,s,r,a,i),b=fn(w,u,1,"valid",a);return h?A(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const Ka=N({separableConv2d_:BN});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function MN(n,t){const e=m(n,"x","setdiff1d"),s=m(t,"y","setdiff1d");g(e.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${s.dtype}).`),g(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),g(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await e.data(),i=await s.data(),a=new Set(i);let o=0;for(let c=0;c<r.length;c++)a.has(r[c])||o++;const l=new Li([o],e.dtype),u=new Li([o],"int32");for(let c=0,h=0;c<r.length;c++)a.has(r[c])||(l.values[h]=r[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const PN=MN;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n){const e={x:m(n,"x","sign")};return k.runKernel(Sc,e)}const np=N({sign_:VN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(n){const e={x:m(n,"x","sin","float32")};return k.runKernel(wc,e)}const Za=N({sin_:WN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(n){const e={x:m(n,"x","sinh")};return k.runKernel(Nc,e)}const Ja=N({sinh_:UN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n,t,e){const s=m(n,"x","slice1d");return g(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),tt(s,[t],[e])}const jN=N({slice1d_:GN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(n,t,e){const s=m(n,"x","slice2d");return g(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),tt(s,t,e)}const HN=N({slice2d_:qN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,t,e){const s=m(n,"x","slice3d");return g(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),tt(s,t,e)}const ZN=N({slice3d_:KN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n,t,e){const s=m(n,"x","slice4d");return g(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),tt(s,t,e)}const XN=N({slice4d_:JN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(n,t=-1){const e=m(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},r={dim:t};return k.runKernel(Ac,s,r)}const ii=N({softmax_:YN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n){g(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return k.runKernel(sg,t)}const ai=N({fft_:QN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1(n){g(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return k.runKernel(lg,t)}const Gs=N({ifft_:t1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e1(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=A(n,[e,t]);s=Gs(r)}else{const r=[e,2*(t-1)],i=A(Us(n),[e,t]),a=A(Jr(n),[e,t]),o=ke(tt(i,[0,1],[e,t-2]),1),l=T(ke(tt(a,[0,1],[e,t-2]),1),G(-1)),u=vt([i,o],1),c=vt([a,l],1),h=A(pn(u,c),[r[0],r[1]]);s=Gs(h)}if(s=Us(s),n.rank===3&&n.shape[0]!==0){const r=s,i=n.shape[0];s=A(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const Xa=N({irfft_:e1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n1(n,t,e=0){const r={x:m(n,"x","split")},i={numOrSizeSplits:t,axis:e};return k.runKernel($c,r,i)}const te=N({split_:n1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s1(n,t){g(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(t!=null&&t<e){const w=n.shape.map(b=>0),y=n.shape.map(b=>b);y[n.shape.length-1]=t,r=tt(n,w,y),e=t}else if(t!=null&&t>e){const w=n.shape.map(y=>y);w[n.shape.length-1]=t-e,r=vt([n,Dt(w)],n.shape.length-1),e=t}else r=n;const i=Y(r),a=A(pn(r,i),[s,e]),o=ai(a),l=Math.floor(e/2)+1,u=Us(o),c=Jr(o),h=te(u,[l,e-l],u.shape.length-1),p=te(c,[l,e-l],c.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=l,A(pn(h[0],p[0]),f)}const oi=N({rfft_:s1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r1(n,t){let e=m(n,"a","squaredDifference"),s=m(t,"b","squaredDifference");[e,s]=Nt(e,s),lt(e.shape,s.shape);const r={a:e,b:s},i={};return k.runKernel(xc,r,i)}const Ya=N({squaredDifference_:r1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i1(n,t){const e=m(n,"x","squeeze","string_or_numeric");return A(e,Sm(e.shape,t).newShape)}const Jn=N({squeeze_:i1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a1(n,t=0){const e=vr(n,"tensors","stack","string_or_numeric");g(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&g(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,r={axis:t};return k.runKernel(nc,s,r)}const ne=N({stack_:a1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o1(n,t=0){const s={x:m(n,"x","step")},r={alpha:t};return k.runKernel(Lc,s,r)}const Ts=N({step_:o1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l1(n,t,e,s,r=0,i=0,a=0,o=0,l=0){const c={x:m(n,"x","stridedSlice","string_or_numeric")},h={begin:t,end:e,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return k.runKernel(Ug,c,h)}const sp=N({stridedSlice_:l1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u1(n){const e={x:m(n,"x","tan","float32")};return k.runKernel(_c,e)}const rp=N({tan_:u1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(n,t){Ns(n);const e=Nn(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Sn(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zs(n,t,e){if(Ns(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Nn(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Sn(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ip(n,t,e){if(Ns(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Nn(n,e);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Sn(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c1(n,t,e){if(Ns(n),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Nn(n,e);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Sn(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h1(n,t,e){if(Ns(n),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Nn(n,e);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Sn(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p1(n,t,e){if(Ns(n),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Nn(n,e);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Sn(n,t,s,e)}function d1(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(i+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(i+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(i+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(e.shape[a]!==t.shape[a])throw new Error(i+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-r;++a)if(e.shape[a+r]!==n[a+s])throw new Error(i+` updates.shape[${a+r}] (${e.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function ap(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}d1(e,t,n)}function tx(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,i=e.length;let a=1;for(let h=r;h<i;++h)a*=e[h];const o=r<1?1:r,l=st(t.shape)/o,u=[...Xs(e.slice(0,r)),1],c=st(e);return{sliceRank:r,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1(n,t,e){const s=m(n,"tensor","tensorScatterupdate"),r=m(t,"indices","tensorScatterupdate","int32"),i=m(e,"updates","tensorScatterupdate");if(ap(i,r,s.shape),s.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${i.dtype}.`);const a={tensor:s,indices:r,updates:i},o={};return k.runKernel(Fg,a,o)}const m1=N({tensorScatterUpdate_:f1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g1(n,t=1,e=!0){const s=m(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const i={x:s},a={k:t,sorted:e},[o,l]=k.runKernel(Hg,i,a);return{values:o,indices:l}}const op=N({topk_:g1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y1(n,t=0,e=1,s,r){if(ue(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new Ua(t,e,s,!0,r),a=Hn(n,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const Qa=N({truncatedNormal_:y1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b1(n,t=0){const e=m(n,"x","unique","string_or_numeric");g(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[i,a]=k.runKernel(Zg,s,r);return{values:i,indices:a}}const lp=N({unique_:b1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w1(n,t,e){const s=m(n,"x","unsortedSegmentSum"),r=m(t,"segmentIds","unsortedSegmentSum","int32");g(Rs(e),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},a={numSegments:e};return k.runKernel(Fc,i,a)}const to=N({unsortedSegmentSum_:w1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N1(n,t=0){const e=m(n,"x","unstack","string_or_numeric");g(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},r={axis:t};return k.runKernel(Oc,s,r)}const Te=N({unstack_:N1});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S1(n,t){return Va(n,t,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function up(n,t=!0,e,s){return k.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function k1(n){const t=m(n,"condition","whereAsync","bool"),e=await t.data(),s=am(t.shape,e);return n!==t&&t.dispose(),s}const cp=k1;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function T1(n,t,e){const s=m(n,"tensor","boolMask"),r=m(t,"mask","boolMask","bool"),i=e==null?0:e,a=r.rank,o=s.shape;g(a>0,()=>"mask cannot be scalar"),Ie(o.slice(i,i+a),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let y=i;y<i+a;y++)l*=o[y];const u=o.slice(0,i).concat([l],o.slice(i+a)),c=A(s,u),h=A(r,[-1]),p=await cp(h),f=Jn(p,[1]),w=Zr(c,f,i);return n!==s&&s.dispose(),t!==r&&r.dispose(),f.dispose(),c.dispose(),h.dispose(),p.dispose(),w}const I1=T1;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v1(n,t,e){const s=m(n,"x","transpose");if(t==null&&(t=s.shape.map((a,o)=>o).reverse()),g(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(a=>{g(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},i={perm:t};return s.dtype==="complex64"?x(()=>{let a=Us(s),o=Jr(s);return a=k.runKernel(gr,{x:a},i),o=k.runKernel(gr,{x:o},i),e&&(o=ht(o)),pn(a,o)}):k.runKernel(gr,r,i)}const Q=N({transpose_:v1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E1(n,t,e,s,r=!0){const i=m(n,"v","movingAverage"),a=m(t,"x","movingAverage"),o=m(e,"decay","movingAverage");my(i,a),g(Ot(i.shape,a.shape),()=>"Shape mismatch in v and x");const l=G(1),u=P(l,o);let c=T(P(a,i),u);if(r){g(s!=null,()=>"When using zeroDebias: true, step is required.");const h=m(s,"step","movingAverage");c=U(c,P(l,nn(o,h)))}return O(i,c)}const $1=N({movingAverage_:E1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A1(n,t,e){ue(e);const s=m(n,"indices","scatterND","int32"),r=m(t,"updates","scatterND");ap(r,s,e);const i={indices:s,updates:r},a={shape:e};return k.runKernel(Og,i,a)}const x1=N({scatterND_:A1});function D1(n,t,e,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,i=n.rank>1?n.shape[1]:1;if(e.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${i}.`);const a=t.size;if(!(t.rank===0||t.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _1(n,t,e,s=0){ue(e);const r=m(n,"sparseIndices","sparseToDense","int32"),i=m(t,"sparseValues","sparseToDense","string_or_numeric"),a=m(s,"defaultValue","sparseToDense",i.dtype);D1(r,i,e,a);const o={sparseIndices:r,sparseValues:i,defaultValue:a},l={outputShape:e};return k.runKernel(Pg,o,l)}const C1=N({sparseToDense_:_1});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O1(n,t){const e=m(t,"indices","gatherND","int32"),r={params:m(n,"x","gatherND","string_or_numeric"),indices:e};return k.runKernel(ag,r)}const F1=N({gatherND_:O1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z1(n,t){if(t==null)return n.shape.slice();if(Ot(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1(n,t,e,s){const r=m(n,"x","dropout");if(g(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),g(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof mt?r.clone():r;const i=z1(r,e),a=1-t,o=U(nr(O(Zn(i,0,1,"float32",s),a)),a);return T(r,o)}const R1=N({dropout_:L1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hp(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function eo(n,t,e){const s=1-n%2,r=new Float32Array(n);for(let i=0;i<n;++i){const a=2*Math.PI*i/(n+s-1);r[i]=t-e*Math.cos(a)}return Ht(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function B1(n,t,e=1){const s=m(n,"predictions","inTopK"),r=m(t,"targets","inTopK");g(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),g(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Ie(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=s.shape[s.shape.length-1];g(e>0&&e<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${e}`);const a=await s.data(),o=await r.data(),[l,u]=[a.length/i,i],c=km("bool",l);for(let h=0;h<l;h++){const p=h*u,f=a.subarray(p,p+u),w=[];for(let y=0;y<f.length;y++)w.push({value:f[y],index:y});w.sort((y,b)=>b.value-y.value),c[h]=0;for(let y=0;y<e;y++)if(w[y].index===o[h]){c[h]=1;break}}return n!==s&&s.dispose(),t!==r&&r.dispose(),De(c,r.shape,"bool")}const M1=B1;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P1(n,t,e,s,r,i="NHWC",a){let o=n;n.rank===3&&(o=A(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=A(t,[1,t.shape[0],t.shape[1],t.shape[2]])),g(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),g(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),g(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const u=i==="NHWC"?o.shape[3]:o.shape[1],c=i==="NHWC"?l.shape[3]:l.shape[1];g(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),g(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),Zt("conv2dDerFilter",r,a);const h={x:o,dy:l},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:e};return k.runKernel(Wm,h,p)}const no=N({conv2DBackpropFilter_:P1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function so(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return T(n,Ts(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function ro(n,t){let e=t;const s=Ft(n.shape,t.shape);return s.length>0&&(e=W(e,s)),A(e,n.shape)}function io(n,t,e,s){if(t==="linear")return n;if(t==="relu")return He(n);if(t==="elu")return Kr(n);if(t==="relu6")return Ga(n);if(t==="prelu")return ri(n,e);if(t==="leakyrelu")return Xr(n,s);if(t==="sigmoid")return Ge(n);throw new Error(`Unknown fused activation ${t}.`)}const ao=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V1({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",ao(k.state.gradientDepth,l)===!1){g(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=fn(n,t,e,s,r,i,a);return o!=null&&(C=O(C,o)),io(C,l,u,c)}const h=m(n,"x","conv2d","float32"),p=m(t,"filter","conv2d","float32");let f=h,w=!1;h.rank===3&&(w=!0,f=A(h,[1,h.shape[0],h.shape[1],h.shape[2]])),g(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),g(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),Zt("fused conv2d",s,a);const y=r==="NHWC"?f.shape[3]:f.shape[1];g(p.shape[2]===y,()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${p.shape[2]}.`),g(rn(e,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);const b=Gr(f.shape,p.shape,e,i,s,a);let S;o!=null&&(S=m(o,"bias","fused conv2d"),[S]=Nt(S,h),r==="NHWC"?lt(b.outShape,S.shape):(g(S.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${S.shape.length}.`),g(S.shape.length===0||S.shape[0]===b.outChannels||S.shape[0]===1,()=>`Error in fused conv2d: bias shape (${S.shape}) is not compatible with the number of output channels (${b.outChannels})`)));let I;if(u!=null){const C=u.shape;if(g(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)g(C[0]===1||C[0]===b.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${b.outChannels}).`);else if(C.length===3)try{lt(C,b.outShape)}catch{const L=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(L)}I=m(u,"prelu weights","fused conv2d")}const $=(C,M)=>{g(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[L,z,V,j]=M,rt=so(C,V,l);g(Pn(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const yt=Ca(z.shape,rt,L,e,s),St=no(z,rt,L.shape,e,s),bt=[yt,St];if(j!=null){const Gt=ro(j,rt);bt.push(Gt)}return bt},v={x:f,filter:p,bias:S,preluActivationWeights:I},D={strides:e,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return o==null?sn((M,L,z)=>{let V=k.runKernel(Mo,v,D);return z([L,M,V]),w&&(V=A(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:$}})(f,p):sn((M,L,z,V)=>{let j=k.runKernel(Mo,v,D);return V([L,M,j,z]),w&&(j=A(j,[j.shape[1],j.shape[2],j.shape[3]])),{value:j,gradFunc:$}})(f,p,S)}const pp=N({fusedConv2d_:V1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W1(n,t,e,s,r,i=[1,1],a){let o=n;n.rank===3&&(o=A(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=A(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:e};return k.runKernel(Zm,u,c)}const dp=N({depthwiseConv2dNativeBackpropFilter_:W1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1(n,t,e,s,r,i=[1,1],a){let o=t,l=!1;t.rank===3&&(l=!0,o=A(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:e},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:n},h=k.runKernel(Jm,u,c);return l?A(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const fp=N({depthwiseConv2dNativeBackpropInput_:U1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(ao(k.state.gradientDepth,l)===!1){let D=tr(n,t,e,s,r,i,a);return o!=null&&(D=O(D,o)),io(D,l,u,c)}const h=m(n,"x","depthwiseConv2d","float32"),p=m(t,"filter","depthwiseConv2d","float32");let f=h,w=!1;h.rank===3&&(w=!0,f=A(h,[1,h.shape[0],h.shape[1],h.shape[2]])),g(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),g(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),g(f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),i==null&&(i=[1,1]),g(rn(e,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Zt("fused depthwiseConv2d",s,a);const y=Gr(f.shape,p.shape,e,i,s,a,!0);let b;o!=null&&(b=m(o,"bias","fused conv2d"),[b]=Nt(b,h),lt(y.outShape,b.shape));let S;u!=null&&(S=m(u,"prelu weights","fused depthwiseConv2d"));const I=(D,C)=>{g(Pn(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[M,L,z,V]=C,j=so(D,z,l),rt=fp(L.shape,j,M,e,s,i,a),yt=dp(L,j,M.shape,e,s,i,a);if(V!=null){const St=ro(b,j);return[rt,yt,St]}return[rt,yt]},$={x:f,filter:p,bias:b,preluActivationWeights:S},v={strides:e,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return o==null?sn((C,M,L)=>{let z=k.runKernel(Po,$,v);return L([M,C,z]),w&&(z=A(z,[z.shape[1],z.shape[2],z.shape[3]])),{value:z,gradFunc:I}})(f,p):sn((C,M,L,z)=>{let V=k.runKernel(Po,$,v);return z([M,C,V,L]),w&&(V=A(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:I}})(f,p,b)}const j1=N({fusedDepthwiseConv2d_:G1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q1({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(ao(k.state.gradientDepth,i)===!1){let j=X(n,t,e,s);return r!=null&&(j=O(j,r)),io(j,i,a,o)}let l=m(n,"a","fused matMul"),u=m(t,"b","fused matMul");[l,u]=Nt(l,u);const c=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=s?u.shape[u.rank-2]:u.shape[u.rank-1],w=l.shape.slice(0,-2),y=u.shape.slice(0,-2),b=st(w),S=st(y);g(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${s} must match.`);const $=lt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),v=e?A(l,[b,c,p]):A(l,[b,p,c]),D=s?A(u,[S,f,h]):A(u,[S,h,f]);let C;r!=null&&(C=m(r,"bias","fused matMul"),[C]=Nt(C,l),lt($,C.shape));let M;a!=null&&(M=m(a,"prelu weights","fused matMul"));const L=(j,rt)=>{const[yt,St,bt,Gt]=rt,Pt=so(A(j,bt.shape),bt,i);let he,Ke;if(!e&&!s?(he=X(Pt,St,!1,!0),Ke=X(yt,Pt,!0,!1)):!e&&s?(he=X(Pt,St,!1,!1),Ke=X(Pt,yt,!0,!1)):e&&!s?(he=X(St,Pt,!1,!0),Ke=X(yt,Pt,!1,!1)):(he=X(St,Pt,!0,!0),Ke=X(Pt,yt,!0,!0)),r!=null){const lr=ro(Gt,Pt);return[he,Ke,lr]}else return[he,Ke]},z={a:v,b:D,bias:C,preluActivationWeights:M},V={transposeA:e,transposeB:s,activation:i,leakyreluAlpha:o};return r==null?sn((rt,yt,St)=>{const bt=k.runKernel(Bo,z,V);return St([rt,yt,bt]),{value:A(bt,$),gradFunc:L}})(v,D):sn((rt,yt,St,bt)=>{const Gt=k.runKernel(Bo,z,V);return bt([rt,yt,Gt,St]),{value:A(Gt,$),gradFunc:L}})(v,D,C)}const H1=N({fusedMatMul_:q1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K1=Object.freeze(Object.defineProperty({__proto__:null,conv2d:pp,depthwiseConv2d:j1,matMul:H1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1(n){return eo(n,.54,.46)}const J1=N({hammingWindow_:Z1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1(n){return eo(n,.5,.5)}const mp=N({hannWindow_:X1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1(n,t,e,s=!1,r=0){let i=0;const a=[];for(;i+t<=n.size;)a.push(tt(n,i,t)),i+=e;if(s)for(;i<n.size;){const o=i+t-n.size,l=vt([tt(n,i,t-o),Ss([o],r)]);a.push(l),i+=e}return a.length===0?zs([],[0,t]):A(vt(a),[a.length,t])}const gp=N({frame_:Y1});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q1(n,t,e,s,r=mp){s==null&&(s=hp(t));const i=gp(n,t,e),a=T(i,r(t));return oi(a,s)}const tS=N({stft_:Q1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n,t,e,s,r="bilinear",i=0){const a=m(n,"image","cropAndResize"),o=m(t,"boxes","cropAndResize","float32"),l=m(e,"boxInd","cropAndResize","int32"),u=o.shape[0];g(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),g(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),g(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),g(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),g(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),g(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:a,boxes:o,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s};return k.runKernel(qm,c,h)}const nS=N({cropAndResize_:eS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sS(n){const t=m(n,"image","flipLeftRight","float32");g(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return k.runKernel(ig,e,{})}const rS=N({flipLeftRight_:sS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n){const t=m(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];g(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),g(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,xe(t,r)}const aS=N({grayscaleToRGB_:iS});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n){const t=m(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];g(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),g(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=t.dtype,i=B(t,"float32"),a=Ht([.2989,.587,.114]);let o;switch(t.rank){case 2:o=ss("ij,j->i",i,a);break;case 3:o=ss("ijk,k->ij",i,a);break;case 4:o=ss("ijkl,l->ijk",i,a);break;case 5:o=ss("ijklm,m->ijkl",i,a);break;case 6:o=ss("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=Ut(o,-1),B(o,r)}const lS=N({rgbToGrayscale_:oS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,t,e=0,s=.5){const r=m(n,"image","rotateWithOffset","float32");g(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},a={radians:t,fillValue:e,center:s};return k.runKernel(Jg,i,a)}const cS=N({rotateWithOffset_:uS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(n,t,e,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const a=n.shape[0];return e=Math.min(e,a),g(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),g(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),g(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),g(t.rank===1,()=>"scores must be a 1D tensor"),g(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),g(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const i=m(n,"boxes","nonMaxSuppression","float32"),a=m(t,"scores","nonMaxSuppression","float32"),o=Is(i,a,e,s,r);e=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:e,iouThreshold:s,scoreThreshold:r};return k.runKernel(Tg,{boxes:i,scores:a},l)}const pS=N({nonMaxSuppression_:hS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function dS(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const i=m(n,"boxes","nonMaxSuppressionAsync"),a=m(t,"scores","nonMaxSuppressionAsync"),o=Is(i,a,e,s,r);e=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=om(u,c,e,s,r);return i!==n&&i.dispose(),a!==t&&a.dispose(),Ht(h,"int32")}const fS=dS;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=m(n,"boxes","nonMaxSuppression"),o=m(t,"scores","nonMaxSuppression"),l=Is(a,o,e,s,r,i);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},c={maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},h=k.runKernel(vg,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const gS=N({nonMaxSuppressionWithScore_:mS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function yS(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=m(n,"boxes","nonMaxSuppressionAsync"),o=m(t,"scores","nonMaxSuppressionAsync"),l=Is(a,o,e,s,r,i);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:f}=lm(c,h,e,s,r,i);return a!==n&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:Ht(p,"int32"),selectedScores:Ht(f)}}const bS=yS;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=m(n,"boxes","nonMaxSuppression"),o=m(t,"scores","nonMaxSuppression"),l=Is(a,o,e,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,p={boxes:a,scores:o},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},w=k.runKernel(Ig,p,f);return{selectedIndices:w[0],validOutputs:w[1]}}const NS=N({nonMaxSuppressionPadded_:wS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function SS(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=m(n,"boxes","nonMaxSuppressionAsync"),o=m(t,"scores","nonMaxSuppressionAsync"),l=Is(a,o,e,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,f]=await Promise.all([a.data(),o.data()]),{selectedIndices:w,validOutputs:y}=um(p,f,u,c,h,i);return a!==n&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:Ht(w,"int32"),validOutputs:G(y,"int32")}}const kS=SS;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n,t,e=!1,s=!1){const r=m(n,"images","resizeBilinear");g(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),g(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),g(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,a=!1;r.rank===3&&(a=!0,i=A(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const o={images:i},l={alignCorners:e,halfPixelCenters:s,size:t},u=k.runKernel(hc,o,l);return a?A(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const yp=N({resizeBilinear_:TS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(n,t,e=!1,s=!1){const r=m(n,"images","resizeNearestNeighbor");g(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),g(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),g(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),g(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,a=!1;r.rank===3&&(a=!0,i=A(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const o={images:i},l={alignCorners:e,halfPixelCenters:s,size:t},u=k.runKernel(cc,o,l);return a?A(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const bp=N({resizeNearestNeighbor_:IS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(n,t="binary",e=!1,s=.5){const r=m(n,"image","threshold"),i=.2989,a=.587,o=.114,l=r.shape[0]*r.shape[1];let u=T(Ht([s]),255),c,h,p,f;if(g(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),g(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),g(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),g(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,h,p]=te(r,[1,1,1],-1);const b=T(c,i),S=T(h,a),I=T(p,o);f=O(O(b,S),I)}else f=n;if(t==="otsu"){const b=xh(B(ja(f),"int32"),De([]),256);u=ES(b,l)}const w=e?Kn(f,u):ie(f,u);return B(T(w,255),"int32")}function ES(n,t){let e=Ht([-1]),s=Ht([0]),r=Ht([0]),i,a,o,l,u,c;for(let h=0;h<n.size-1;h++){i=tt(n,0,h+1),a=tt(n,h+1),u=U(W(i),t),c=U(W(a),t);const p=W(T(i,bs(0,i.size)));o=U(p,W(i));const f=Ss(a.shape,i.size),w=O(bs(0,a.size),f),y=T(a,w);l=U(W(y),W(a));const b=P(o,l),S=P(o,l),I=T(u,c);r=T(T(I,b),S);const $=ie(r,s);s=Bt($,r,s),e=Bt($,Ht([h]),e)}return e}const $S=N({threshold_:vS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n,t,e="nearest",s="constant",r=0,i){const a=m(n,"image","transform","float32"),o=m(t,"transforms","transform","float32");g(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),g(o.rank===2&&(o.shape[0]===a.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),g(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:a,transforms:o},u={interpolation:e,fillMode:s,fillValue:r,outputShape:i};return k.runKernel(Kg,l,u)}const xS=N({transform_:AS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(n,t,e){const s=m(n,"a","bandPart");g(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,a]=s.shape.slice(-2);let o,l;typeof t=="number"?(g(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),g(t<=i,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`),o=m(t<0?i:t,"numLower","bandPart")):(g(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=Bt(Ws(t,0),i,Wn(t,i))),typeof e=="number"?(g(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),g(e<=a,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`),l=m(e<0?a:e,"numUpper","bandPart")):(g(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Bt(Ws(e,0),a,Wn(e,a)));const u=A(bs(0,i,1,"int32"),[-1,1]),c=bs(0,a,1,"int32"),h=P(u,c),p=je(Kn(h,o),kn(h,ht(l))),f=Dt([i,a],s.dtype);return A(ne(Te(A(s,[-1,i,a])).map(w=>Bt(p,w,f))),r)}const _S=N({bandPart_:DS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(n){let t;if(Array.isArray(n)){t=!1,g(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let i=1;i<n.length;++i)g(n[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${r})`)}else t=!0,n=te(n,n.shape[0],0).map(r=>Jn(r,[0]));g(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(k.tidy(()=>{let i=s[r];if(r>0)for(let a=0;a<r;++a){const o=T(W(T(e[a],i)),e[a]);i=P(i,o)}return U(i,er(i,"euclidean"))}));return t?ne(e,0):e}const OS=N({gramSchmidt_:CS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n,t=!1){if(g(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return sl(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=Te(A(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],i=[];s.forEach(l=>{const[u,c]=sl(l,t);r.push(u),i.push(c)});const a=A(ne(r,0),n.shape),o=A(ne(i,0),n.shape);return[a,o]}}function sl(n,t=!1){return k.tidy(()=>{g(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=Ba(e),i=tn(n);const a=zs([[1]],[1,1]);let o=tn(a);const l=e>=s?s:e;for(let u=0;u<l;++u){const c=i,h=o,p=r;[o,i,r]=k.tidy(()=>{const f=tt(i,[u,u],[e-u,1]),w=er(f),y=tt(i,[u,u],[1,1]),b=Bt(ie(y,0),zs([[-1]]),zs([[1]])),S=P(y,T(b,w)),I=U(f,S);I.shape[0]===1?o=tn(a):o=vt([a,tt(I,[1,0],[I.shape[0]-1,I.shape[1]])],0);const $=ht(U(X(b,S),w)),v=tt(i,[u,0],[e-u,s]),D=T($,o),C=Q(o);if(u===0)i=P(v,X(D,X(C,v)));else{const z=P(v,X(D,X(C,v)));i=vt([tt(i,[0,0],[u,s]),z],0)}const M=Q(D),L=tt(r,[0,u],[e,r.shape[1]-u]);if(u===0)r=P(L,X(X(L,o),M));else{const z=P(L,X(X(L,o),M));r=vt([tt(r,[0,0],[e,u]),z],1)}return[o,i,r]}),Z([c,h,p])}return!t&&e>s&&(r=tt(r,[0,0],[e,s]),i=tt(i,[0,0],[s,s])),[r,i]})}const zS=N({qr_:FS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qt;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(qt||(qt={}));function LS(n,t,e=qt.SUM_BY_NONZERO_WEIGHTS){const s=m(n,"losses","computeWeightedLoss");let r=null;t!=null&&(r=m(t,"weights","computeWeightedLoss"));const i=r==null?s:T(s,r);if(e===qt.NONE)return i;if(e===qt.SUM)return W(i);if(e===qt.MEAN){if(r==null)return wt(i);{const a=s.size/r.size,o=U(W(i),W(r));return a>1?U(o,G(a)):o}}if(e===qt.SUM_BY_NONZERO_WEIGHTS){if(r==null)return U(W(i),G(s.size));{const a=T(r,Qt(s.shape)),o=B(W(ys(a,G(0))),"float32");return U(W(i),o)}}throw Error(`Unknown reduction: ${e}`)}const on=N({computeWeightedLoss_:LS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(n,t,e,s=qt.SUM_BY_NONZERO_WEIGHTS){const r=m(n,"labels","absoluteDifference"),i=m(t,"predictions","absoluteDifference");let a=null;e!=null&&(a=m(e,"weights","absoluteDifference")),Ie(r.shape,i.shape,"Error in absoluteDifference: ");const o=At(P(r,i));return on(o,a,s)}const BS=N({absoluteDifference_:RS});function MS(n,t,e,s,r=qt.SUM_BY_NONZERO_WEIGHTS){const i=m(n,"labels","cosineDistance"),a=m(t,"predictions","cosineDistance");let o=null;s!=null&&(o=m(s,"weights","cosineDistance")),Ie(i.shape,a.shape,"Error in cosineDistance: ");const l=G(1),u=P(l,W(T(i,a),e,!0));return on(u,o,r)}const PS=N({cosineDistance_:MS});function VS(n,t,e,s=qt.SUM_BY_NONZERO_WEIGHTS){let r=m(n,"labels","hingeLoss");const i=m(t,"predictions","hingeLoss");let a=null;e!=null&&(a=m(e,"weights","hingeLoss")),Ie(r.shape,i.shape,"Error in hingeLoss: ");const o=G(1);r=P(T(G(2),r),o);const l=He(P(o,T(r,i)));return on(l,a,s)}const WS=N({hingeLoss_:VS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(n,t,e,s=1,r=qt.SUM_BY_NONZERO_WEIGHTS){const i=m(n,"labels","huberLoss"),a=m(t,"predictions","huberLoss");let o=null;e!=null&&(o=m(e,"weights","huberLoss")),Ie(i.shape,a.shape,"Error in huberLoss: ");const l=G(s),u=At(P(a,i)),c=Wn(u,l),h=P(u,c),p=O(T(G(.5),it(c)),T(l,h));return on(p,o,r)}const GS=N({huberLoss_:US});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n,t,e,s=1e-7,r=qt.SUM_BY_NONZERO_WEIGHTS){const i=m(n,"labels","logLoss"),a=m(t,"predictions","logLoss");let o=null;e!=null&&(o=m(e,"weights","logLoss")),Ie(i.shape,a.shape,"Error in logLoss: ");const l=G(1),u=G(s),c=ht(T(i,oe(O(a,u)))),h=T(P(l,i),oe(O(P(l,a),u))),p=P(c,h);return on(p,o,r)}const qS=N({logLoss_:jS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n,t,e,s=qt.SUM_BY_NONZERO_WEIGHTS){const r=m(n,"labels","meanSquaredError"),i=m(t,"predictions","meanSquaredError");let a=null;e!=null&&(a=m(e,"weights","meanSquaredError")),Ie(r.shape,i.shape,"Error in meanSquaredError: ");const o=Ya(r,i);return on(o,a,s)}const KS=N({meanSquaredError_:HS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(n,t){const e=m(n,"labels","sigmoidCrossEntropyWithLogits"),s=m(t,"logits","sigmoidCrossEntropyWithLogits");Ie(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=He(s),i=T(s,e),a=Yr(ee(ht(At(s))));return O(P(r,i),a)}function JS(n,t,e,s=0,r=qt.SUM_BY_NONZERO_WEIGHTS){let i=m(n,"multiClassLabels","sigmoidCrossEntropy");const a=m(t,"logits","sigmoidCrossEntropy");let o=null;if(e!=null&&(o=m(e,"weights","sigmoidCrossEntropy")),Ie(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=G(s),c=G(1),h=G(.5);i=O(T(i,P(c,u)),T(h,u))}const l=ZS(i,a);return on(l,o,r)}const XS=N({sigmoidCrossEntropy_:JS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YS(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return sn((r,i,a)=>{const l=Qr(i,[e],!0),u=P(B(i,"float32"),l);a([r,u]);const c=ht(T(u,r));return{value:W(c,[e]),gradFunc:(f,w)=>{const[y,b]=w,S=gs(f.shape,[e]);return[T(A(f,S),P(B(y,"float32"),ee(b))),T(A(f,S),P(ee(b),B(y,"float32")))]}}})(n,t)}function QS(n,t,e,s=0,r=qt.SUM_BY_NONZERO_WEIGHTS){let i=m(n,"onehotLabels","softmaxCrossEntropy");const a=m(t,"logits","softmaxCrossEntropy");let o=null;if(e!=null&&(o=m(e,"weights","softmaxCrossEntropy")),Ie(i.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const u=G(s),c=G(1),h=G(i.shape[1]);i=O(T(i,P(c,u)),U(u,h))}const l=YS(i,a);return on(l,o,r)}const tk=N({softmaxCrossEntropy_:QS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(n,t,e,s){const r=m(n,"indices","sparseFillEmptyRows","int32"),i=m(t,"values","sparseFillEmptyRows"),a=m(e,"denseShape","sparseFillEmptyRows","int32"),o=m(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:i,denseShape:a,defaultValue:o},u=k.runKernel(Lg,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const nk=N({sparseFillEmptyRows_:ek});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(n,t,e){const s=m(n,"inputIndices","sparseReshape","int32"),r=m(t,"inputShape","sparseReshape","int32"),i=m(e,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:s,inputShape:r,newShape:i},o=k.runKernel(Rg,a);return{outputIndices:o[0],outputShape:o[1]}}const rk=N({sparseReshape_:sk});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(n,t,e){const s=m(n,"data","sparseSegmentMean"),r=m(t,"indices","sparseSegmentMean","int32"),i=m(e,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return k.runKernel(Bg,a)}const ak=N({sparseSegmentMean_:ik});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n,t,e){const s=m(n,"data","sparseSegmentSum"),r=m(t,"indices","sparseSegmentSum","int32"),i=m(e,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const a={data:s,indices:r,segmentIds:i};return k.runKernel(Mg,a)}const lk=N({sparseSegmentSum_:ok});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uk(n,t,e,s,r,i,a,o){const l=m(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=m(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:e,nGramWidths:s,leftPad:r,rightPad:i,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},p=k.runKernel(Gg,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}const ck=N({stringNGrams_:uk});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk(n,t,e=!0){const s=m(n,"input","stringSplit","string"),r=m(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:e},a={input:s,delimiter:r},o=k.runKernel(jg,a,i);return{indices:o[0],values:o[1],shape:o[2]}}const pk=N({stringSplit_:hk});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dk(n,t){const e=m(n,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:e};return k.runKernel(qg,r,s)}const fk=N({stringToHashBucketFast_:dk});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mk(n,t,e,s=!0){const r=m(n,"input","staticRegexReplace","string"),i={pattern:t,rewrite:e,replaceGlobal:s};return k.runKernel(Wg,{x:r},i)}const gk=N({staticRegexReplace_:mk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk={fft:ai,ifft:Gs,rfft:oi,irfft:Xa},bk={hammingWindow:J1,hannWindow:mp,frame:gp,stft:tS},Ve={flipLeftRight:rS,grayscaleToRGB:aS,resizeNearestNeighbor:bp,resizeBilinear:yp,rgbToGrayscale:lS,rotateWithOffset:cS,cropAndResize:nS,nonMaxSuppression:pS,nonMaxSuppressionAsync:fS,nonMaxSuppressionWithScore:gS,nonMaxSuppressionWithScoreAsync:bS,nonMaxSuppressionPadded:NS,nonMaxSuppressionPaddedAsync:kS,threshold:$S,transform:xS},wp={bandPart:_S,gramSchmidt:OS,qr:zS},wk={absoluteDifference:BS,computeWeightedLoss:on,cosineDistance:PS,hingeLoss:WS,huberLoss:GS,logLoss:qS,meanSquaredError:KS,sigmoidCrossEntropy:XS,softmaxCrossEntropy:tk},Nk={sparseFillEmptyRows:nk,sparseReshape:rk,sparseSegmentMean:ak,sparseSegmentSum:lk},Sk={stringNGrams:ck,stringSplit:pk,stringToHashBucketFast:fk,staticRegexReplace:gk};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=new Map,Tk=new Map;class vs{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class me{constructor(){this.classNameMap={}}static getMap(){return me.instance==null&&(me.instance=new me),me.instance}static register(t){me.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function F(n,t,e){g(n.className!=null,()=>"Class being registered does not have the static className property defined."),g(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),g(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,r=t+">"+s;return me.register(n),kk.set(r,n),Tk.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class In extends vs{minimize(t,e=!1,s){const{value:r,grads:i}=this.computeGradients(t,s);if(s!=null){const a=s.map(o=>({name:o.name,tensor:i[o.name]}));this.applyGradients(a)}else this.applyGradients(i);return Z(i),e?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return c0(t,e)}dispose(){this.iterations_!=null&&Z(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:G(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(In,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Np extends In{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=k.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=k.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:x(()=>Y(i).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:x(()=>Y(i).variable(a))});const o=Array.isArray(t)?t[r].tensor:t[s];if(o==null)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;x(()=>{const c=O(T(l,this.rho),T(it(o),1-this.rho)),h=T(U(Lt(O(u,this.epsilon)),Lt(O(l,this.epsilon))),o),p=O(T(u,this.rho),T(it(h),1-this.rho));l.assign(c),u.assign(p);const f=O(T(h,-this.learningRate),i);i.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Z(this.accumulatedGrads.map(t=>t.variable)),Z(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sp extends In{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=k.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:x(()=>Ss(i.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const o=this.accumulatedGrads[r].variable;x(()=>{const l=O(o,it(a));o.assign(l);const u=O(T(U(a,Lt(O(l,k.backend.epsilon()))),-this.learningRate),i);i.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Z(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kp extends In{static get className(){return"Adam"}constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],x(()=>{this.accBeta1=G(e).variable(),this.accBeta2=G(s).variable()}),r==null&&(this.epsilon=k.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);x(()=>{const s=P(1,this.accBeta1),r=P(1,this.accBeta2);e.forEach((i,a)=>{const o=k.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:x(()=>Y(o).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${i}/v`,variable:x(()=>Y(o).variable(l))});const u=Array.isArray(t)?t[a].tensor:t[i];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,p=O(T(c,this.beta1),T(u,1-this.beta1)),f=O(T(h,this.beta2),T(it(u),1-this.beta2)),w=U(p,s),y=U(f,r);c.assign(p),h.assign(f);const b=O(T(U(w,O(Lt(y),this.epsilon)),-this.learningRate),o);o.assign(b)}),this.accBeta1.assign(T(this.accBeta1,this.beta1)),this.accBeta2.assign(T(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Z(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Z(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),x(()=>{this.accBeta1.assign(nn(this.beta1,this.iterations_+1)),this.accBeta2.assign(nn(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tp extends In{static get className(){return"Adamax"}constructor(t,e,s,r=null,i=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],x(()=>{this.iteration=G(0).variable(),this.accBeta1=G(e).variable()}),r==null&&(this.epsilon=k.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);x(()=>{const s=P(1,this.accBeta1),r=U(-this.learningRate,O(T(this.iteration,this.decay),1));e.forEach((i,a)=>{const o=k.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:Y(o).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${i}/v`,variable:Y(o).variable(l)});const u=Array.isArray(t)?t[a].tensor:t[i];if(u==null)return;const c=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,p=O(T(c,this.beta1),T(u,1-this.beta1)),f=T(h,this.beta2),w=At(u),y=an(f,w);c.assign(p),h.assign(y);const b=O(T(U(r,s),U(p,O(y,this.epsilon))),o);o.assign(b)}),this.iteration.assign(O(this.iteration,1)),this.accBeta1.assign(T(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Z(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Z(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oo extends In{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const a=k.registeredVariables[s];x(()=>{const o=O(T(this.c,i),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=_t(G(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ip extends oo{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=G(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=k.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:x(()=>Y(i).variable(!1))});const a=this.accumulations[r].variable,o=Array.isArray(t)?t[r].tensor:t[s];o!=null&&x(()=>{let l;const u=O(T(this.m,a),o);this.useNesterov?l=O(T(this.c,O(o,T(u,this.m))),i):l=O(T(this.c,u),i),a.assign(u),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Z(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vp extends In{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,r=null,i=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=k.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=k.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:x(()=>Y(i).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:x(()=>Y(i).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:x(()=>Y(i).variable(a))});const o=Array.isArray(t)?t[r].tensor:t[s];if(o==null)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;x(()=>{const c=O(T(l,this.decay),T(it(o),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,p=O(T(h,this.decay),T(o,1-this.decay)),f=U(T(o,this.learningRate),Lt(P(c,O(it(p),this.epsilon)))),w=O(T(u,this.momentum),f);l.assign(c),h.assign(p),u.assign(w);const y=P(i,w);i.assign(y)}else{const h=O(T(l,this.decay),T(it(o),1-this.decay)),p=O(T(u,this.momentum),U(T(o,this.learningRate),Lt(O(h,this.epsilon))));l.assign(h),u.assign(p);const f=P(i,p);i.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Z(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Z(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Z(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ik=[Np,Sp,kp,Tp,Ip,vp,oo];function vk(){for(const n of Ik)F(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek="model",$k=".json",Ak=".weights.bin";function rl(n){return new Promise(t=>setTimeout(t)).then(n)}class Un{constructor(t){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Un.URL_SCHEME)&&(t=t.slice(Un.URL_SCHEME.length)),(t==null||t.length===0)&&(t=Ek),this.modelJsonFileName=t+$k,this.weightDataFileName=t+Ak}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=Re.join(t.weightData),s=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],i=ih(t,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await rl(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await rl(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ys(t)}}}}Un.URL_SCHEME="downloads://";class xk{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const s=new FileReader;s.onload=r=>{const i=JSON.parse(r.target.result),a=i.modelTopology;if(a==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:a});return}const l=Aa(i,u=>this.loadWeights(u));t(l)},s.onerror=r=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(t){const e=[],s=[];for(const a of t)e.push(...a.weights),s.push(...a.paths);const r=this.checkManifestAndWeightFiles(t),i=s.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(i).then(a=>[e,a])}loadWeightsFile(t,e){return new Promise((s,r)=>{const i=new FileReader;i.onload=a=>{const o=a.target.result;s(o)},i.onerror=a=>r(`Failed to weights data from file of path '${t}'.`),i.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],s=this.weightsFiles.map(i=>nl(i.name)),r={};for(const i of t)i.paths.forEach(a=>{const o=nl(a);if(e.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(e.push(o),s.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[a]=this.weightsFiles[s.indexOf(o)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const Dk=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Un.URL_SCHEME)?_k(n.slice(Un.URL_SCHEME.length)):null;ft.registerSaveRouter(Dk);function _k(n="model"){return new Un(n)}function Ck(n){return new xk(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function il(n,t,e,s){a(n),e=e==null?0:e,s=s==null?1:s,o(e,s);let r=0;const i=l=>(l.then(u=>{const c=e+ ++r/n.length*(s-e);return t(c),u}),l);function a(l){g(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){g(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),g(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),g(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Ep(n,t){t==null&&(t={});const e=t.fetchFunc==null?H().platform.fetch:t.fetchFunc,s=n.map(h=>e(h,t.requestInit,{isBinary:!0})),r=0,i=.5,o=(t.onProgress==null?await Promise.all(s):await il(s,t.onProgress,r,i)).map(h=>h.arrayBuffer()),l=.5,u=1;return t.onProgress==null?await Promise.all(o):await il(o,t.onProgress,l,u)}function Ok(n,t){var e;const s=t.fetchFunc==null?H().platform.fetch:t.fetchFunc;let r=0,i;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:async a=>{for(var o;r<n.length;){i||(i=(await s(n[r],t.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await i.read();if(l){r++,i=void 0,(o=t.onProgress)===null||o===void 0||o.call(t,r/n.length);continue}a.enqueue(u);return}a.close()}})}async function Fk(n,t="",e,s){return $p(a=>Ep(a,{requestInit:s}))(n,t,e)}function $p(n){return async(t,e="",s)=>{const r=t.map(()=>!1),i={},a=s!=null?s.map(()=>!1):[],o=[];if(t.forEach((f,w)=>{let y=0;f.weights.forEach(b=>{const S="quantization"in b?b.quantization.dtype:b.dtype,I=Rn[S]*st(b.shape),$=()=>{r[w]=!0,i[w]==null&&(i[w]=[]),i[w].push({manifestEntry:b,groupOffset:y,sizeBytes:I})};s!=null?s.forEach((v,D)=>{v===b.name&&($(),a[D]=!0)}):$(),o.push(b.name),y+=I})}),!a.every(f=>f)){const f=s.filter((w,y)=>!a[y]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce((f,w,y)=>(w&&f.push(y),f),[]),u=[];l.forEach(f=>{t[f].paths.forEach(w=>{const y=e+(e.endsWith("/")?"":"/")+w;u.push(y)})});const c=await n(u),h={};let p=0;return l.forEach(f=>{const w=t[f].paths.length,y=new Re(c.slice(p,p+w));i[f].forEach(S=>{const I=y.slice(S.groupOffset,S.groupOffset+S.sizeBytes),$=eh(I,[S.manifestEntry]);for(const v in $)h[v]=$[v]}),p+=w}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zk="application/octet-stream",Lk="application/json";class lo{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(g(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=H().platform.fetch,g(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&g(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=ih(t,s);if(e.body.append("model.json",new Blob([JSON.stringify(r)],{type:Lk}),"model.json"),t.weightData!=null){const a=Re.join(t.weightData);e.body.append("model.weights.bin",new Blob([a],{type:zk}),"model.weights.bin")}const i=await this.fetch(this.path,e);if(i.ok)return{modelArtifactsInfo:Ys(t),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=e.modelTopology,r=e.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return Aa(t,e=>this.loadWeights(e))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),s=Ui(t.weightsManifest),r=()=>Ok(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=Rk(e),i=this.weightPathPrefix||s,a=[],o=[];for(const l of t)for(const u of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):a.push(i+u+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),a}async loadWeights(t){const e=await this.getWeightUrls(t),s=Ui(t),r=await Ep(e,this.loadOptions);return[s,r]}}lo.URL_SCHEME_REGEX=/^https?:\/\//;function Rk(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),r=e>t?n.substring(e):"";return[s+"/",r]}function Zi(n){return n.match(lo.URL_SCHEME_REGEX)!=null}const Ap=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>Zi(s)):e=Zi(n),e)return uo(n,t)}return null};ft.registerSaveRouter(Ap);ft.registerLoadRouter(Ap);function uo(n,t){return new lo(n,t)}function Bk(n,t){return uo(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Si{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class xp{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class Mk{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function Pk(n,t,e,s){const r=arguments;return new Mk(Dp(...r))}function Dp(n,t,e,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Si(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Si({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Si({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:s}))}function Vk(n){return new xp(n)}function Wk(n){return new xp(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _p=Object.freeze(Object.defineProperty({__proto__:null,browserFiles:Ck,browserHTTPRequest:Bk,CompositeArrayBuffer:Re,concatenateArrayBuffers:rh,decodeWeights:eh,decodeWeightsStream:sh,encodeWeights:Wi,fromMemory:Pk,fromMemorySync:Dp,getLoadHandlers:Ly,getModelArtifactsForJSON:Aa,getModelArtifactsForJSONSync:ah,getModelArtifactsInfoForJSON:Ys,getSaveHandlers:oh,getWeightSpecs:Ui,http:uo,isHTTPScheme:Zi,loadWeights:Fk,registerLoadRouter:zy,registerSaveRouter:Fy,weightsLoaderFactory:$p,withSaveHandler:Vk,withSaveHandlerSync:Wk,copyModel:Jy,listModels:Ky,moveModel:Xy,removeModel:Zy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let En;function Uk(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,r=!1,i=!1,a=!1,o=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Ci(Ro,k.backendName)!=null){const w={pixels:n},y={numChannels:t};return k.runKernel(Ro,w,y)}const[u,c]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(a)h=n.getContext("2d").getImageData(0,0,u,c).data;else if(s||e)h=n.data;else if(i||r||o){if(En==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")En=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else En=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});En.canvas.width=u,En.canvas.height=c,En.drawImage(n,0,0,u,c),h=En.getImageData(0,0,u,c).data}let p;if(t===4)p=new Int32Array(h);else{const w=u*c;p=new Int32Array(w*t);for(let y=0;y<w;y++)for(let b=0;b<t;++b)p[y*t+b]=h[y*4+b]}return ip(p,[c,u,t],"int32")}const ex=N({fromPixels_:Uk});function nx(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(st(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,i=r[r.length-1];let a=1;for(let h=0;h<r.length-1;++h)a*=r[h];const o=n.shape,l=r.slice();l.pop();let u=1;for(let h=i;h<e;++h)u*=o[h],l.push(o[h]);const c=[...Xs(n.shape).map(h=>h/u),1].slice(0,i);return[l,a,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ji=-2,Gk=-1;function jk(n,t,e){const s=n.shape.length;g(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),g(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)g(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function qk(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function Hk(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function Cp(n,t,e,s){const r=[...n];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<e;i++)i===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Op(n,t,e){return e<=n?e:e-(t-1)}function Fp(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function Kk(n,t,e,s,r,i,a,o,l){const u=n.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&e>0){const f=t[0],w=e+1;c=zp(a,f,w,s,n),h=Lp(o,f,w,r,n),p=Cp(i,f,w,n)}else for(let f=0;f<u;f++)c[f]=Bp(a,s,i,n,f,l),h[f]=Mp(o,r,i,n,f,l),p[f]=Rp(i,f,l);return{begin:c,end:h,strides:p}}function zp(n,t,e,s,r){const i=[...r],a=Fp(e,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const l=Op(t,e,o);let u=s[l];n&1<<l&&(u=0),i[o]=u}return i}function Lp(n,t,e,s,r){const i=[...r],a=Fp(e,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const l=Op(t,e,o);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[o]=u}for(let o=0;o<i.length;o++){const l=r[o];i[o]<0&&(i[o]+=l),i[o]=Sr(0,i[o],r[o])}return i}function Rp(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function Bp(n,t,e,s,r,i){let a=t[r];const o=e[r]||1;(n&1<<r||i&1<<r||a==null)&&(o>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=Sr(0,a,l-1),a}function Mp(n,t,e,s,r,i){let a=t[r];const o=e[r]||1;(n&1<<r||i&1<<r||a==null)&&(o>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),o>0?a=Sr(0,a,l):a=Sr(-1,a,l-1),a}function Zk(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function Jk(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Pp(n,t,e){let s;const r=n.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(a=>{g(a!==-1,()=>"slice() does not support negative begin indexing.")});let i;return e==null?i=new Array(r).fill(-1):typeof e=="number"?i=[e,...new Array(r-1).fill(-1)]:e.length<r?i=e.concat(new Array(r-e.length).fill(-1)):i=e,i=i.map((a,o)=>a>=0?a:(g(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${o}.`),n.shape[o]-s[o])),[s,i]}function Xk(n,t,e,s,r,i,a,o,l){let u;if(s==null?(u=new Array(t.length),u.fill(1)):u=s,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let $=0;$<h.dims;$++)c&&(1<<$&o)!==0&&h.numAddAxisAfterEllipsis++,1<<$&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Yk(h,p);let f=!0,w=!0,y=!0;const b=[],S=[];for(let $=0;$<n.length;++$){if(p.strides[$]===0)throw Error(`strides[${$}] must be non-zero`);const v=!!(p.shrinkAxisMask&1<<$),D=n[$];if(D===-1){b.push(v?1:-1);continue}const C=[p.beginMask&1<<$,p.endMask&1<<$],M=[p.strides[$]>0?0:-1,p.strides[$]>0?D:D-1];if(v&&p.strides[$]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&p.strides[$]===1;const L=!!(p.beginMask&1<<$&&p.endMask&1<<$);if(p.beginValid&&p.endValid){if(v){const rt=p.begin[$]<0?D+p.begin[$]:p.begin[$];if(p.begin[$]=rt,p.end[$]=p.begin[$]+1,rt<0||rt>=D)throw Error(`slice index ${p.begin[$]} of dimension ${$} out of bounds.`)}else p.begin[$]=al(p.begin[$],0,p.strides[$],D,C,M),p.end[$]=al(p.end[$],1,p.strides[$],D,C,M);const j=p.strides[$]===1&&p.begin[$]===0&&p.end[$]===D;f=f&&j,w=w&&($===0&&p.strides[$]===1||j)}else f=f&&p.strides[$]===1&&L,w=w&&($===0&&p.strides[$]===1||L);let z,V=!1;if(p.beginValid&&p.endValid?(z=p.end[$]-p.begin[$],V=!0):v?(z=1,V=!0):L&&D>=0&&(p.strides[$]<0?z=-D:z=D,V=!0),V){let j;z===0||z<0!=p.strides[$]<0?j=0:j=Math.trunc(z/p.strides[$])+(z%p.strides[$]!==0?1:0),b.push(j)}else b.push(-1)}for(let $=0;$<p.finalShapeGatherIndices.length;++$){const v=p.finalShapeGatherIndices[$];v>=0?S.push(b[v]):v===Ji&&S.push(1)}return{finalShapeSparse:S.filter(($,v)=>p.finalShapeGatherIndices[v]!==Ji),finalShape:S,isIdentity:f,sliceDim0:w,isSimpleSlice:y,begin:p.begin,end:p.end,strides:p.strides}}function Yk(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<r;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(Ji),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(Gk),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function al(n,t,e,s,r,i){if(r[t])return e>0?i[t]:i[t+1&1];{const a=n<0?s+n:n;return a<i[0]?i[0]:a>i[1]?i[1]:a}}const sx=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:jk,maskToAxes:qk,computeOutShape:Hk,stridesWithElidedDims:Cp,getNormalizedAxes:Kk,startIndicesWithElidedDims:zp,stopIndicesWithElidedDims:Lp,stridesForAxis:Rp,startForAxis:Bp,stopForAxis:Mp,isSliceContinous:Zk,computeFlatOffset:Jk,parseSliceParams:Pp,sliceInfo:Xk},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qk{static sgd(t){return new oo(t)}static momentum(t,e,s=!1){return new Ip(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,i=!1){return new vp(t,e,s,r,i)}static adam(t=.001,e=.9,s=.999,r=null){return new kp(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new Np(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,i=0){return new Tp(t,e,s,r,i)}static adagrad(t,e=.1){return new Sp(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn=Qk;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function eT(){return new Promise(n=>tT(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rx(n,t){const e=n[0].length;n.forEach((r,i)=>{g(r.length===e,()=>`Error in concat${e}D: rank of tensors[${i}] must be the same as the rank of the rest (${e})`)}),g(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,i)=>{for(let a=0;a<e;a++)g(a===t||r[a]===s[a],()=>`Error in concat${e}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function ix(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ze;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Ze||(Ze={}));function ax(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let r=1;r<e.length;++r){const i=e[r],a=s[s.length-e.length+r],o=s[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+n}] = ${i} but shape[${r+n}] = ${o}`)}else s[a]=i}return s}function ox(n){const t={FIRST_DIM_SIZE:Ze.FIRST_DIM_SIZE,VALUE_ROWIDS:Ze.VALUE_ROWIDS,ROW_LENGTHS:Ze.ROW_LENGTHS,ROW_SPLITS:Ze.ROW_SPLITS,ROW_LIMITS:Ze.ROW_LIMITS,ROW_STARTS:Ze.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function lx(n){return n.length===0?0:n[0]===Ze.FIRST_DIM_SIZE?n.length-1:n.length}function ux(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(e,s-1);++r){const i=n[r],a=t[r+1];if(i>=0&&a>=0&&i!==1&&i!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-n.length}] = ${i} but ragged tensor input.flatValues.shape[${r-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vp=30;function cx(n){return n<=Vp?n:Di(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hx(n,t,e){const s=e*(typeof n=="number"?n:n[0]),r=t*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function px(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const i=t.length;for(let a=0;a<i;++a)r=r.concat([n[a+1]/t[a],t[a]]);r=r.concat(n.slice(i+1))}return r}function dx(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],i=[];for(let a=1;a<n;++a)a>=t*2+1||a%2===1?i.push(a):r.push(a);s.push(...r),s.push(0),s.push(...i)}return s}function fx(n,t,e,s=!0){const r=[];s?r.push(n[0]/e):r.push(n[0]*e);for(let i=1;i<n.length;++i)i<=t.length?s?r.push(t[i-1]*n[i]):r.push(n[i]/t[i-1]):r.push(n[i]);return r}function mx(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function gx(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nT=1.7580993408473768,sT=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yx=.3275911,bx=.254829592,wx=-.284496736,Nx=1.421413741,Sx=-1.453152027,kx=1.061405429;function Tx(n,t,e=0){let s=[];if(typeof t=="number")g(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const r=t.reduce((a,o)=>(o===-1&&(a+=1),a),0);g(r<=1,()=>"There should be only one negative value in split array.");const i=t.indexOf(-1);if(i!==-1){const a=t.reduce((o,l)=>l>0?o+l:o);t[i]=n.shape[e]-a}g(n.shape[e]===t.reduce((a,o)=>a+o),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ix(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function vx(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function Ex(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $x(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function Ax(n,t){return`size ${n} must be non-negative, not ${t}`}function xx(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Dx(n,t){const e=st(n),s=st(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function _x(n,t){const e=st(n),s=st(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cx(){return"segment ids must be >= 0"}function Ox(){return"segment ids are not increasing"}function Fx(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function zx(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,t){let e=!1,s;for(n<=Vp?(s=n,e=!0):s=Di(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Di(n,s+1);return s}function iT(n,t,e){const s=[],r=n.length;for(let i=0;i<r;i++)i!==t?s.push(n[i]):s.push(e);return s}function aT(n,t,e,s){const r=t.shape.length,i=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let h=0;h<s;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const a=n.shape[e],o=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)o.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<e;h++)o.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<r;h++)o.push(t.shape[h]);for(let h=e+1;h<i;h++)o.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}const Lx=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:rT,computeOutShape:iT,collectGatherOpShapeInfo:aT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */vk();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wp={kernelName:Yl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(n,Ts(B(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oT={kernelName:Ql,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=it(B(e,"float32")),r=Lt(P(G(1),s));return ht(U(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lT={kernelName:tu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Lt(P(it(B(e,"float32")),1));return U(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uT={kernelName:Sa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=lt(e.shape,s.shape);return{a:()=>{let o=n;const l=Ft(e.shape,r);return l.length>0&&(o=W(o,l)),A(o,e.shape)},b:()=>{let o=n;const l=Ft(s.shape,r);return l.length>0&&(o=W(o,l)),A(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cT={kernelName:eu,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hT={kernelName:nu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Y(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pT={kernelName:su,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Y(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dT={kernelName:ru,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>U(n,Lt(P(G(1),it(B(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT={kernelName:iu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Lt(O(G(1),it(B(e,"float32"))));return U(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT={kernelName:lu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=lt(e.shape,s.shape);return{a:()=>{const o=O(it(e),it(s));let l=T(n,U(s,o));const u=Ft(e.shape,r);return u.length>0&&(l=W(l,u)),A(l,e.shape)},b:()=>{const o=O(it(e),it(s));let l=ht(T(n,U(e,o)));const u=Ft(s.shape,r);return u.length>0&&(l=W(l,u)),A(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gT={kernelName:au,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>U(n,O(it(B(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yT={kernelName:ou,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>U(n,P(G(1),it(B(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n,t,e,s,r,i){const a=m(n,"dy","avgPool3dGrad"),o=m(t,"input","avgPool3dGrad");let l=a,u=o,c=!1;o.rank===4&&(c=!0,l=A(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=A(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),g(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),g(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Zt("avgPool3dGrad",r,i);const h={dy:l,input:u},p={filterSize:e,strides:s,pad:r,dimRoundingMode:i},f=k.runKernel(Lm,h,p);return c?A(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const wT=N({avgPool3dGrad_:bT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NT={kernelName:cu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=e;return{x:()=>wT(n,s,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n,t,e,s,r){const i=m(n,"dy","avgPoolGrad"),a=m(t,"input","avgPoolGrad");g(a.rank===i.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`);let o=a,l=i,u=!1;a.rank===3&&(u=!0,o=A(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=A(i,[1,i.shape[0],i.shape[1],i.shape[2]])),g(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),g(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:l,input:o},h={filterSize:e,strides:s,pad:r},p=k.runKernel(zm,c,h);return u?A(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const kT=N({avgPoolGrad_:ST});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TT={kernelName:uu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:i,pad:a}=e;return{x:()=>kT(n,s,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IT={kernelName:hu,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:i,transposeB:a}=e;return!i&&!a?{a:()=>X(n,r,!1,!0),b:()=>X(s,n,!0,!1)}:!i&&a?{a:()=>X(n,r,!1,!1),b:()=>X(n,s,!0,!1)}:i&&!a?{a:()=>X(r,n,!1,!0),b:()=>X(s,n,!1,!1)}:{a:()=>X(r,n,!0,!0),b:()=>X(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vT={kernelName:pu,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>si(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ET={kernelName:Mm,gradFunc:(n,t,e)=>{const s=e,r=s.inputShape,i=s.shape,a=Array.from(i);for(let l=r.length-1;l>=0;l--)if(r[l]===i[l])a[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>W(n,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $T={kernelName:ka,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AT={kernelName:du,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xT={kernelName:fu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:i}=e;return{x:()=>Bt(je(kn(s,r),Kn(s,i)),n,Y(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DT={kernelName:mu,inputsToSave:["x"],gradFunc:Wp.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _T={kernelName:gu,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:r}=e,i=ze(r,t[0].shape)[0],a=s.map(l=>l[i]);return te(n,a,i).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CT={kernelName:yu,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:i,strides:a,pad:o,dataFormat:l}=e;return g(Pn(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>Ca(s.shape,n,r,a,o,l),filter:()=>no(s,n,r.shape,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OT={kernelName:bu,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=e;return{dy:()=>fn(n,r,i,a,o,1,l),filter:()=>no(n,s,r.shape,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n,t,e,s,r){let i=n;n.rank===4&&(i=A(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=t;a.rank===4&&(a=A(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),g(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),g(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),g(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),g(i.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${e[3]}.`),g(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`);const o={x:i,dy:a},l={strides:s,pad:r,filterShape:e};return k.runKernel(Um,o,l)}const zT=N({conv3DBackpropFilter_:FT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LT={kernelName:wu,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:i}=e;g(Pn(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,o]=t;return{x:()=>Ch(a.shape,n,o,r,i),filter:()=>zT(a,n,o.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RT={kernelName:Nu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(ht(Za(B(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BT={kernelName:Su,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(Ja(B(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MT={kernelName:ku,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:i,reverse:a}=e;return{x:()=>{const o=Mh([r],s.rank);let l=za(n,r,i,!a);return o!=null&&(l=Q(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PT={kernelName:Tu,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=e,o=s==null?[1,1]:s;g(Pn(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=t;return g(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),g(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),g(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),g(rn(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),Zt("depthwiseConv2d",i,a),{x:()=>fp(l.shape,n,u,r,i,o,a),filter:()=>dp(l,n,u.shape,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VT={kernelName:Iu,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,i={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>k.runKernel(Ym,i,e),filter:()=>k.runKernel(Qm,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WT={kernelName:Eu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>k.runKernel(eg,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UT={kernelName:$u,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=T(ee(ht(it(e))),2/Math.sqrt(Math.PI));return{x:()=>T(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GT={kernelName:Au,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jT={kernelName:xu,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>A(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qT={kernelName:Du,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(n,ee(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HT={kernelName:_u,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KT={kernelName:Cu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=lt(e.shape,s.shape);return{a:()=>{const o=U(n,B(s,"float32")),l=Ft(e.shape,r);return l.length>0?A(W(o,l),e.shape):o},b:()=>{let o=T(n,B(e,"float32"));const l=Ft(s.shape,r);l.length>0&&(o=A(W(o,l),s.shape));const u=it(s);return ht(U(o,B(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZT={kernelName:Ou,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,i,a,o]=t,l=o==null?G(1):o,u=Ft(i.shape,r.shape),c=[];if(i.rank===1){for(let v=0;v<r.shape.length-1;++v)c.push(r.shape[v]);c.push(1)}const h=P(r,i),p=T(n,l),f=qa(O(a,G(s))),w=T(T(T(f,f),f),G(-.5));return{x:()=>i.rank===1?A(T(T(n,xe(A(f,[1,1,1,i.shape[0]]),c)),l),r.shape):A(T(T(n,f),l),r.shape),mean:()=>{let v=T(T(f,G(-1)),p);return i.rank===1&&(v=W(v,u)),A(v,i.shape)},variance:()=>{let v=T(T(w,h),p);return i.rank===1&&(v=W(v,u)),A(v,i.shape)},scale:()=>{const v=T(h,f);let D=T(n,v);return i.rank===1&&(D=W(D,u)),A(D,i.shape)},offset:()=>{let v=n;return i.rank===1&&(v=W(v,u)),A(v,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JT={kernelName:Fu,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:i,batchDims:a}=e,o=ze(i,s.shape)[0],l=(u,c,h)=>()=>{const p=u.shape,f=c.size,w=p.slice(0,o),y=w.length,b=p.slice(i,p.length).slice(1),S=b.length,I=ol(0,y),$=ol(y+1,y+1+S),v=ll([w,[f],b]),D=A(h,v),C=A(c,[f]),M=ll([[y],I,$]),L=Q(D,M);let z=to(L,C,u.shape[o]);const V=Ra(M);return z=Q(z,V),z};if(a===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>ne(c.map((f,w)=>l(f,r.slice(w,1),n.slice(w,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function ol(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function ll(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XT={kernelName:zu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Y(e),b:()=>Y(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YT={kernelName:Ta,gradFunc:n=>({x:()=>B(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QT={kernelName:Lu,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI={kernelName:Ru,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eI={kernelName:Bu,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nI={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,i=ie(s,0);return{x:()=>Bt(i,n,T(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sI={kernelName:Vu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>U(n,O(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rI={kernelName:Pu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>U(n,B(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iI={kernelName:gg,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const a=ee(s);return P(n,T(W(n,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(n,t,e,s=5,r=1,i=1,a=.5){const o={x:n,y:t,dy:e},l={depthRadius:s,bias:r,alpha:i,beta:a};return k.runKernel(yg,o,l)}const oI=N({localResponseNormalizationBackprop_:aI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lI={kernelName:Wu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:i,bias:a,alpha:o,beta:l}=e;return{x:()=>oI(s,r,n,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Up(n,t,e,s){return t.rank<e.rank&&(t=A(t,gs(t.shape,s))),n.rank<e.rank&&(n=A(n,gs(n.shape,s))),{x:()=>T(n,B(Ce(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ul={kernelName:Uu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,i=t[0],a=t[1],o=ze(r,i.shape),l=Up(n,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uI={kernelName:Gu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>T(n,B(kn(e,s),"float32")),b:()=>T(n,B(Ws(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cI(n,t,e,s,r,i,a){const o=m(n,"dy","maxPool3dGrad"),l=m(t,"input","maxPool3dGrad"),u=m(e,"output","maxPool3dGrad");let c=o,h=l,p=u,f=!1;l.rank===4&&(f=!0,c=A(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=A(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=A(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),g(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),g(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),g(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Zt("maxPool3dGrad",i,a);const w={dy:c,input:h,output:p},y={filterSize:s,strides:r,pad:i,dimRoundingMode:a},b=k.runKernel(wg,w,y);return f?A(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}const hI=N({maxPool3dGrad_:cI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pI={kernelName:qu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=e;return{x:()=>hI(n,s,r,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(n,t,e,s,r,i,a){const o=m(n,"dy","maxPoolGrad"),l=m(t,"input","maxPoolGrad"),u=m(e,"output","maxPoolGrad");g(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),g(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),g(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Zt("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return k.runKernel(bg,c,h)}const fI=N({maxPoolGrad_:dI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mI={kernelName:ju,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:i,strides:a,pad:o}=e;return{x:()=>fI(n,s,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gI={kernelName:Hu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,i=ze(r,s.shape),o=zw(s.shape,i)[1],l=st(o);return{x:()=>{const c=s.shape.slice();i.forEach(f=>{c[f]=1});const h=A(n,c);return U(T(h,Qt(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI={kernelName:Ku,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[i,a]=t,o=ze(r,i.shape),l=Up(n,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bI={kernelName:Zu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>T(n,B(Kn(e,s),"float32")),b:()=>T(n,B(ie(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wI={kernelName:Ju,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,i=r.map(a=>a[0]);return{x:()=>tt(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI={kernelName:Xu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=lt(e.shape,s.shape);return{a:()=>{const o=Ft(e.shape,r);return o.length>0?A(W(n,o),e.shape):n},b:()=>{const o=T(n,ht(nr(U(e,s)))),l=Ft(s.shape,r);return l.length>0?A(W(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI={kernelName:Yu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=lt(e.shape,s.shape);return{a:()=>{const o=T(n,B(s,"float32")),l=Ft(e.shape,r);return l.length>0?A(W(o,l),e.shape):o},b:()=>{const o=T(n,B(e,"float32")),l=Ft(s.shape,r);return l.length>0?A(W(o,l),s.shape):o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kI={kernelName:Qu,gradFunc:n=>({x:()=>ht(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TI={kernelName:ec,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Dt(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const II={kernelName:tc,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI={kernelName:nc,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Te(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cl={kernelName:sc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,i=r.map(a=>a[0]);return{x:()=>tt(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI={kernelName:rc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,i=e,a=s,o=lt(i.shape,a.shape);return{a:()=>{const c=B(a,"float32");let h=T(n,T(c,nn(i,P(c,G(1)))));const p=Ft(i.shape,o);return p.length>0&&(h=W(h,p)),A(h,i.shape)},b:()=>{const c=ie(i,0),h=Bt(c,oe(i),Y(i));let p=T(n,T(r,h));const f=Ft(a.shape,o);return f.length>0&&(p=W(p,f)),A(p,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $I={kernelName:ic,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=ie(e,0);return{x:()=>Bt(r,n,T(n,s)),alpha:()=>{let i=Bt(r,Y(n),T(n,e));const a=Ft(s.shape,n.shape);return a.length>0&&(i=W(i,a)),A(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AI(n,t,e){const s=n.shape.slice();s[e]=1;const r=A(t,s),i=$r(n,e,!0,!1),a=$r(n,e,!0,!0),o=T(i,a);return T(r,o)}function xI(n,t,e){const s=n.shape.length,r=s-e.length,i=Mh(e,s);let a=n;i!=null&&(a=Q(n,i));const o=a.shape.slice(),u=o.splice(s-e.length,e.length).reduce((p,f)=>p*f,1);o.push(u);const c=a.reshape(o);let h=AI(c,t,r);if(h=h.reshape(a.shape),i!=null){const p=Ra(i);h=Q(h,p)}return h}const DI={kernelName:ac,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;let i=[];return r==null?i=s.shape.map((a,o)=>o):typeof r=="number"?i=[r]:i=r,{x:()=>xI(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _I={kernelName:vu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=lt(e.shape,s.shape);return{a:()=>{const o=U(n,B(s,"float32")),l=Ft(e.shape,r);return l.length>0?A(W(o,l),e.shape):o},b:()=>{let o=T(n,B(e,"float32"));const l=Ft(s.shape,r);l.length>0&&(o=A(W(o,l),s.shape));const u=it(s);return ht(U(o,B(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI={kernelName:oc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>U(n,ht(it(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OI={kernelName:pc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=T(Kn(e,6),Ts(e));return{x:()=>T(n,B(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI={kernelName:lc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(n,B(Ts(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI={kernelName:uc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LI={kernelName:hc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>k.runKernel(Cg,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI={kernelName:cc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>k.runKernel(_g,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI={kernelName:dc,gradFunc:(n,t,e)=>{const{dims:s}=e,r=ze(s,n.shape);return{x:()=>ke(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MI={kernelName:fc,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI={kernelName:mc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ht(U(n,T(nn(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VI={kernelName:gc,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>B(Y(e),"float32"),t:()=>T(n,B(e,n.dtype)),e:()=>T(n,B(ti(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WI={kernelName:yc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=ie(e,G(0)),r=G(nT),i=G(sT),a=T(n,i),o=T(T(n,r),ee(B(e,"float32")));return Bt(s,a,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UI={kernelName:kc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(n,T(e,P(G(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GI={kernelName:Sc,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI={kernelName:wc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(Hr(B(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qI={kernelName:Nc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(Fa(B(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI={kernelName:bc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:i}=e,a=s.shape,[o,l]=Pp(s,r,i),u=[];for(let c=0;c<n.rank;c++)u.push([o[c],a[c]-o[c]-l[c]]);return{x:()=>Tn(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI={kernelName:Ac,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,i=!0,a=T(n,s);return{logits:()=>P(a,T(W(a,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZI={kernelName:Tc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(n,Ge(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hl={kernelName:Ec,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>qr(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pl={kernelName:$c,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>vt(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JI={kernelName:Ic,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>U(n,T(Lt(B(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI={kernelName:Vg,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(n,T(B(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YI={kernelName:xc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=G(2);return{a:()=>T(n,T(r,P(e,s))),b:()=>T(n,T(r,P(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI={kernelName:Lc,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tv={kernelName:Dc,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=lt(e.shape,s.shape);return{a:()=>{let o=n;const l=Ft(e.shape,r);return l.length>0&&(o=W(o,l)),A(o,e.shape)},b:()=>{let o=n;const l=Ft(s.shape,r);return l.length>0&&(o=W(o,l)),A(ht(o),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ev={kernelName:vc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:i}=e;ze(i,s.shape).forEach(u=>{r[u]=1});const o=A(n,r),l=T(o,Qt(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nv={kernelName:_c,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>U(n,it(Hr(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sv={kernelName:Cc,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>T(P(G(1),it(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rv={kernelName:Ia,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let a=Y(s);if(s.rank===1)for(let o=0;o<r[0];++o)a=O(a,tt(n,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)a=O(a,tt(n,[o*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)a=O(a,tt(n,[o*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<r[0];++o)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)a=O(a,tt(n,[o*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iv={kernelName:gr,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,i=Ra(r);return{x:()=>Q(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const av={kernelName:Oc,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>ne(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ov={kernelName:Fc,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>lv(n,e)}}};function lv(n,t){const e=an(t,Y(t)),s=Zr(n,e);let r=kn(t,G(0,"int32"));const i=s.rank-r.rank;for(let o=0;o<i;++o)r=Ut(r,o+1);r=je(r,Qt(s.shape,"bool"));const a=Y(s);return Bt(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uv={kernelName:zc,gradFunc:n=>({x:()=>Y(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cv=[Wp,oT,lT,uT,cT,hT,pT,dT,fT,mT,gT,yT,NT,TT,IT,vT,ET,$T,AT,xT,DT,_T,OT,CT,LT,RT,BT,MT,PT,VT,_I,WT,UT,GT,jT,qT,KT,HT,ZT,JT,XT,YT,QT,tI,eI,nI,sI,rI,iI,lI,ul,ul,uI,pI,mI,gI,yI,bI,wI,NI,SI,kI,TI,II,vI,cl,cl,EI,$I,DI,CI,OI,FI,zI,LI,RI,BI,MI,PI,VI,WI,UI,GI,jI,qI,HI,KI,ZI,hl,hl,pl,pl,JI,YI,XI,QI,tv,ev,nv,sv,rv,iv,av,ov,uv];for(const n of cv)Xg(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.abs=function(){return this.throwIfDisposed(),At(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.acos=function(){return this.throwIfDisposed(),gh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.acosh=function(){return this.throwIfDisposed(),yh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.add=function(n){return this.throwIfDisposed(),O(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.all=function(n,t){return this.throwIfDisposed(),Da(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.any=function(n,t){return this.throwIfDisposed(),Er(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.argMax=function(n){return this.throwIfDisposed(),fs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.argMin=function(n){return this.throwIfDisposed(),bh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.asScalar=function(){return this.throwIfDisposed(),g(this.size===1,()=>"The array must have only 1 element."),A(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.asType=function(n){return this.throwIfDisposed(),B(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.as1D=function(){return this.throwIfDisposed(),A(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.as2D=function(n,t){return this.throwIfDisposed(),A(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),A(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),A(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),A(this,[n,t,e,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.asin=function(){return this.throwIfDisposed(),wh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.asinh=function(){return this.throwIfDisposed(),Nh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.atan=function(){return this.throwIfDisposed(),Sh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.atan2=function(n){return this.throwIfDisposed(),kh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.atanh=function(){return this.throwIfDisposed(),Th(this)};_().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),jr(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),qr(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),Qs(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Fs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.cast=function(n){return this.throwIfDisposed(),B(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.ceil=function(){return this.throwIfDisposed(),Dh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),ae(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof mt&&(n=[n]),vt([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.conv1d=function(n,t,e,s,r,i){return this.throwIfDisposed(),_a(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),Oa(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.conv2d=function(n,t,e,s,r,i){return this.throwIfDisposed(),fn(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.cos=function(){return this.throwIfDisposed(),Hr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.cosh=function(){return this.throwIfDisposed(),Fa(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),$r(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),za(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),Fh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.depthwiseConv2d=function(n,t,e,s,r,i){return this.throwIfDisposed(),tr(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),zh(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.divNoNan=function(n){return this.throwIfDisposed(),Lh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.div=function(n){return this.throwIfDisposed(),U(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.dot=function(n){return this.throwIfDisposed(),Rh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.elu=function(){return this.throwIfDisposed(),Kr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.equal=function(n){return this.throwIfDisposed(),Ce(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.erf=function(){return this.throwIfDisposed(),La(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),Vh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.exp=function(){return this.throwIfDisposed(),ee(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.expandDims=function(n){return this.throwIfDisposed(),Ut(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.expm1=function(){return this.throwIfDisposed(),Wh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.fft=function(){return this.throwIfDisposed(),ai(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.flatten=function(){return this.throwIfDisposed(),A(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.floor=function(){return this.throwIfDisposed(),nr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.floorDiv=function(n){return this.throwIfDisposed(),xa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.gather=function(n,t,e){return this.throwIfDisposed(),Zr(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.greaterEqual=function(n){return this.throwIfDisposed(),kn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.greater=function(n){return this.throwIfDisposed(),ie(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.ifft=function(){return this.throwIfDisposed(),Gs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.irfft=function(){return this.throwIfDisposed(),Xa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.isFinite=function(){return this.throwIfDisposed(),Uh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.isInf=function(){return this.throwIfDisposed(),Gh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.isNaN=function(){return this.throwIfDisposed(),jh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Xr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.lessEqual=function(n){return this.throwIfDisposed(),Kn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.less=function(n){return this.throwIfDisposed(),Ws(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),qh(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.logSigmoid=function(){return this.throwIfDisposed(),Hh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Ma(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),Qr(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.log=function(){return this.throwIfDisposed(),oe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.log1p=function(){return this.throwIfDisposed(),Yr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.logicalAnd=function(n){return this.throwIfDisposed(),je(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.logicalNot=function(){return this.throwIfDisposed(),ti(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.logicalOr=function(n){return this.throwIfDisposed(),Pa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.logicalXor=function(n){return this.throwIfDisposed(),Kh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),X(this,n,t,e)};_().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),ei(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.max=function(n,t){return this.throwIfDisposed(),Ne(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.maximum=function(n){return this.throwIfDisposed(),an(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.mean=function(n,t){return this.throwIfDisposed(),wt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.min=function(n,t){return this.throwIfDisposed(),Vs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.minimum=function(n){return this.throwIfDisposed(),Wn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),Jh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.mod=function(n){return this.throwIfDisposed(),Xh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.mul=function(n){return this.throwIfDisposed(),T(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.neg=function(){return this.throwIfDisposed(),ht(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.norm=function(n,t,e){return this.throwIfDisposed(),er(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.notEqual=function(n){return this.throwIfDisposed(),ys(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Wa(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.onesLike=function(){return this.throwIfDisposed(),le(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.pad=function(n,t){return this.throwIfDisposed(),Tn(this,n,t)};_().prototype.pool=function(n,t,e,s,r,i){return this.throwIfDisposed(),Yh(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.pow=function(n){return this.throwIfDisposed(),nn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.prelu=function(n){return this.throwIfDisposed(),ri(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.prod=function(n,t){return this.throwIfDisposed(),Qh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.reciprocal=function(){return this.throwIfDisposed(),ep(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.relu=function(){return this.throwIfDisposed(),He(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.relu6=function(){return this.throwIfDisposed(),Ga(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.reshapeAs=function(n){return this.throwIfDisposed(),A(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.reshape=function(n){return this.throwIfDisposed(),A(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),yp(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),bp(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.reverse=function(n){return this.throwIfDisposed(),ke(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.rfft=function(){return this.throwIfDisposed(),oi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.round=function(){return this.throwIfDisposed(),ja(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.rsqrt=function(){return this.throwIfDisposed(),qa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.selu=function(){return this.throwIfDisposed(),Ha(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.separableConv2d=function(n,t,e,s,r,i){return this.throwIfDisposed(),Ka(this,n,t,e,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.sigmoid=function(){return this.throwIfDisposed(),Ge(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.sign=function(){return this.throwIfDisposed(),np(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.sin=function(){return this.throwIfDisposed(),Za(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.sinh=function(){return this.throwIfDisposed(),Ja(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.slice=function(n,t){return this.throwIfDisposed(),tt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.softmax=function(n){return this.throwIfDisposed(),ii(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.softplus=function(){return this.throwIfDisposed(),ks(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),si(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.split=function(n,t){return this.throwIfDisposed(),te(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.sqrt=function(){return this.throwIfDisposed(),Lt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.square=function(){return this.throwIfDisposed(),it(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Ya(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.squeeze=function(n){return this.throwIfDisposed(),Jn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof mt?[this,n]:[this,...n];return ne(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.step=function(n){return this.throwIfDisposed(),Ts(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.stridedSlice=function(n,t,e,s,r,i,a,o){return this.throwIfDisposed(),sp(this,n,t,e,s,r,i,a,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.sub=function(n){return this.throwIfDisposed(),P(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.sum=function(n,t){return this.throwIfDisposed(),W(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.tan=function(){return this.throwIfDisposed(),rp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.tanh=function(){return this.throwIfDisposed(),Vn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.tile=function(n){return this.throwIfDisposed(),xe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.toBool=function(){return this.throwIfDisposed(),B(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.toFloat=function(){return this.throwIfDisposed(),B(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.toInt=function(){return this.throwIfDisposed(),B(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.topk=function(n,t){return this.throwIfDisposed(),op(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.transpose=function(n){return this.throwIfDisposed(),Q(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.unique=function(n){return this.throwIfDisposed(),lp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),to(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.unstack=function(n){return this.throwIfDisposed(),Te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.where=function(n,t){return this.throwIfDisposed(),Bt(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_().prototype.zerosLike=function(){return this.throwIfDisposed(),Y(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Be extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Be.prototype)}}class we extends Error{constructor(t){super(t),Object.setPrototypeOf(this,we.prototype)}}class E extends Error{constructor(t){super(t),Object.setPrototypeOf(this,E.prototype)}}class K extends Error{constructor(t){super(t),Object.setPrototypeOf(this,K.prototype)}}class co extends Error{constructor(t){super(t),Object.setPrototypeOf(this,co.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Gp{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gn(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function Me(n,t){if(!n)throw new co(t)}function dl(n,t){let e=0;for(const s of n)s===t&&e++;return e}function jt(n){return n.length===1?n[0]:n}function nt(n){return Array.isArray(n)?n:[n]}function Je(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function _n(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let pe={};function ho(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function Xi(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>Xi(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:Xi(s))}}}function sr(n,t={},e={},s="object",r=!1){if(typeof n=="string"){const i=n;let a;if(i in e)a=e[i];else if(i in pe)a=pe[i];else if(a=t[i],a==null)throw new E(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const i=n;if(i.className==null||i.config==null)throw new E(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const a=i.className;let o,l;if(a in e?[o,l]=e[a]:a in pe?[o,l]=pe.className:a in t&&([o,l]=t[a]),o==null)throw new E(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const f of Object.keys(pe))u[f]=pe[f];for(const f of Object.keys(e))u[f]=e[f];const c=i.config;c.customObjects=u;const h=Object.assign({},pe);for(const f of Object.keys(e))pe[f]=e[f];Xi(i.config);const p=l(o,i.config,e,r);return pe=Object.assign({},h),p}else{const u=Object.assign({},pe);for(const h of Object.keys(e))pe[h]=e[h];const c=new o(i.config);return pe=Object.assign({},u),c}}}function hv(n,t){return n<t?-1:n>t?1:0}function pr(n,t){return-1*hv(n,t)}function hn(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function pv(n){if(n==null)throw new E(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function Xn(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new E(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function po(n,t,e=0,s=1/0){return Me(e>=0),Me(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function Ct(n,t){Array.isArray(n)?(g(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Ct(e,`element ${s+1} of ${t}`))):g(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${jp(n)}.`)}function jp(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>jp(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function dv(n,t,e){let s=e!=null?e():ps(),r;return(...a)=>{const o=e!=null?e():ps();return o-s<t||(s=o,r=n(...a)),r}}function qp(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const fv=["channelsFirst","channelsLast"],mv=["nearest","bilinear"],gv=["valid","same","causal"],yv=["max","avg"],bv=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ts=new Map;function kt(n){Xn(fv,"DataFormat",n)}function wv(n){Xn(mv,"InterpolationFormat",n)}function ce(n){Xn(gv,"PaddingMode",n)}function Hp(n){Xn(yv,"PoolMode",n)}const Ls=[],fl="/";function zn(n,t){Ls.push(n);try{const e=t();return Ls.pop(),e}catch(e){throw Ls.pop(),e}}function Nv(){return Ls.length===0?"":Ls.join(fl)+fl}function Kp(n){if(!Jp(n))throw new Error("Not a valid tensor name: '"+n+"'");return Nv()+n}function Zp(n){if(!Jp(n))throw new Error("Not a valid tensor name: '"+n+"'");ts.has(n)||ts.set(n,0);const t=ts.get(n);if(ts.set(n,ts.get(n)+1),t>0){const e=`${n}_${t}`;return ts.set(e,1),e}else return n}const Sv=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Jp(n){return!!n.match(Sv)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kv(n){return n===parseInt(n.toString(),10)}function ls(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function ws(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function mn(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function Oe(n,t){if(t<n)throw new E(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Tv=["fanIn","fanOut","fanAvg"],Iv=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vv(n){Xn(Tv,"FanMode",n)}function Ev(n){Xn(Iv,"Distribution",n)}class ve extends vs{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Xp extends ve{apply(t,e){return Dt(t,e)}}Xp.className="Zeros";F(Xp);class fo extends ve{apply(t,e){return Qt(t,e)}}fo.className="Ones";F(fo);class Yp extends ve{constructor(t){if(super(),typeof t!="object")throw new E(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new E(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return x(()=>T(G(this.value),Qt(t,e)))}getConfig(){return{value:this.value}}}Yp.className="Constant";F(Yp);class Qp extends ve{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Zn(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Qp.className="RandomUniform";F(Qp);class td extends ve{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new K(`randomNormal does not support dType ${e}.`);return Mr(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}td.className="RandomNormal";F(td);class ed extends ve{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new K(`truncatedNormal does not support dType ${e}.`);return Qa(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ed.className="TruncatedNormal";F(ed);class nd extends ve{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return x(()=>{if(t.length!==2||t[0]!==t[1])throw new E("Identity matrix initializer can only be used for 2D square matrices.");return T(this.gain,Ba(t[0]))})}getConfig(){return{gain:this.gain}}}nd.className="Identity";F(nd);function $v(n,t="channelsLast"){let e,s;if(kt(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const r=ls(n,2);e=n[1]*r,s=n[0]*r}else if(t==="channelsLast"){const r=ls(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=ls(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}class se extends ve{constructor(t){if(super(),t.scale<0)throw new E(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,vv(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,Ev(this.distribution),this.seed=t.seed}apply(t,e){const s=$v(t),r=s[0],i=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(r+i)/2),this.distribution==="normal"){const o=Math.sqrt(a);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new K(`${this.getClassName()} does not support dType ${e}.`);return Qa(t,0,o,e,this.seed)}else{const o=Math.sqrt(3*a);return Zn(t,-o,o,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}se.className="VarianceScaling";F(se);class mo extends se{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return se.className}}mo.className="GlorotUniform";F(mo);class go extends se{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return se.className}}go.className="GlorotNormal";F(go);class yo extends se{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return se.className}}yo.className="HeNormal";F(yo);class bo extends se{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return se.className}}bo.className="HeUniform";F(bo);class wo extends se{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return se.className}}wo.className="LeCunNormal";F(wo);class No extends se{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return se.className}}No.className="LeCunUniform";F(No);class sd extends ve{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return x(()=>{if(t.length<2)throw new K("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=st(t.slice(0,-1)),r=t[t.length-1],i=s*r;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const a=[Math.max(r,s),Math.min(r,s)],o=Mr(a,0,1,e,this.seed),l=wp.qr(o,!1);let u=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return u=T(u,h.sign()),s<r&&(u=u.transpose()),T(G(this.gain),u.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}sd.className="Orthogonal";F(sd);const ml={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function gl(n,t={}){return sr(n,me.getMap().classNameMap,t,"initializer")}function gt(n){return ho(n)}function pt(n){if(typeof n=="string"){const t=n in ml?ml[n]:n;if(t==="GlorotNormal")return new go;if(t==="GlorotUniform")return new mo;if(t==="HeNormal")return new yo;if(t==="HeUniform")return new bo;if(t==="LeCunNormal")return new wo;if(t==="LeCunUniform")return new No;{const e={};return e.className=t,e.config={},gl(e)}}else return n instanceof ve?n:gl(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yi(n){return Array.isArray(n)&&Array.isArray(n[0])}function Ar(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function q(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new E(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function et(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new E(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xr(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,r)=>s*r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const yl="Variable";class Av{constructor(t,e="float32",s=yl,r=!0,i=null){this.dtype=e==null?"float32":e,this.shape=t.shape,this.id=Gl(),s=s==null?yl:s,this.originalName=Kp(s),this.name=Zp(this.originalName),this.trainable_=r,this.constraint=i,this.val=up(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),xv(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function xv(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function Qi(n){return n.map(t=>t.read())}function So(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class It{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class qe{constructor(t,e,s,r,i,a,o){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=o,this.id=Gl(),a!=null&&(this.originalName=Kp(a),this.name=Zp(this.originalName)),this.rank=e.length}}let Dv=0;class li{constructor(t,e){this.callArgs=e,this.id=Dv++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _v=0;class J extends vs{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_v++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=Je(s)+"_"+Pr(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let i=null;t.batchSize!=null&&(i=t.batchSize),s=[i].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;r==null&&(r=t.inputDType),r==null&&(r="float32"),this.dtype=r}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new we(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new E(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return jt(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return jt(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Be(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Be(`Layer ${this.name} is not connected, no input to return.`);return jt(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Be(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Be(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return jt(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=nt(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=nt(this.inputSpec);if(e.length!==s.length)throw new E(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let r=0;r<e.length;r++){const i=e[r],a=s[r];if(a==null)continue;const o=i.rank;if(a.ndim!=null&&o!==a.ndim)throw new E(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${o}`);if(a.maxNDim!=null&&o>a.maxNDim)throw new E(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${o}`);if(a.minNDim!=null&&o<a.minNDim)throw new E(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${o}.`);if(a.dtype!=null&&i.dtype!==a.dtype)throw new E(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${i.dtype}.`);if(a.axes){const l=i.shape;for(const u in a.axes){const c=Number(u),h=a.axes[u],p=c>=0?l[c]:l[l.length+c];if(h!=null&&[h,null].indexOf(p)===-1)throw new E(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${h} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const u=a.shape[l],c=i.shape[l];if(u!=null&&c!=null&&u!==c)throw new E(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${i.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=nt(t),r=Fv(t),i=zv(t);if(r===i)throw new E("Arguments to apply() must be all SymbolicTensors or all Tensors");return zn(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const a=[];for(const o of nt(t))a.push(o.shape);this.build(jt(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(t),i){let a=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,a);const o=nt(a),l=[];for(let u of o)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=jt(l),this.activityRegularizer!=null)throw new K("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=Cv(t),o=this.computeOutputShape(a);let l;const u=Ov(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((c,h)=>new qe(u,c,this,nt(t),e,this.name,h)):l=new qe(u,o,this,nt(t),e,this.name),this.addInboundNode(t,l,null,null,a,o,e),this._refCount++,this.activityRegularizer!=null)throw new K("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&t[r]!=null&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Be(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Be(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new we(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return xr(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Qi(t?this.trainableWeights:this.weights)}setWeights(t){x(()=>{const e=this.weights;if(e.length!==t.length)throw new E(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],r=Qi(e);for(let i=0;i<r.length;++i){const a=r[i],o=e[i],l=t[i];if(!Ot(a.shape,l.shape))throw new E(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([o,l])}So(s)})}addWeight(t,e,s,r,i,a,o,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new E(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():pt("zeros"));const u=r.apply(e,s),c=new Av(u,s,t,a,o);return u.dispose(),i!=null&&this.addLoss(()=>i.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=nt(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const r=this.computeMask(t,s),i=nt(e),a=nt(r);if(i.length!==a.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let o=0;o<i.length;o++)i[o].kerasMask=a[o]}addInboundNode(t,e,s,r,i,a,o=null){const l=nt(t);e=nt(e),s=nt(s),r=nt(r),i=Ar(i),a=Ar(a);const u=[],c=[],h=[];for(const p of l)u.push(p.sourceLayer),c.push(p.nodeIndex),h.push(p.tensorIndex);new li({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:a},o);for(let p=0;p<e.length;p++)e[p].sourceLayer=this,e[p].nodeIndex=this.inboundNodes.length-1,e[p].tensorIndex=p}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Cv(n){n=nt(n);const t=[];for(const e of n)t.push(e.shape);return jt(t)}function Ov(n){return"float32"}function rd(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const a=s.inputTensors[i],o=s.inboundLayers[i],l=s.nodeIndices[i],u=rd(a,o,l);for(const c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}function Fv(n){let t=!0;for(const e of nt(n))if(!(e instanceof qe)){t=!1;break}return t}function zv(n){let t=!0;for(const e of nt(n))if(e instanceof qe){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rr extends J{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Pr("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new E("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new E("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new E("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const r=new qe(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new li({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new E(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}rr.className="InputLayer";F(rr);function Lv(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new E("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new rr({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rv(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return B(t,n.dtype)}catch{throw new E(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class un{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof un)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=Rv(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new E(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof qe){if(this.id2Value[t.id]==null)throw new E(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new E(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof qe){if(this.id2Value[t.id]==null)throw new E(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new E(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Z(this.id2Mask)}}const Dr=new Gp,_r=new Gp;function Bv(n){Dr!=null&&Dr.setMaxEntries(n),_r!=null&&_r.setMaxEntries(n)}function Os(n,t,e,s){const r=e==null?!1:e.training,i=Array.isArray(n),a=i?n:[n],o=a.map(w=>w.name),l=[],u=t.names();for(const w of o)u.indexOf(w)!==-1?l.push(t.getValue(w)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h=Dr.get(c),p;if(h==null){const w=Mv(a,t);h=w.sorted,p=w.recipientCounts,Dr.put(c,h),_r.put(c,p)}p={},r||Object.assign(p,_r.get(c));const f=new un(t);for(let w=0;w<h.length;++w){if(s!=null){const z=Vi().numTensors;z>s.maxNumTensors&&(s.maxNumTensors=z),z<s.minNumTensors&&(s.minNumTensors=z)}const y=h[w],b=y.sourceLayer;if(b instanceof rr)continue;const S=[],I=[],$=[];let v=!1;for(const z of y.inputs){const V=f.getValue(z),j=f.getMask(z);S.push(V),I.push(j),j!=null&&(v=!0),r||(p[z.name]--,p[z.name]===0&&!t.hasKey(z)&&o.indexOf(z.name)===-1&&!V.isDisposed&&z.sourceLayer.stateful!==!0&&$.push(V))}v&&(e=e||{},e.mask=I[0]);const D=nt(b.apply(S,e));let C=null;b.supportsMasking&&(C=b.computeMask(S,I));const M=Vv(y),L=Array.isArray(M)?M:[M];for(let z=0;z<L.length;++z){f.hasKey(L[z])||f.add(L[z],D[z],Array.isArray(C)?C[0]:C);const V=o.indexOf(L[z].name);V!==-1&&(l[V]=D[z])}r||Z($)}return f.disposeMasks(),i?l:l[0]}function Mv(n,t){g(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const r=bl(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of n){const{sorted:a,recipientMap:o}=bl(i,t);for(const l of a)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in o)s[l]==null&&(s[l]=new Set),o[l].forEach(u=>s[l].add(u))}}return{sorted:e,recipientCounts:Pv(s)}}function Pv(n){const t={};for(const e in n)t[e]=n[e].size;return t}function bl(n,t){const e=new Set,s=[],r={};for(const o of t.names())e.add(o);const i=[],a=[];for(i.push(n);i.length>0;){const o=i[i.length-1];if(e.has(o.name)){i.pop();continue}const l=a[a.length-1]===i.length-1;if(o.inputs.length===0||l)i.pop(),s.push(o),e.add(o.name),l&&a.pop();else{a.push(i.length-1);for(const u of o.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(o.name),!e.has(u.name)&&i.push(u)}}return{sorted:s,recipientMap:r}}function Vv(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wv=H();Wv.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,Bv);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ko(n,t){return x(()=>Lt(W(T(n,n),t,!0)))}class ir extends vs{getConfig(){return{}}}class id extends ir{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return x(()=>{const e=ko(t,this.axis),s=ae(e,0,this.maxValue);return T(t,U(s,O(Tt(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}id.className="MaxNorm";F(id);class ad extends ir{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return x(()=>U(t,O(Tt(),ko(t,this.axis))))}getConfig(){return{axis:this.axis}}}ad.className="UnitNorm";F(ad);class od extends ir{apply(t){return He(t)}}od.className="NonNeg";F(od);class ld extends ir{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return x(()=>{const e=ko(t,this.axis),s=O(T(this.rate,ae(e,this.minValue,this.maxValue)),T(1-this.rate,e));return T(t,U(s,O(Tt(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ld.className="MinMaxNorm";F(ld);const wl={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Et(n){return ho(n)}function Nl(n,t={}){return sr(n,me.getMap().classNameMap,t,"constraint")}function $t(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in wl?wl[n]:n,config:{}};return Nl(e)}else return n instanceof ir?n:Nl(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function $n(n){if(n==null)return;const t=[],e=[],s=[];for(const r in n){const i=n[r];if(typeof i!="number"){const a=i;t.push(a.data()),e.push(r),s.push(a)}}if(t.length>0){const r=await Promise.all(t);for(let i=0;i<r.length;++i)n[e[i]]=r[i][0];Z(s)}}function ud(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Sl;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Sl||(Sl={}));const Uv=125;class js{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Gv{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class jv extends js{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const r in e){const i=e[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const o=x(()=>O(this.totals[r],T(i,s)));this.totals[r]=o,a!=null&&a.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:x(()=>{const r=T(U(1,this.seen),this.totals[s]);e[s]=r,this.totals[s].dispose(),_t(e[s])}))}}class qv extends js{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const i in this.history){const a=this.history[i];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){const l=a[o];t.push(l.data()),e.push(i),s.push(o)}}const r=await Promise.all(t);for(let i=0;i<r.length;++i)this.history[e[i]][s[i]].dispose(),this.history[e[i]][s[i]]=r[i][0]}}class Hv extends js{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||eT,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=Uv),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ai(this.yieldEvery)&&(this.maybeWait=dv(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const r=[];this.yield!=null&&(await $n(s),r.push(this.yield(t,e,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await $n(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await $n(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await $n(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await $n(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Ai(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await $n(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await $n(t),await this.trainEnd(t))}}function cd(n,t){return n==null&&(n={}),n instanceof js?[n]:Array.isArray(n)&&n[0]instanceof js?n:nt(n).map(s=>new Hv(s,t))}class de{constructor(){}static registerCallbackConstructor(t,e){g(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),de.checkForDuplicate(e),de.constructors[t]==null&&(de.constructors[t]=[]),de.constructors[t].push(e)}static checkForDuplicate(t){for(const e in de.constructors)de.constructors[+e].forEach(r=>{if(r===t)throw new E("Duplicate callback constructor.")})}static clear(){de.constructors={}}static createCallbacks(t){const e=[];for(const s in de.constructors){const r=+s;t>=r&&e.push(...de.constructors[r])}return e.map(s=>new s)}}de.constructors={};function hd(n,t,e,s,r,i,a,o,l){const u=new qv,c=[new jv,...de.createCallbacks(t)];n!=null&&c.push(...n),c.push(u);const h=new Gv(c);return h.setParams({epochs:e,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function en(n,t={},e=!1){return sr(n,me.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cr(n,t){return x(()=>{n.dtype!=="float32"&&(n=B(n,"float32"));const e=W(Zs(n),t,!0),s=Ss(e.shape,Tt()),r=Lt(an(e,s));return U(n,r)})}function ui(n,t){return x(()=>wt(Zs(P(t,n)),-1))}function To(n,t){return x(()=>wt(At(P(t,n)),-1))}function Io(n,t){return x(()=>{const e=P(n,t),s=ae(At(n),Tt(),Number.MAX_VALUE),r=At(U(e,s));return T(100,wt(r,-1))})}function Kv(n,t){return x(()=>{const e=ae(t,Tt(),Number.MAX_VALUE),s=oe(O(1,e)),r=ae(n,Tt(),Number.MAX_VALUE),i=oe(O(1,r));return wt(Zs(P(s,i)),-1)})}function Zv(n,t){return x(()=>{const e=an(0,P(1,T(n,t)));return wt(Zs(e),-1)})}function Jv(n,t){return x(()=>{const e=an(0,P(1,T(n,t)));return wt(e,-1)})}function Xv(n,t){return x(()=>{const e=W(T(n,t),-1),s=Ne(T(P(1,n),t),-1);return an(0,O(1,P(s,e)))})}function Yv(n,t){return x(()=>{const e=Math.log(2),s=P(t,n),r=P(O(s,ks(T(-2,s))),e);return wt(r,-1)})}function qs(n,t,e=!1){return x(()=>{if(e)t=ii(t);else{const s=W(t,t.shape.length-1,!0);t=U(t,s)}return t=ae(t,Tt(),1-Tt()),ht(W(T(B(n,"float32"),oe(t)),t.shape.length-1))})}function Or(n,t,e=!1){return x(()=>{const s=B(nr(cm(n)),"int32");t=ae(t,Tt(),1-Tt());const r=t.shape,i=A(Wa(s,r[r.length-1]),r);return qs(i,t,e)})}function Qv(n,t){if(!Ot(n.shape,t.shape))throw new E(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return x(()=>{const e=He(t),s=ht(At(t));return O(P(e,T(t,n)),Yr(ee(s)))})}function ci(n,t){return x(()=>{let e;return e=ae(t,Tt(),1-Tt()),e=oe(U(e,P(1,e))),wt(Qv(n,e),-1)})}function tE(n,t){return x(()=>{const e=ae(n,Tt(),1),s=ae(t,Tt(),1);return W(T(n,oe(U(e,s))),-1)})}function eE(n,t){return x(()=>{const e=oe(O(Tt(),t));return wt(P(t,T(n,e)),-1)})}function pd(n,t){return x(()=>{const e=Cr(n,-1),s=Cr(t,-1),r=T(e,s);return ht(W(r,-1))})}const Fr={meanSquaredError:ui,meanAbsoluteError:To,meanAbsolutePercentageError:Io,meanSquaredLogarithmicError:Kv,squaredHinge:Zv,hinge:Jv,categoricalHinge:Xv,logcosh:Yv,categoricalCrossentropy:qs,sparseCategoricalCrossentropy:Or,binaryCrossentropy:ci,kullbackLeiblerDivergence:tE,poisson:eE,cosineProximity:pd};function ki(n){if(typeof n=="string"){if(n in Fr)return Fr[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new E(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dd(n,t){return x(()=>{const e=T(.5,le(t)),s=We(ie(t,e),n.dtype);return wt(Ce(n,s),-1)})}function fd(n,t){return x(()=>We(Ce(fs(n,-1),fs(t,-1)),"float32"))}function nE(n,t){return x(()=>B(W(je(Ce(n,1),Ce(t,1))),"float32"))}function sE(n,t){return x(()=>B(W(je(Ce(n,0),Ce(t,1))),"float32"))}function rE(n,t){return x(()=>{const e=nE(n,t),s=sE(n,t),r=O(e,s);return B(Bt(ie(r,0),U(e,r),0),"float32")})}function iE(n,t){return ci(n,t)}function aE(n,t){return n.rank===t.rank&&(n=Jn(n,[n.rank-1])),t=fs(t,-1),t.dtype!==n.dtype&&(t=B(t,n.dtype)),B(Ce(n,t),"float32")}const oE=ui,lE=ui,uE=To,cE=To,hE=Io,pE=Io,md=qs,dE=pd,gd=Or,zr={binaryAccuracy:dd,categoricalAccuracy:fd,precision:rE,categoricalCrossentropy:md,sparseCategoricalCrossentropy:gd,mse:oE,MSE:lE,mae:uE,MAE:cE,mape:hE,MAPE:pE,cosine:dE};function fE(n){if(typeof n=="string"&&n in zr)return zr[n];if(typeof n!="string"&&n!=null)return n;throw new E(`Unknown metric ${n}`)}function dr(n){if(Me(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(Fr))if(Fr[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(zr))if(zr[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mE(n){const t={Adagrad:()=>Qn.adagrad(.01),Adadelta:()=>Qn.adadelta(1,.95,Tt()),Adam:()=>Qn.adam(.001,.9,.999,Tt()),Adamax:()=>Qn.adamax(.002,.9,.999,Tt(),0),RMSProp:()=>Qn.rmsprop(.001,.9,0,Tt()),SGD:()=>Qn.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new E(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const kl=1*1024*1024;function Tl(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!ta(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>kl&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${kl}.`)}}function ta(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!ta(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!ta(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gE(n,t,e,s=console.log){const r=bE(n),i=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(c=>Math.floor(t*c)));let a;if(!r){i.push("Receives inputs"),a=[];for(const c in n.nodesByDepth)a.push(...n.nodesByDepth[c])}s("_".repeat(t)),Lr(i,e,s),s("=".repeat(t));const o=n.layers;for(let c=0;c<o.length;++c)r?wE(o[c],e,s):NE(o[c],e,a,s),s((c===o.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=yE(n),u=xr(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function yE(n){let t;return n.collectedTrainableWeights!=null?t=xr(n.collectedTrainableWeights):t=xr(n.trainableWeights),t}function bE(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let i=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(i){t=!1;break}else i=!0;if(!t)break}return t}function Lr(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function wE(n,t,e){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const i=n.name,a=n.getClassName(),o=[`${i} (${a})`,r,s,n.countParams().toString()];Lr(o,t,e)}function NE(n,t,e,s){let r,i;try{i=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const a=[];for(const h of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(h)===-1))for(let p=0;p<h.inboundLayers.length;++p){const f=h.inboundLayers[p].name,w=h.nodeIndices[p],y=h.tensorIndices[p];a.push(`${f}[${w}][${y}]`)}const o=n.name,l=n.getClassName(),u=a.length===0?"":a[0],c=[`${o} (${l})`,i,r,n.countParams().toString(),u];Lr(c,t,s);for(let h=1;h<a.length;++h)Lr(["","","","",a[h]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yd(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function ea(n,t){if(n===null)return null;if(typeof n=="string")return _n(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];yd(t,r,i)?e.push(i):e.push(ea(i,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")e[s]=r;else{const i=_n(s);e[i]=ea(r,i)}}return e}}function na(n,t){if(n==null)return null;if(typeof n=="string")return Je(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];yd(t,r,i)?e.push(i):e.push(na(i,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s],i=Je(s);(s==="name"||s==="className")&&typeof r=="string"?e[i]=r:e[i]=na(r,s)}return e}}/** @license See the LICENSE file. */const bd="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const SE=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class $e extends J{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const I=this.getClassName().toLowerCase();this.name=Pr(I)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],hn(this.inputs).length!==this.inputs.length)throw new E(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(I=>I.name)}`);hn(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(I=>I.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const I of this.outputs){const $=I.sourceLayer,v=I.nodeIndex,D=I.tensorIndex;this.outputLayers.push($),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(D)}for(const I of this.inputs){const $=I.sourceLayer,v=I.nodeIndex,D=I.tensorIndex;Me(v===0,"input layer has >1 nodes"),Me(D===0,"input layer has >1 tensors"),this.inputLayers.push($),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(D)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let I=0;I<this.inputLayers.length;I++){const $=this.inputLayers[I];if(!($ instanceof rr))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${I} (0-based) originates from layer type ${$.getClassName()}.`);this.inputNames.push($.name),this.feedInputShapes.push($.batchInputShape),this.feedInputNames.push($.name)}for(const I of this.outputLayers)this.outputNames.push(I.name);this.internalInputShapes=this.inputs.map(I=>I.shape),this.internalOutputShapes=this.outputs.map(I=>I.shape);const e={},s={},r={},i={},a={},o=[],l=(I,$,v,D,C,M)=>{(D==null||C==null||M==null)&&(D=I.sourceLayer,C=I.nodeIndex,M=I.tensorIndex);const L=D.inboundNodes[C];if(v.indexOf(L)!==-1)throw new we(`The tensor ${I.name} at layer "${D.name}" is part of a cycle.`);if($.indexOf(L)!==-1)return;this.containerNodes.add($e.nodeKey(D,C)),D.id in a||(a[D.id]=Object.keys(a).length),v.indexOf(L)===-1&&v.push(L);const z=L.inboundLayers.length;for(let V=0;V<z;V++){const j=L.inputTensors[V],rt=L.inboundLayers[V],yt=L.nodeIndices[V],St=L.tensorIndices[V];l(j,$,v,rt,yt,St)}for($.push(L);v.indexOf(L)>=0;)v.splice(v.indexOf(L),1);o.push(L)},u=[],c=[];for(const I of this.outputs)l(I,u,c);const h=o.slice().reverse();for(const I of h){s[I.id]=I,I.id in e||(e[I.id]=0);let $=e[I.id];const v=r[I.outboundLayer.id]==null?0:r[I.outboundLayer.id];$=Math.max($,v),r[I.outboundLayer.id]=$,i[I.outboundLayer.id]=I.outboundLayer,e[I.id]=$;for(let D=0;D<I.inboundLayers.length;D++){const C=I.inboundLayers[D],M=I.nodeIndices[D],L=C.inboundNodes[M],z=e[L.id]==null?0:e[L.id];e[L.id]=Math.max($+1,z),s[L.id]=L}}const p={};for(const I in e){const $=e[I];$ in p||(p[$]=[]),p[$].push(s[I])}const f={};for(const I in r){const $=r[I];$ in f||(f[$]=[]),f[$].push(i[I])}let w=Object.keys(f).map(I=>parseInt(I,10)).sort(pr);this.layers=[];for(const I of w){const $=f[I];$.sort((v,D)=>{const C=a[v.id],M=a[D.id];return C<M?-1:C>M?1:0});for(const v of $)v instanceof $e&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=f,w=Object.keys(p).map(I=>parseInt(I,10)).sort(pr);const y=this.inputs.slice(),b=[];for(const I of w)for(const $ of p[I]){const v=$.outboundLayer;if(v!=null){for(const D of $.inputTensors)if(y.indexOf(D)===-1)throw new we(`Graph disconnected: cannot obtain value for tensor ${D} at layer "${v.name}". The following previous layers were accessed without issue: ${b}`);for(const D of $.outputTensors)y.push(D);b.push(v.name)}}this.nodesByDepth=p;const S=this.layers.map(I=>I.name);for(const I of S){const $=S.filter(v=>v===I).length;if($!==1)throw new we(`The name "${I}" is used ${$} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(S))}this.outboundNodes=[],this.inboundNodes=[],new li({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(I=>null),outputMasks:this.outputs.map(I=>null),inputShapes:this.inputs.map(I=>I.shape),outputShapes:this.outputs.map(I=>I.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new E("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;const i=SE(t);i&&this.parseWeights(t);for(const o of this.layers)for(const[l,u]of o.weights.entries()){const c=i?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[c]!=null)throw new E(`Duplicate weight name: ${c}`);s[c]=u,r++}const a=[];for(const o in t){let l=o;if(s[o]==null){const u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)a.push([s[l],t[o]]);else if(e)throw new E(`Provided weight data has no target variable: ${o}`);delete s[l]}if(e){const o=[];for(const l in s)o.push(l);if(o.length>0)throw new E(`${o.length} of ${r} weights are not set: ${o}`)}So(a)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),r=["vars","layer_checkpoint_dependencies"],i=s.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!r.includes(a)).join("/");i!==e&&(t[i]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${bd}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=na(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return x(()=>{t=nt(t);const s=new un;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return Os(this.outputs,s,e)})}computeMask(t,e){return x(()=>{t=nt(t);let s;return e==null?s=Gn(null,t.length):s=nt(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Ar(t);if(e.length!==this.inputLayers.length)throw new E(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let o=0;o<e.length;o++){const l=this.inputLayers[o],u=e[o],c=l.name+"_0_0";s[c]=u}const r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(pr);if(r.length>1)for(const o of r){const l=this.nodesByDepth[o];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(y=>y.id).indexOf(c.id)!==-1)continue;const h=[];for(let y=0;y<u.inboundLayers.length;y++){const b=u.inboundLayers[y],S=u.nodeIndices[y],I=u.tensorIndices[y],$=`${b.name}_${S}_${I}`,v=s[$];h.push(v)}const p=c.computeOutputShape(jt(h)),f=Ar(p),w=c.inboundNodes.indexOf(u);for(let y=0;y<f.length;y++){const b=`${c.name}_${w}_${y}`;s[b]=f[y]}}}const i=[],a=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],h=`${l.name}_${u}_${c}`;a.push(h)}for(let o=0;o<a.length;o++){const l=a[o];Me(l in s),i.push(s[l])}return jt(i)}runInternalGraph(t,e){e==null&&(e=Gn(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=t[l],h=e[l];s[u.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(pr);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,p=c.inputTensors,f=c.outputTensors,w=new Array;for(const y of p)y.id in s&&w.push(s[y.id]);if(w.length===p.length){let y={},b,S,I,$;if(c.callArgs!=null&&(y=c.callArgs),w.length===1){const[v,D]=w[0];y.mask==null&&(y.mask=D),I=nt(h.call(v,y)),$=nt(h.computeMask(v,D)),b=[v],S=[D]}else b=w.map(v=>v[0]),S=w.map(v=>v[1]),y.mask==null&&(y.mask=S),I=nt(h.call(b,y)),$=nt(h.computeMask(b,S));if(h.activityRegularizer)throw new K("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<f.length;++v){const D=f[v],C=I[v],M=$[v];s[D.id]=[C,M]}}}}const i=[],a=[],o=[];for(const l of this.outputs){Me(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];o.push(u.shape),i.push(u),a.push(c)}return[i,a,o]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof $e?1:0;for(let i=0;i<r.inboundNodes.length;i++){const a=$e.nodeKey(r,i);this.containerNodes.has(a)&&(e[a]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new E("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new E(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new E(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return x(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=$e.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const o=a.getClassName(),l=a.getConfig(),u=[];for(let h=0;h<a.inboundNodes.length;h++){const p=a.inboundNodes[h],f=$e.nodeKey(a,h);let w={};if(this.containerNodes.has(f)){if(p.callArgs)try{JSON.stringify(p.callArgs),w=p.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),w={}}if(p.inboundLayers.length>0){const y=[];for(let b=0;b<p.inboundLayers.length;b++){const S=p.inboundLayers[b],I=p.nodeIndices[b],$=p.tensorIndices[b],v=$e.nodeKey(S,I);let D=e[v];D==null&&(D=0),y.push([S.name,D,$,w])}u.push(y)}}}const c={};c.name=a.name,c.className=o,c.config=l,c.inboundNodes=u,s.push(c)}t.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const o=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=$e.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=e[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[a];r.push([o.name,c,h])}t.inputLayers=r;const i=[];for(let a=0;a<this.outputLayers.length;a++){const o=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=$e.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let c=e[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[a];i.push([o.name,c,h])}return t.outputLayers=i,t}static fromConfig(t,e,s={},r=!1){const i={},a={};function o(b,S){b.name in a?a[b.name].push(S):a[b.name]=[S]}function l(b,S){const I=[];let $;for(const v of S){const D=v[0],C=v[1],M=v[2];if($=v[3]==null?{}:v[3],!(D in i)){o(b,S);return}const L=i[D];if(L.inboundNodes.length<=C){o(b,S);return}const z=L.inboundNodes[C];I.push(z.outputTensors[M])}I.length>0&&b.apply(jt(I),$)}function u(b){const S=b.name,I=en(b,e.customObjects!=null?e.customObjects:{});I.setFastWeightInitDuringBuild(r),i[S]=I,b.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new E(`Corrupted configuration, expected array for nodeData: ${v}`);o(I,v)})}const c=e.name,h=e.layers;for(const b of h)u(b);for(;!pv(a);)for(const b of h){const S=i[b.name];if(S.name in a){const I=a[S.name];delete a[S.name];for(const $ of I)l(S,$)}}const p=[],f=[],w=e.inputLayers;for(const b of w){const S=b[0],I=b[1],$=b[2];Me(S in i);const D=i[S].inboundNodes[I].outputTensors;p.push(D[$])}const y=e.outputLayers;for(const b of y){const S=b[0],I=b[1],$=b[2];Me(S in i);const D=i[S].inboundNodes[I].outputTensors;f.push(D[$])}return new t({inputs:p,outputs:f,name:c})}get stateful(){if(this._stateful)throw new E("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){x(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kE(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return t.forEach(i=>{i in n?r.push(n[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function wd(n,t){return kE(n,t,"classWeight")}async function Nd(n,t,e,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const r=x(()=>{if(n.shape.length===1)return tn(n);if(n.shape.length===2){if(n.shape[1]>1)return fs(n,1);if(n.shape[1]===1)return A(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());Z(r);const a=[];return i.forEach(o=>{if(e[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);a.push(e[o])}),Ht(a,"float32")}else return null}function TE(n,t){return T(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const IE=32;function Sd(n,t){let e,s;const r=t;e=r.xs,s=r.ys,g(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const i=Il("input",n.inputNames,e),a=Il("output",n.outputNames,s),o=i[0].shape[0];g(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),g(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)g(i[l].shape[0]===o,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);for(let l=0;l<a.length;l++)g(a[l].shape[0]===o,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);return{xs:i,ys:a}}function Il(n,t,e){if(e instanceof mt)return[e];if(Array.isArray(e))return g(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(e[r]==null)throw new E(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function vE(n){if(n.length===3)throw new K("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function EE(n,t,e){const s=e.batchesPerEpoch!=null;if(g(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),g(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),g(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),g(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),g(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=e.validationData!=null;let i,a;if(r)if(vl(e.validationData))g(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const b=vE(e.validationData);i=b.xs,a=b.ys}const o=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;r?u=l.slice().concat(l.map(b=>"val_"+b)):u=l.slice();const c=cd(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:p,history:f}=hd(c,h,e.epochs,null,null,$E(t,e),null,r,u);p.setModel(n),n.history=f,await p.onTrainBegin(),n.stopTraining_=!1;let w=e.initialEpoch==null?0:e.initialEpoch,y=await t.iterator();for(;w<e.epochs;){const b={};await p.onEpochBegin(w);let S=0,I=0;for(s||(y=await t.iterator());!s||S<e.batchesPerEpoch;){const $=await y.next();if(s&&$.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${S} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if($.value!=null){const{xs:v,ys:D}=Sd(n,$.value),C={};C.batch=I,C.size=v[0].shape[0],await p.onBatchBegin(I,C);const M=[];if(e.classWeight!=null){const V=wd(e.classWeight,n.outputNames);for(let j=0;j<V.length;++j)M.push(await Nd(D[j],null,V[j]))}const L=v.concat(D).concat(M),z=o(L);Z(L);for(let V=0;V<l.length;++V){const j=l[V],rt=z[V];C[j]=rt,_t(rt)}await p.onBatchEnd(I,C),ud(C),I++,S++}if(s?S>=e.batchesPerEpoch:$.done){if(r){let v;vl(e.validationData)?v=nt(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):v=nt(n.evaluate(i,a,{batchSize:e.validationBatchSize==null?IE:e.validationBatchSize,verbose:0}));for(let D=0;D<n.metricsNames.length;++D)b[`val_${n.metricsNames[D]}`]=v[D]}break}if(n.stopTraining_)break}if(await p.onEpochEnd(w,b),w++,n.stopTraining_)break}return await p.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function $E(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function vl(n){return typeof n.iterator=="function"}function AE(n){return typeof n.next=="function"}async function xE(n,t,e){e=e||{};const s=e.batches!=null,r=n.testFunction;let i=[];if(e.verbose>0)throw new K("Verbose mode is not implemented yet.");g(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const a=AE(t)?t:await t.iterator();let o=0,l=0;for(;!s||l<e.batches;){const u=await a.next();if(i=x(()=>{if(u.value){const{xs:c,ys:h}=Sd(n,u.value),p=c.concat(h),f=x(()=>r(p));if(Z(p),l===0)for(let y=0;y<f.length;++y)i.push(G(0));const w=p[0].shape[0];for(let y=0;y<f.length;++y){const b=f[y],S=i[y];i[y]=x(()=>O(i[y],T(w,b))),l>0&&Z(S)}Z(f),o+=w,++l}return i}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const c=i[u];i[u]=U(i[u],o),Z(c)}return jt(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ti(n){g(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function As(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>Nr(s,t,e-t)):Nr(n,t,e-t)}function sa(n,t){return x(()=>n==null?null:Array.isArray(n)?n.map(e=>sa(e,t)):jl(n,t.dtype==="int32"?t:B(t,"int32")))}function Ii(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function kd(n){const t=[];n instanceof mt&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(Vr(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Ee(n,t){if(n==null)return;const e=[];if(t instanceof mt)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(t!=null)for(const r in t){const i=t[r];e.push(i.id)}const s=[];if(n instanceof mt)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{e.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const i=n[r];e.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DE(n){return n instanceof mt}function ra(n){return Array.isArray(n)}function El(n){return!DE(n)&&!ra(n)}function $l(n,t,e,s=!0,r=""){if(t==null||t.length===0){if(n!=null){let a=!1;if(ra(n)&&n.length>0)a=!0;else if(El(n)){for(const o in n)if(n.hasOwnProperty(o)){a=!0;break}}else a=!0;if(a)throw new E(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(a=>null);let i;if(El(n)){n=n,i=[];for(const a of t){if(n[a]==null)throw new E(`No data provided for "${a}". Need data for each key in: ${t}`);i.push(n[a])}}else if(ra(n)){if(n=n,n.length!==t.length)throw new E(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,t.length>1)throw new E(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=kd(i),e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;const o=i[a];if(o.shape.length!==e[a].length)throw new E(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<e[a].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=e[a][l];if(c!=null&&c>=0&&u!==c)throw new E(`${r} expected a batch of elements where each example has shape [${e[a].slice(1,e[a].length)}] (i.e.,tensor shape [*,${e[a].slice(1,e[a].length)}]) but the ${r} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return i}function _E(n,t,e){const s=hn(n.map(i=>i.shape[0]));s.sort();const r=hn(t.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new E(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(r.length>1)throw new E(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!Ot(s,r))throw new E(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function CE(n,t,e){const s=[ui,ci,qs];for(let r=0;r<n.length;++r){const i=n[r],a=t[r],o=e[r];if(a!=null){if(a===qs&&i.shape[i.shape.length-1]===1)throw new E(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const l=i.shape.slice(1),u=o.slice(1);for(let c=0;c<l.length;++c){const h=l[c],p=u[c];if(p!=null&&h!==p)throw new E(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Al(n,t,e,s=!0,r=""){let i;if(Array.isArray(n)){if(n.length!==t.length)throw new E(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(t.length>1)throw new E(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;const o=i[a];if(o.shape.length!==e[a].length)throw new E(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<e[a].length;++l){if(l===0&&!s)continue;const u=o.shape[l],c=e[a][l];if(c!=null&&c!==u)throw new E(`Error when checking ${r}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function OE(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let i=e.hasOwnProperty(r)?e[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const FE="layers-model";class us extends $e{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new E("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");gE(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=mE(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof In))throw new E("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const a in t.loss)if(this.outputNames.indexOf(a)===-1)throw new E(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)t.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),e.push(ki(t.loss[a]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new E(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(o=>ki(o))}else{const a=ki(t.loss);this.outputs.forEach(o=>{e.push(a)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const o=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],zn("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=OE(t.metrics,this.outputNames),i=(a,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,a])};zn("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const o=r[a];(u=>{const c="";let h,p,f;for(const w of u){if(typeof w=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(w)!==-1){const b=this.internalOutputShapes[a];b[b.length-1]===1||this.lossFunctions[a]===ci?["accuracy","acc"].indexOf(w)!==-1?p=dd:["crossentropy","ce"].indexOf(w)!==-1&&(p=iE):this.lossFunctions[a]===Or?["accuracy","acc"].indexOf(w)!==-1?p=aE:["crossentropy","ce"].indexOf(w)!==-1&&(p=gd):["accuracy","acc"].indexOf(w)!==-1?p=fd:["crossentropy","ce"].indexOf(w)!==-1&&(p=md);let S;["accuracy","acc"].indexOf(w)!==-1?S="acc":["crossentropy","ce"].indexOf(w)!==-1&&(S="ce"),f=p,h=c+S}else f=fE(w),h=c+dr(w);let y;zn(h,()=>{y=f}),i(a,h,y)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const r=s.batchSize==null?32:s.batchSize;Ti(r);const i=!0,a=this.standardizeUserDataXY(t,e,i,r);try{const o=a[0].concat(a[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,o,r,s.verbose,s.steps);return jt(u)}finally{Ee(a[0],t),Ee(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),xE(this,t,e)}checkNumSamples(t,e,s,r="steps"){let i;if(s!=null){if(i=null,e!=null)throw new E(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?i=t[0].shape[0]:i=t.shape[0];else throw new E(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new E("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),r=s?e:[e],i=this.retrieveSymbolicTensors(r),a=new un;if(t instanceof mt&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new E(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],t[l])}else for(const l of this.inputs){const u=t[l.name];if(u==null)throw new E(`No value is provided for the model's input ${l.name}`);a.add(l,u)}const o=Os(i,a);return s?o:o[0]}retrieveSymbolicTensors(t){const e=Gn(null,t.length);let s=t.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],a=i.map(o=>o.name);for(let o=0;o<t.length;++o){const l=a.indexOf(t[o]);if(l!==-1&&(e[o]=i[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw e.forEach((i,a)=>{i==null&&r.push(t[a])}),new E(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return e}predictLoop(t,e=32,s=!1){return x(()=>{const r=this.checkNumSamples(t);if(s)throw new K("Verbose predictLoop() is not implemented yet.");const i=Ii(r,e),a=this.outputs.map(o=>[]);for(let o=0;o<i.length;++o)x(()=>{const u=i[o][0],c=i[o][1],h=As(t,u,c),p=[];if(Array.isArray(h))for(let w=0;w<h.length;++w)p.push({key:this.inputs[w],value:h[w]});else p.push({key:this.inputs[0],value:h});const f=new un(p);return Os(this.outputs,f)}).forEach((u,c)=>a[c].push(u));return jt(a.map(o=>vt(o,0)))})}predict(t,e={}){const s=kd(t);Al(s,this.inputNames,this.feedInputShapes,!1);try{const r=e.batchSize==null?32:e.batchSize;return Ti(r),this.predictLoop(s,r)}finally{Ee(s,t)}}predictOnBatch(t){Al(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,r){if(this.optimizer_==null)throw new we("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let a=0;a<this.feedOutputShapes.length;++a){const o=this.feedOutputShapes[a];this.feedLossFns[a]===Or?i.push(o.slice(0,o.length-1).concat([1])):i.push(o)}if(t=$l(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=$l(e,this.feedOutputNames,i,!1,"target"),_E(t,e),CE(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&t[0].shape[0]%r!==0)throw new E(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,r,i=!0,a){const[o,l]=this.standardizeUserDataXY(t,e,i,a);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const c=wd(r,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await Nd(l[h],null,c[h]))}return[o,l,u]}testLoop(t,e,s,r=0,i){return x(()=>{const a=this.checkNumSamples(e,s,i,"steps"),o=[];if(r>0)throw new K("Verbose mode is not implemented yet.");if(i!=null)throw new K("steps mode in testLoop() is not implemented yet");{const l=Ii(a,s),u=Ht(Oe(0,a));for(let c=0;c<l.length;++c){const h=l[c][0],p=l[c][1],f=Nr(u,h,p-h),w=sa(e,f),y=t(w);if(c===0)for(let b=0;b<y.length;++b)o.push(G(0));for(let b=0;b<y.length;++b){const S=y[b];o[b]=O(o[b],T(p-h,S))}}for(let c=0;c<o.length;++c)o[c]=U(o[c],a)}return o})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const r=t[s];let i=r;if(dl(t,r)>1){const a=dl(t.slice(0,s),r);i+=`_${a}`}e.push(i)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{const h=[];for(let y=0;y<this.inputs.length;++y)h.push({key:this.inputs[y],value:s[y]});const p=new un(h),f=Os(this.outputs,p,{training:!0});let w;for(let y=0;y<this.lossFunctions.length;++y){const b=this.lossFunctions[y];let S=b(r[y],f[y]);i[y]!=null&&(S=TE(S,i[y]));const I=wt(S);e.push(I),y===0?w=S:w=O(w,S)}for(let y=0;y<this.metricsTensors.length;++y){let b;if(this.outputs.length>1&&y<this.outputs.length)b=e[y];else{const S=this.metricsTensors[y][0],I=this.metricsTensors[y][1];b=wt(S(r[I],f[I]))}_t(b),a.push(b)}return w=wt(w),this.calculateLosses().forEach(y=>{w=O(w,y)}),w},l=this.collectedTrainableWeights.map(h=>h.read()),u=!0;return[this.optimizer_.minimize(o,u,l)].concat(a)}}makeTestFunction(){this.testFunction=t=>x(()=>{const e=[];let s;const r=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:r[u]});const o=new un(a),l=Os(this.outputs,o);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=wt(c(i[u],l[u]));u===0?s=h:s=O(s,h),e.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],p=wt(c(i[h],l[h]));e.push(p)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,i,a,o,l,u,c,h,p;try{const f=s.batchSize==null?32:s.batchSize;Ti(f);const w=!1,y=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,w,f);r=y[0],i=y[1],p=y[2];let b=!1,S;if(s.validationData!=null&&s.validationData.length>0){if(b=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new K("validationData including sample weights is not supported yet."):new E(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const z=!0,V=await this.standardizeUserData(l,u,null,null,z,f);c=V[0],h=V[1],S=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){b=!0;const z=Math.floor(r[0].shape[0]*(1-s.validationSplit)),V=r[0].shape[0];c=As(r,z,V),a=r,r=As(r,0,z),h=As(i,z,V),o=i,i=As(i,0,z),S=c.concat(h)}else s.validationSteps!=null&&(b=!0);const I=r.concat(i).concat(p);this.checkTrainableWeightsConsistency();const $=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let D,C;b?(this.makeTestFunction(),D=this.testFunction,C=v.slice().concat(v.map(z=>"val_"+z))):(D=null,S=[],C=v.slice());const M=cd(s.callbacks,s.yieldEvery);return await this.fitLoop($,I,v,f,s.epochs,s.verbose,M,D,S,s.shuffle,C,s.initialEpoch,null,null)}finally{this.isTraining=!1,Ee(r,t),Ee(i,e),Ee(a,t),Ee(o,e),Ee(c,l),Ee(h,u),p!=null&&Z(p)}}async fitLoop(t,e,s,r,i,a,o,l,u,c,h,p,f,w){r==null&&(r=32),i==null&&(i=1),c==null&&(c=!0),p==null&&(p=0);let y=!1;if(l!=null&&u!=null&&(y=!0),w!=null&&(y=!0,f==null))throw new E("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=this.checkNumSamples(e,r,f,"steps_per_epoch");let S;b!=null&&(S=Oe(0,b)),a==null&&(a=1);const{callbackList:I,history:$}=hd(o,a,i,p,b,f,r,y,h);I.setModel(this),this.history=$,await I.onTrainBegin(),this.stopTraining_=!1;for(let v=p;v<i;++v){await I.onEpochBegin(v);const D={};if(f!=null)throw new K("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new K("batch shuffling is not implemneted yet");c&&bm(S);const C=Ht(S),M=Ii(b,r);for(let L=0;L<M.length;++L){const z={};if(await I.onBatchBegin(L,z),x(()=>{const V=M[L][0],j=M[L][1],rt=Nr(C,V,j-V);z.batch=L,z.size=j-V;const yt=sa(e,rt),St=t(yt);for(let bt=0;bt<s.length;++bt){const Gt=s[bt],Pt=St[bt];z[Gt]=Pt,_t(Pt)}if(L===M.length-1&&y){const bt=this.testLoop(l,u,r);for(let Gt=0;Gt<s.length;++Gt){const Pt=s[Gt],he=bt[Gt];_t(he),D["val_"+Pt]=he}}}),await I.onBatchEnd(L,z),ud(z),this.stopTraining_)break}C.dispose()}if(await I.onEpochEnd(v,D),this.stopTraining_)break}return await I.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return EE(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),r=s[0],i=s[1],o=this.makeTrainFunction()(r.concat(i)),l=[];for(const u of o){const c=await u.data();l.push(c[0])}return Z(o),Ee(s[0],t),Ee(s[1],e),jt(l)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||e.push({name:r[a].originalName,tensor:i[a]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=Vi().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Vi().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Je(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Je(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const r of e)if(typeof s[r]=="string")t[r]=Je(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Je(dr(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Je(dr(t)));{const t={};for(const e in this.metrics)t[e]=Je(dr(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=ea(t.optimizer_config),s=en(e);let r;if(typeof t.loss=="string")r=_n(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(a=>_n(a));else if(t.loss!=null){r={};for(const a in t.loss)r[a]=_n(t.loss[a])}let i;if(Array.isArray(t.metrics))i=t.metrics.map(a=>_n(a));else if(t.metrics!=null){i={};for(const a in t.metrics)i[a]=_n(t.metrics[a])}this.compile({loss:r,metrics:i,optimizer:s})}async save(t,e){if(typeof t=="string"){const u=oh(t);if(u.length===0)throw new E(`Cannot find any save handlers for URL '${t}'`);if(u.length>1)throw new E(`Found more than one (${u.length}) save handlers for URL '${t}'`);t=u[0]}if(t.save==null)throw new E("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Wi(this.getNamedWeights(e)),r=!1,i=null,o={modelTopology:this.toJSON(i,r),format:FE,generatedBy:`TensorFlow.js tfjs-layers v${bd}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await Wi(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=rh([s.data,c])}return this.userDefinedMetadata!=null&&(Tl(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=s.data,o.weightSpecs=s.specs,t.save(o)}setUserDefinedMetadata(t){Tl(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}us.className="Model";F(us);class Td extends us{}Td.className="Functional";F(Td);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Hs extends us{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Pr("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new E(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Hs||t instanceof us;let s;if(e){if(s=t,s.outputs.length!==1)throw new E("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new E("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new E("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=Lv({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(r)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new E(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new E("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=rd(this.outputs[0])}this.inboundNodes=[],new li({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Gn(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=t.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(et(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new us({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new we("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new we("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new we("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new we("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},r=!1){let i,a={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new E("Legacy serialization format not supported yet.");i=e}else g(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=e.layers,delete e.layers,a=e;const o=new t(a);if(!(o instanceof Hs))throw new K(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of i){const c=en(l,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(t){if(this.model==null)throw new E("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new E("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Hs.className="Sequential";F(Hs);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Mt extends vs{getConfig(){return{}}}class Id extends Mt{apply(t,e=1){return hm(t,e)}}Id.className="elu";F(Id);class vd extends Mt{apply(t){return Ha(t)}}vd.className="selu";F(vd);class Ed extends Mt{apply(t){return He(t)}}Ed.className="relu";F(Ed);class $d extends Mt{apply(t){return x(()=>Wn(6,He(t)))}}$d.className="relu6";F($d);class Ad extends Mt{apply(t){return t}}Ad.className="linear";F(Ad);class xd extends Mt{apply(t){return Ge(t)}}xd.className="sigmoid";F(xd);class Dd extends Mt{apply(t){return pm(t)}}Dd.className="hardSigmoid";F(Dd);class _d extends Mt{apply(t){return ks(t)}}_d.className="softplus";F(_d);class Cd extends Mt{apply(t){return dm(t)}}Cd.className="softsign";F(Cd);class Od extends Mt{apply(t){return Vn(t)}}Od.className="tanh";F(Od);class vo extends Mt{apply(t,e=-1){return ii(t,e)}}vo.className="softmax";F(vo);class Fd extends Mt{apply(t,e=-1){return Ma(t,e)}}Fd.className="logSoftmax";F(Fd);class zd extends Mt{apply(t){return x(()=>x(()=>{const e=Math.sqrt(2),s=T(.5,O(1,La(U(t,e))));return T(t,s)}))}}zd.className="gelu";F(zd);class Ld extends Mt{apply(t){return x(()=>T(.5,T(t,O(1,Vn(T(Lt(U(2,Math.PI)),O(t,T(.044715,nn(t,3)))))))))}}Ld.className="gelu_new";F(Ld);class Rd extends Mt{apply(t){return x(()=>T(t,Vn(ks(t))))}}Rd.className="mish";F(Rd);class Bd extends Mt{apply(t,e=1){return x(()=>T(Ge(T(t,e)),t))}}Bd.className="swish";F(Bd);function gn(n){return n.getClassName()}function vi(n,t={}){return sr(n,me.getMap().classNameMap,t,"activation")}function yn(n){if(n==null){const t={};return t.className="linear",t.config={},vi(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},vi(t)}else return n instanceof Mt?n:vi(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zE(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class Md extends vs{}class Pd extends Md{constructor(t){super(),zE(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return x(()=>{let e=Dt([1]);return this.hasL1&&(e=O(e,W(T(this.l1,At(t))))),this.hasL2&&(e=O(e,W(T(this.l2,Zs(t))))),A(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Pd.className="L1L2";F(Pd);const xl={l1l2:"L1L2"};function at(n){return ho(n)}function Dl(n,t={}){return sr(n,me.getMap().classNameMap,t,"regularizer")}function dt(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in xl?xl[n]:n,config:{}};return Dl(e)}else return n instanceof Md?n:Dl(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Vd extends J{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=q(t);let s=He(t);return this.maxValue!=null&&(s=ae(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Vd.className="ReLU";F(Vd);class Wd extends J{constructor(t){super(t==null?{}:t),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=q(t);return Xr(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Wd.className="LeakyReLU";F(Wd);class Ud extends J{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=pt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=dt(t.alphaRegularizer),this.alphaConstraint=$t(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new E(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=et(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<t.length;++r)s[r]=t[r];this.inputSpec=[new It({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=q(t),ri(t,this.alpha.read())}getConfig(){const t={alphaInitializer:gt(this.alphaInitializer),alphaRegularizer:at(this.alphaRegularizer),alphaConstraint:Et(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Ud.className="PReLU";F(Ud);class Gd extends J{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new K(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=q(t);return Kr(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Gd.className="ELU";F(Gd);class jd extends J{constructor(t){super(t==null?{}:t),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=q(t);return T(s,B(ie(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}jd.className="ThresholdedReLU";F(jd);class qd extends J{constructor(t){super(t==null?{}:t),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new vo().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return x(()=>{let s=q(t);const r=e.mask;if(r!=null){const i=T(P(Qt(s.shape),B(r,s.dtype)),G(-1e9));s=O(s,i)}return this.axis instanceof Array?this.axis.length>1?ee(P(s,Qr(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}qd.className="Softmax";F(qd);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cs(n,t,e){if(typeof n=="number")return Gn(n,t);if(n.length!==t)throw new E(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!kv(r))throw new E(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function _e(n,t,e,s,r=1){if(n==null)return n;const i=t+(t-1)*(r-1);let a;return e==="same"?a=n:a=n-i+1,Math.floor((a+s-1)/s)}function Pe(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+mn([e-t,0]);else if(s==="same")n=n*t;else throw new E(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Eo(n,t){return x(()=>(kt(t),t==="channelsFirst"?Q(n,[0,2,3,1]):n))}function Hd(n,t){return x(()=>(kt(t),t==="channelsFirst"?Q(n,[0,2,3,4,1]):n))}function LE(n,t,e,s=1,r="valid",i,a=1){return x(()=>{if(i==null&&(i=wn()),kt(i),n.shape.length!==3)throw new E(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new E(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new E(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(i==="channelsFirst"&&(n=Q(n,[0,2,1])),r==="causal")throw new K("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=_a(n,t,s,r==="same"?"same":"valid","NWC",a);return e!=null&&(o=Fe(o,e)),o})}function _l(n,t,e,s=[1,1],r="valid",i,a,o=null){return x(()=>{if(i==null&&(i=wn()),kt(i),n.rank!==3&&n.rank!==4)throw new E(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new E(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=Eo(n,i);if(r==="causal")throw new K("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=pp({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:o}),i==="channelsFirst"&&(l=Q(l,[0,3,1,2])),l})}function RE(n,t,e,s=[1,1,1],r="valid",i,a){return x(()=>{if(i==null&&(i=wn()),kt(i),n.rank!==4&&n.rank!==5)throw new E(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new E(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let o=Hd(n,i);if(r==="causal")throw new K("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=_h(o,t,s,r==="same"?"same":"valid","NDHWC",a),e!=null&&(o=Fe(o,e)),i==="channelsFirst"&&(o=Q(o,[0,4,1,2,3])),o})}class hi extends J{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",hi.verifyArgs(e),this.rank=t,Ct(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new K(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=cs(e.kernelSize,t,"kernelSize"),this.strides=cs(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,ce(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kt(this.dataFormat),this.activation=yn(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=$t(e.biasConstraint),this.biasRegularizer=dt(e.biasRegularizer),this.activityRegularizer=dt(e.activityRegularizer),this.dilationRate=cs(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new E(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new E(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new E(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Me("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!po(t.kernelSize,"number",1,3))throw new E(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:gn(this.activation),useBias:this.useBias,biasInitializer:gt(this.biasInitializer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),biasConstraint:Et(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Es extends hi{constructor(t,e){super(t,e),this.kernel=null,Es.verifyArgs(e),this.filters=e.filters,Ct(this.filters,"filters"),this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=$t(e.kernelConstraint),this.kernelRegularizer=dt(e.kernelRegularizer)}build(t){t=et(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new E(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return x(()=>{t=q(t);let s;const r=this.bias==null?null:this.bias.read(),i=qp(this.activation.getClassName());if(i!=null&&this.rank===2)s=_l(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=LE(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=_l(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=RE(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new K("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=et(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let i=0;i<s.length;++i){const a=_e(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);e.push(a)}let r=[t[0]];return this.dataFormat==="channelsLast"?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:gt(this.kernelInitializer),kernelRegularizer:at(this.kernelRegularizer),kernelConstraint:Et(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new E(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class ar extends Es{constructor(t){super(2,t),ar.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!po(t.kernelSize,"number",1,2))throw new E(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ar.className="Conv2D";F(ar);class or extends Es{constructor(t){super(3,t),or.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new E(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}or.className="Conv3D";F(or);class Kd extends ar{constructor(t){if(super(t),this.inputSpec=[new It({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new E(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=et(t),t.length!==4)throw new E("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new E("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new It({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return x(()=>{let s=q(t);if(s.shape.length!==4)throw new E(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);const l=r[a],u=r[o],c=this.kernelSize[0],h=this.kernelSize[1],p=this.strides[0],f=this.strides[1],w=Pe(l,p,c,this.padding),y=Pe(u,f,h,this.padding),b=[i,w,y,this.filters];this.dataFormat!=="channelsLast"&&(s=Q(s,[0,2,3,1]));let S=Oa(s,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=Q(S,[0,3,1,2])),this.bias!=null&&(S=Fe(S,this.bias.read(),this.dataFormat)),this.activation!=null&&(S=this.activation.apply(S)),S})}computeOutputShape(t){t=et(t);const e=t.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return e[s]=this.filters,e[r]=Pe(e[r],l,a,this.padding),e[i]=Pe(e[i],u,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Kd.className="Conv2DTranspose";F(Kd);class Zd extends or{constructor(t){if(super(t),this.inputSpec=[new It({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new E(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=et(t),t.length!==5)throw new E("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new E("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new It({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return x(()=>{let s=q(t);if(s.shape.length!==5)throw new E(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let a,o,l;this.dataFormat==="channelsFirst"?(l=2,a=3,o=4):(l=1,a=2,o=3);const u=r[l],c=r[a],h=r[o],p=this.kernelSize[0],f=this.kernelSize[1],w=this.kernelSize[2],y=this.strides[0],b=this.strides[1],S=this.strides[2],I=Pe(u,y,p,this.padding),$=Pe(c,b,f,this.padding),v=Pe(h,S,w,this.padding),D=[i,I,$,v,this.filters];this.dataFormat!=="channelsLast"&&(s=Q(s,[0,2,3,4,1]));let C=Oh(s,this.kernel.read(),D,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=Q(C,[0,4,1,2,3])),this.bias!==null&&(C=Fe(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(t){t=et(t);const e=t.slice();let s,r,i,a;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3,a=4):(s=4,r=1,i=2,a=3);const o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],p=this.strides[2];return e[s]=this.filters,e[r]=Pe(e[r],c,o,this.padding),e[i]=Pe(e[i],h,l,this.padding),e[a]=Pe(e[a],p,u,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Zd.className="Conv3DTranspose";F(Zd);class Jd extends Es{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new E("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new E("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new E(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=pt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=dt(e.depthwiseRegularizer),this.depthwiseConstraint=$t(e.depthwiseConstraint),this.pointwiseInitializer=pt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=dt(e.pointwiseRegularizer),this.pointwiseConstraint=$t(e.pointwiseConstraint)}build(t){if(t=et(t),t.length<this.rank+2)throw new E(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new E(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let o=0;o<this.rank;++o)i.push(1);i.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new It({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return x(()=>{t=q(t);let s;if(this.rank===1)throw new K("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Q(t,[0,2,3,1])),s=Ka(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Fe(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Q(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=gt(this.depthwiseInitializer),t.pointwiseInitializer=gt(this.pointwiseInitializer),t.depthwiseRegularizer=at(this.depthwiseRegularizer),t.pointwiseRegularizer=at(this.pointwiseRegularizer),t.depthwiseConstraint=Et(this.depthwiseConstraint),t.pointwiseConstraint=Et(this.pointwiseConstraint),t}}Jd.className="SeparableConv";class Xd extends Jd{constructor(t){super(2,t)}}Xd.className="SeparableConv2D";F(Xd);class pi extends Es{constructor(t){super(1,t),pi.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!po(t.kernelSize,"number",1,1))throw new E(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}pi.className="Conv1D";F(pi);class Yd extends J{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return x(()=>{if(t=q(t),this.dataFormat==="channelsLast"){const s=ur(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ur(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=ur(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ur(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Yd.className="Cropping2D";F(Yd);class Qd extends J{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kt(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,wv(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return x(()=>{let s=q(t);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Q(s,[0,2,3,1]);const i=this.size[0]*r[2],a=this.size[1]*r[3],o=this.interpolation==="nearest"?Ve.resizeNearestNeighbor(s,[i,a]):Ve.resizeBilinear(s,[i,a]);return Q(o,[0,3,1,2])}else{const i=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?Ve.resizeNearestNeighbor(s,[i,a]):Ve.resizeBilinear(s,[i,a])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}Qd.className="UpSampling2D";F(Qd);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function BE(n,t,e=[1,1],s="valid",r,i){return x(()=>{r==null&&(r=wn()),kt(r);let a=Eo(n,r);if(n.rank!==4)throw new E(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new E(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=tr(a,t,e,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(a=Q(a,[0,3,1,2])),a})}class tf extends hi{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=pt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=$t(t.depthwiseConstraint),this.depthwiseRegularizer=dt(t.depthwiseRegularizer)}build(t){if(t=et(t),t.length<4)throw new E(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new E(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return x(()=>{t=q(t);let s=BE(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Fe(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=et(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=_e(e,this.kernelSize[0],this.padding,this.strides[0]),a=_e(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],r,i,a]:[t[0],i,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=gt(this.depthwiseInitializer),t.depthwiseRegularizer=at(this.depthwiseRegularizer),t.depthwiseConstraint=Et(this.depthwiseRegularizer),t}}tf.className="DepthwiseConv2D";F(tf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ef(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new E("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return t=r(t),e=r(e),{inputs:n,initialState:t,constants:e}}function nf(n,t,e,s=!1,r,i,a=!1,o=!1){return x(()=>{const l=t.shape.length;if(l<3)throw new E(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Oe(2,l));if(t=Q(t,u),i!=null)throw new K("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=B(B(r,"bool"),"float32"),r.rank===l-1&&(r=Ut(r,-1)),r=Q(r,u)),s&&(t=ke(t,0),r!=null&&(r=ke(r,0)));const c=[];let h,p=e;const f=t.shape[0],w=Te(t);let y;r!=null&&(y=Te(r));for(let S=0;S<f;++S){const I=w[S],$=x(()=>n(I,p));if(r==null)h=$[0],p=$[1];else{const v=x(()=>{const D=y[S],C=P(le(D),D),M=O(T($[0],D),T(p[0],C)),L=p.map((z,V)=>O(T($[1][V],D),T(z,C)));return{output:M,newStates:L}});h=v.output,p=v.newStates}o&&c.push(h)}let b;return o&&(b=ne(c,1)),[h,b,p]})}class vn extends J{constructor(t){super(t);let e;if(t.cell==null)throw new E("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new xo({cells:t.cell}):e=t.cell,e.stateSize==null)throw new E("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new It({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Oe(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Yi(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let r;if(this.returnSequences?r=[t[0],t[1],s]:r=[t[0],s],this.returnState){const i=[];for(const a of e)i.push([t[0],a]);return[r].concat(i)}else return r}computeMask(t,e){return x(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new K("Constants support is not implemented in RNN yet.");Yi(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new It({shape:[e,null,...s]});const r=[t[0]].concat(t.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!Ot(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new E(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new It({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){x(()=>{if(!this.stateful)throw new Be("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new E("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Dt([s,r])):this.states_=[Dt([s,this.cell.stateSize])];else if(t==null)Z(this.states_),this.keptStates!=null&&(Z(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Dt([s,r])):this.states_[0]=Dt([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new E(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):Z(this.states_);for(let r=0;r<this.states_.length;++r){const i=t[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,o=[s,a];if(!Ot(i.shape,o))throw new E(`State ${r} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>_t(r.clone()))})}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const i=ef(t,s,r,this.numConstants);t=i.inputs,s=i.initialState,r=i.constants;let a=[],o=[];if(s!=null){e.initialState=s,a=a.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new It({shape:u.shape}));o=o.concat(this.stateSpec)}if(r!=null&&(e.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof qe){const u=[t].concat(a),c=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=c;const p=super.apply(u,e);return this.inputSpec=h,p}else return super.apply(t,e)}call(t,e){return x(()=>{const s=e==null?null:e.mask,r=e==null?null:e.training;let i=e==null?null:e.initialState;t=q(t),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new E(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},u=nf((w,y)=>{const b=this.cell.call([w].concat(y),o);return[b[0],b.slice(1)]},t,i,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],p=u[2];this.stateful&&this.resetStates(p,r);const f=this.returnSequences?h:c;return this.returnState?[f].concat(p):f})}getInitialState(t){return x(()=>{let e=Dt(t.shape);return e=W(e,[1,2]),e=Vr(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Fo(e,[1,s]):e):this.cell.stateSize>1?[Fo(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===vn.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const r=e.cell,i=en(r,s);return new t(Object.assign(e,{cell:i}))}}vn.className="RNN";F(vn);class di extends J{}class $o extends di{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Ct(this.units,"units"),this.activation=yn(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=dt(t.kernelRegularizer),this.recurrentRegularizer=dt(t.recurrentRegularizer),this.biasRegularizer=dt(t.biasRegularizer),this.kernelConstraint=$t(t.kernelConstraint),this.recurrentConstraint=$t(t.recurrentConstraint),this.biasConstraint=$t(t.biasConstraint),this.dropout=ws([1,mn([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ws([1,mn([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=et(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return x(()=>{if(t=t,t.length!==2)throw new E(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const r=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bn({ones:()=>le(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bn({ones:()=>le(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i;const a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?i=Ue(T(t,a),this.kernel.read()):i=Ue(t,this.kernel.read()),this.bias!=null&&(i=Fe(i,this.bias.read())),o!=null&&(s=T(s,o));let l=O(i,Ue(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:gn(this.activation),useBias:this.useBias,kernelInitializer:gt(this.kernelInitializer),recurrentInitializer:gt(this.recurrentInitializer),biasInitializer:gt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Et(this.kernelConstraint),recurrentConstraint:Et(this.recurrentConstraint),biasConstraint:Et(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}$o.className="SimpleRNNCell";F($o);class sf extends vn{constructor(t){t.cell=new $o(t),super(t)}call(t,e){return x(()=>{this.cell.dropoutMask!=null&&(Z(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Z(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,e){return new t(e)}}sf.className="SimpleRNN";F(sf);class Ao extends di{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new E("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Ct(this.units,"units"),this.activation=yn(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=yn(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=dt(t.kernelRegularizer),this.recurrentRegularizer=dt(t.recurrentRegularizer),this.biasRegularizer=dt(t.biasRegularizer),this.kernelConstraint=$t(t.kernelConstraint),this.recurrentConstraint=$t(t.recurrentConstraint),this.biasConstraint=$t(t.biasConstraint),this.dropout=ws([1,mn([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ws([1,mn([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=et(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return x(()=>{if(t=t,t.length!==2)throw new E(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bn({ones:()=>le(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bn({ones:()=>le(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(t=T(t,i[0]));let c=Ue(t,this.kernel.read());this.useBias&&(c=Fe(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=T(r,a[0]));const h=this.recurrentKernel.read(),[p,f]=te(h,[2*this.units,this.units],h.rank-1),w=Ue(r,p),[y,b,S]=te(c,3,c.rank-1),[I,$]=te(w,2,w.rank-1);o=this.recurrentActivation.apply(O(y,I)),l=this.recurrentActivation.apply(O(b,$));const v=Ue(T(l,r),f);u=this.activation.apply(O(S,v));const D=O(T(o,r),T(O(1,ht(o)),u));return[D,D]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:gn(this.activation),recurrentActivation:gn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:gt(this.kernelInitializer),recurrentInitializer:gt(this.recurrentInitializer),biasInitializer:gt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Et(this.kernelConstraint),recurrentConstraint:Et(this.recurrentConstraint),biasConstraint:Et(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Ao.className="GRUCell";F(Ao);class rf extends vn{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ao(t),super(t)}call(t,e){return x(()=>{this.cell.dropoutMask!=null&&(Z(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Z(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}rf.className="GRU";F(rf);class fi extends di{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Ct(this.units,"units"),this.activation=yn(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=yn(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=dt(t.kernelRegularizer),this.recurrentRegularizer=dt(t.recurrentRegularizer),this.biasRegularizer=dt(t.biasRegularizer),this.kernelConstraint=$t(t.kernelConstraint),this.recurrentConstraint=$t(t.recurrentConstraint),this.biasConstraint=$t(t.biasConstraint),this.dropout=ws([1,mn([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ws([1,mn([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=et(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,a=this.units;r=new(e=class extends ve{apply(l,u){const c=i.apply([a]),h=new fo().apply([a]),p=i.apply([a*2]);return zo(zo(c,h),p)}},e.className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return x(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new E(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bn({ones:()=>le(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bn({ones:()=>le(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(t=T(t,a[0]));let p=Ue(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=T(r,o[0])),p=O(p,Ue(r,this.recurrentKernel.read())),this.useBias&&(p=Fe(p,this.bias.read()));const[f,w,y,b]=te(p,4,p.rank-1);l=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(w),c=O(T(u,i),T(l,this.activation.apply(y))),h=this.recurrentActivation.apply(b);const S=T(h,this.activation.apply(c));return[S,S,c]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:gn(this.activation),recurrentActivation:gn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:gt(this.kernelInitializer),recurrentInitializer:gt(this.recurrentInitializer),biasInitializer:gt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:at(this.kernelRegularizer),recurrentRegularizer:at(this.recurrentRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Et(this.kernelConstraint),recurrentConstraint:Et(this.recurrentConstraint),biasConstraint:Et(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}fi.className="LSTMCell";F(fi);class af extends vn{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new fi(t),super(t)}call(t,e){return x(()=>{this.cell.dropoutMask!=null&&(Z(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Z(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}af.className="LSTM";F(af);class xo extends di{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return x(()=>{t=t;let s=t.slice(1);const r=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?r.push(s.splice(0,o.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let a;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];s=r[o],o===0?a=[t[0]].concat(s):a=[a[0]].concat(s),a=l.call(a,e),i.push(a.slice(1))}s=[];for(const o of i.slice().reverse())s.push(...o);return[a[0]].concat(s)})}build(t){Yi(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,r)=>{zn(`RNNCell_${r}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=i=>({className:i.getClassName(),config:i.getConfig()}),r={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),r)}static fromConfig(t,e,s={}){const r=[];for(const i of e.cells)r.push(en(i,s));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Qi(t)}setWeights(t){const e=[];for(const s of this.cells){const r=s.weights.length,i=t.splice(r);for(let a=0;a<s.weights.length;++a)e.push([s.weights[a],i[a]])}So(e)}}xo.className="StackedRNNCells";F(xo);function bn(n){const{ones:t,rate:e,training:s=!1,count:r=1,dropoutFunc:i}=n,a=()=>i!=null?i(t(),e):ql(t(),e),o=()=>Js(a,t,s);return!r||r<=1?_t(o().clone()):Array(r).fill(void 0).map(o).map(u=>_t(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ME=globalThis&&globalThis.__rest||function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]]);return e};class of extends vn{constructor(t){if(t.unroll)throw new K("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new K("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new It({ndim:5})]}call(t,e){return x(()=>{if(this.cell.dropoutMask!=null&&(Z(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Z(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new E("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,r=e==null?null:e.training,i=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return x(()=>{const{stateSize:e}=this.cell,s=t.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],a=Dt(i);return Array.isArray(e)?Array(e.length).fill(a):[a]})}resetStates(t,e=!1){x(()=>{if(!this.stateful)throw new Be("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new E("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Dt(i)):this.states_=[Dt(i)];else if(t==null)Z(this.states_),this.keptStates!=null&&(Z(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Dt(i)):this.states_[0]=Dt(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new E(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Z(this.states_);for(let o=0;o<this.states_.length;++o){const l=t[o],u=i;if(!Ot(l.shape,u))throw new E(`State ${o} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[o]=l}}this.states_=this.states_.map(o=>_t(o.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:r,padding:i,strides:a,dilationRate:o}=this.cell,l=e==="channelsFirst",u=t[l?3:2],c=t[l?4:3],h=_e(u,r[0],i,a[0],o[0]),p=_e(c,r[1],i,a[1],o[1]);return[...t.slice(0,2),...l?[s,h,p]:[h,p,s]]}}of.className="ConvRNN2D";class Do extends fi{constructor(t){const{filters:e,kernelSize:s,strides:r,padding:i,dataFormat:a,dilationRate:o}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Ct(this.filters,"filters"),this.kernelSize=cs(s,2,"kernelSize"),this.kernelSize.forEach(l=>Ct(l,"kernelSize")),this.strides=cs(r||1,2,"strides"),this.strides.forEach(l=>Ct(l,"strides")),this.padding=i||"valid",ce(this.padding),this.dataFormat=a||"channelsLast",kt(this.dataFormat),this.dilationRate=cs(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>Ct(l,"dilationRate"))}build(t){var e;t=et(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new E(`The channel dimension of the input should be defined. Found ${t[s]}`);const r=t[s],i=4,a=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(e=class extends ve{apply(p,f){const w=u.apply([c]),y=Qt([c]),b=u.apply([c*2]);return ya([w,y,b])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return x(()=>{if(t.length!==3)throw new E(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,r=t[0],i=t[1],a=t[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=bn({ones:()=>le(r),rate:this.dropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(lr,gi,Oo)=>!gi||!gi[Oo]?lr:T(gi[Oo],lr);let c=u(r,l,0),h=u(r,l,1),p=u(r,l,2),f=u(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=bn({ones:()=>le(i),rate:this.recurrentDropout,training:s,count:o,dropoutFunc:this.dropoutFunc}));const w=this.recurrentDropoutMask;let y=u(i,w,0),b=u(i,w,1),S=u(i,w,2),I=u(i,w,3);const $=3,[v,D,C,M]=te(this.kernel.read(),o,$),[L,z,V,j]=this.useBias?te(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,v,L,this.padding),h=this.inputConv(h,D,z,this.padding),p=this.inputConv(p,C,V,this.padding),f=this.inputConv(f,M,j,this.padding);const[rt,yt,St,bt]=te(this.recurrentKernel.read(),o,$);y=this.recurrentConv(y,rt),b=this.recurrentConv(b,yt),S=this.recurrentConv(S,St),I=this.recurrentConv(I,bt);const Gt=this.recurrentActivation.apply(O(c,y)),Pt=this.recurrentActivation.apply(O(h,b)),he=O(T(Pt,a),T(Gt,this.activation.apply(O(p,S)))),Ke=T(this.recurrentActivation.apply(O(f,I)),this.activation.apply(he));return[Ke,Ke,he]})}getConfig(){const t=super.getConfig(),e=ME(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),s)}inputConv(t,e,s,r){const i=fn(t,e,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Fe(i,s,this.dataFormat):i}recurrentConv(t,e){return fn(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Do.className="ConvLSTM2DCell";F(Do);class lf extends of{constructor(t){const e=new Do(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}lf.className="ConvLSTM2D";F(lf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _o extends J{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?e[r]:this.noiseShape[r]);return s}call(t,e){return x(()=>{this.invokeCallHook(t,e);const s=q(t);if(0<this.rate&&this.rate<1){const r=e.training==null?!1:e.training,i=this.getNoiseShape(s);return Js(()=>ql(s,this.rate,i,this.seed),()=>s,r)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}_o.className="Dropout";F(_o);class uf extends _o{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}uf.className="SpatialDropout1D";F(uf);class cf extends J{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Ct(this.units,"units"),this.activation=yn(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=$t(t.kernelConstraint),this.biasConstraint=$t(t.biasConstraint),this.kernelRegularizer=dt(t.kernelRegularizer),this.biasRegularizer=dt(t.biasRegularizer),this.activityRegularizer=dt(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=et(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=et(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return x(()=>{this.invokeCallHook(t,e);const s=q(t),r=qp(this.activation.getClassName());let i;return r!=null?i=Ue(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=Ue(s,this.kernel.read()),this.bias!=null&&(i=Fe(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const t={units:this.units,activation:gn(this.activation),useBias:this.useBias,kernelInitializer:gt(this.kernelInitializer),biasInitializer:gt(this.biasInitializer),kernelRegularizer:at(this.kernelRegularizer),biasRegularizer:at(this.biasRegularizer),activityRegularizer:at(this.activityRegularizer),kernelConstraint:Et(this.kernelConstraint),biasConstraint:Et(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}cf.className="Dense";F(cf);class hf extends J{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=et(t);for(const e of t.slice(1))if(e==null)throw new E(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ls(t,1)]}call(t,e){return x(()=>{this.invokeCallHook(t,e);let s=q(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=Q(s,r)}return fm(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}hf.className="Flatten";F(hf);class pf extends J{constructor(t){super(t),this.supportsMasking=!0,this.activation=yn(t.activation)}call(t,e){return x(()=>{this.invokeCallHook(t,e);const s=q(t);return this.activation.apply(s)})}getConfig(){const t={activation:gn(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}pf.className="Activation";F(pf);class df extends J{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return x(()=>(t=q(t),mm(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}df.className="RepeatVector";F(df);class ff extends J{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",r=e.slice();let i=1,a=null;for(let l=0;l<r.length;++l){const u=r[l];if(this.isUnknown(u))if(a===null)a=l;else throw new E("Can only specifiy one unknown dimension.");else i*=u}const o=ls(t);if(a!==null){if(i===0||o%i!==0)throw new E(s);r[a]=o/i}else if(o!==i)throw new E(s);return r}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return x(()=>{this.invokeCallHook(t,e);const s=q(t),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return A(s,i)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}ff.className="Reshape";F(ff);class mf extends J{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Oe(1,t.dims.length+1);if(!Ot(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new It({ndim:this.dims.length+1})]}computeOutputShape(t){t=et(t);const e=t.slice();return this.dims.forEach((s,r)=>{e[r+1]=t[s]}),e}call(t,e){return Q(q(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}mf.className="Permute";F(mf);class gf extends J{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=q(t),r=-1;return Er(ys(s,this.maskValue),r)}call(t,e){return x(()=>{this.invokeCallHook(t,e);const s=q(t),r=-1,i=!0,a=Er(ys(s,this.maskValue),r,i);return T(s,B(a,s.dtype))})}}gf.className="Masking";F(gf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class yf extends J{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(nt(t.inputLength))}this.inputDim=t.inputDim,Ct(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Ct(this.outputDim,"outputDim"),this.embeddingsInitializer=pt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=dt(t.embeddingsRegularizer),this.activityRegularizer=dt(t.activityRegularizer),this.embeddingsConstraint=$t(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return x(()=>this.maskZero?(t=q(t),ys(t,Y(t))):null)}computeOutputShape(t){if(t=et(t),this.inputLength==null)return[...t,this.outputDim];const e=nt(this.inputLength);if(e.length!==t.length-1)throw new E(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let r=0;r<e.length;++r){const i=e[r],a=t[r+1];if(i!=null&&a!=null&&i!==a)throw new E(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);i==null&&(e[s]=a),s++}}return[t[0],...e,this.outputDim]}call(t,e){return x(()=>{this.invokeCallHook(t,e);let s=q(t);s.dtype!=="int32"&&(s=We(s,"int32"));const r=jl(this.embeddings.read(),A(s,[s.size]));return A(r,et(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:gt(this.embeddingsInitializer),embeddingsRegularizer:at(this.embeddingsRegularizer),activityRegularizer:at(this.activityRegularizer),embeddingsConstraint:Et(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}yf.className="Embedding";F(yf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yn extends J{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new K}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const i=t[t.length-e.length+r],a=e[r];if(i==null||a==null||i<0||a<0)s.push(null);else if(i===1)s.push(a);else if(a===1)s.push(i);else{if(i!==a)throw new E("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(i)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[et(t)]),t=t,t.length<2)throw new E(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const i of t)i!=null&&i[0]!==null&&e.push(i[0]);if(e=hn(e),e.length>1)throw new E(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let i=1;i<t.length;++i){const a=t[i]==null?null:t[i].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=t.map(i=>i.length);t.indexOf(null)===-1&&hn(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return x(()=>{if(t=t,this.reshapeRequired){const s=[],r=t.map(i=>i.rank);if(r.indexOf(null)===-1){const i=mn(r);for(let a of t){const o=a.rank;for(let l=0;l<i-o;++l)a=Vr(a,1);s.push(a)}return this.mergeFunction(s)}else{let i=!1;for(const l of t){const u=l.rank;if(u==null){const c=l.shape,h=c[0],p=c.slice(1).concat([h]);let f=A(l,[h].concat(ls(c.slice(1))));f=Q(f,[1,0]),f=A(f,p),s.push(f),i=!0}else if(u>1){const c=Oe(1,u).concat([0]);s.push(Q(l,c)),i=!0}else s.push(l)}let a=this.mergeFunction(s);const o=a.rank;if(i){if(o==null){const l=a.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));a=A(Q(A(a,[-1,c]),[1,0]),h)}else if(o>1){const l=[o-1].concat(Oe(0,o-1));a=Q(a,l)}}return a}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,i)}let s=[];for(const r of t)r!=null&&r[0]!==null&&s.push(r[0]);return s=hn(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return x(()=>{if(e==null)return null;if(!Array.isArray(e))throw new E("`mask` should be an Array");if(!Array.isArray(t))throw new E("`inputs` should be an Array");if(e.length!==t.length)throw new E(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>r==null))return null;e=e.map(r=>r==null?r:Ut(r,0));let s=e[0];for(let r=1;r<e.length-1;++r)s=je(s,e[r]);return s})}}class bf extends Yn{constructor(t){super(t)}mergeFunction(t){return x(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=O(e,t[s]);return e})}}bf.className="Add";F(bf);class wf extends Yn{constructor(t){super(t)}mergeFunction(t){return x(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=T(e,t[s]);return e})}}wf.className="Multiply";F(wf);class Nf extends Yn{constructor(t){super(t)}mergeFunction(t){return x(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=O(e,t[s]);return T(1/t.length,e)})}}Nf.className="Average";F(Nf);class Sf extends Yn{constructor(t){super(t)}mergeFunction(t){return x(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=an(e,t[s]);return e})}}Sf.className="Maximum";F(Sf);class kf extends Yn{constructor(t){super(t)}mergeFunction(t){return x(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Wn(e,t[s]);return e})}}kf.className="Minimum";F(kf);class Tf extends Yn{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new E("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(r!=null){e=!1;break}if(e)return;const s=[];for(let r=0;r<t.length;++r){const i=t[r].slice();i.splice(this.axis,1);let a=!1;for(const o of s)if(Ot(o,i)){a=!0;break}a||s.push(i)}if(s.length>1)throw new E("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return x(()=>ya(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new E("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of e.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new E("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new E("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new E(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return x(()=>{let s=!0;if(e.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<t.length;++a)e[a]==null?r.push(B(le(t[a]),"bool")):e[a].rank<t[a].rank?r.push(Ut(e[a],-1)):r.push(e[a]);const i=vt(r,this.axis);return Da(i,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}Tf.className="Concatenate";F(Tf);function xs(n,t){for(;n<0;)n+=t;return n}function PE(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new K("batchDot is not implemented for tensors of 4D or higher rank yet");if(g(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),g(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new K("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;e==null&&(e=[s-1,r-2]);const i=e;return x(()=>{let a;if(s>r){a=s-r;const l=[];for(let u=0;u<a;++u)l.push(1);t=A(t,t.shape.concat(l))}else if(r>s){a=r-s;const l=[];for(let u=0;u<a;++u)l.push(1);n=A(n,n.shape.concat(l))}else a=0;let o;if(n.shape.length===2&&t.shape.length===2)i[0]===i[1]?o=W(T(n,t),i[0]):o=W(T(Q(n,[1,0]),t),i[1]);else{const l=i[0]!==n.shape.length-1,u=i[1]===t.shape.length-1;o=X(n,t,l,u)}if(a>0){let l;s>r?l=s+r-3:l=s-1;const u=[];for(let c=l;c<l+a;++c)u.push(c);o=Jn(o,u)}return o.shape.length===1&&(o=Ut(o,1)),o})}class If extends Yn{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){g(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new K("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);if(e[r[0]]!==s[r[1]])throw new E(`Dimension incompatibility: ${e[r[0]]} !== ${s[r[1]]}`)}mergeFunction(t){if(t.length!==2)throw new E(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,a)=>xs(i,t[a].shape.length)):r=[xs(this.axes,e.shape.length),xs(this.axes,s.shape.length)],this.normalize&&(e=Cr(e,r[0]),s=Cr(s,r[1])),PE(e,s,r)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[xs(this.axes,t.length),xs(this.axes,e.length)],s}computeOutputShape(t){g(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new K("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);e.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=e.concat(s);return i.length===1&&i.push(1),i}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}If.className="Dot";F(If);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vf extends J{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return x(()=>{this.invokeCallHook(t,e);const s=q(t);return Js(()=>O(Mr(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}vf.className="GaussianNoise";F(vf);class Ef extends J{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return x(()=>{this.invokeCallHook(t,e);const s=q(t);return this.rate>0&&this.rate<1?Js(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return T(s,Mr(s.shape,1,i))},()=>s,e.training||!1):s})}}Ef.className="GaussianDropout";F(Ef);class $f extends J{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||q(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return x(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Js(()=>{const i=q(t),a=1.6732632423543772,o=1.0507009873554805,l=-a*o;let u=kn(Zn(s),this.rate);u=We(u,"float32");const c=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-c*l*this.rate,p=O(T(i,u),T(O(u,-1),l));return O(T(p,c),h)},()=>q(t),e.training||!1)}return t})}}$f.className="AlphaDropout";F($f);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ks(n,t,e,s,r,i=.001){let a;if(n.rank===2)a=Eh(n,t,e,s,r,i);else if(n.rank===3)a=$h(n,t,e,s,r,i);else if(n.rank===4)a=Ah(n,t,e,s,r,i);else throw new K(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function VE(n,t,e,s,r=.001){return x(()=>{const i=ni(n,s),a=i.mean,o=i.variance;return[Ks(n,a,o,e,t,r),a,o]})}function WE(n,t,e,s,r=.001){return x(()=>{const i=ni(n,s),a=i.mean,o=i.variance,l=[];for(const w of Oe(0,n.rank))s.indexOf(w)!==-1?l.push(1):l.push(n.shape[w]);const u=A(a,l),c=A(o,l),h=t==null?null:A(t,l),p=e==null?null:A(e,l);return[Ks(n,u,c,p,h,r),a,o]})}function UE(n,t,e,s,r=.001){return Ot(s.slice().sort(),Oe(0,n.rank-1))?VE(n,t,e,s,r):WE(n,t,e,s,r)}class Af extends J{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=pt(t.betaInitializer||"zeros"),this.gammaInitializer=pt(t.gammaInitializer||"ones"),this.movingMeanInitializer=pt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=pt(t.movingVarianceInitializer||"ones"),this.betaConstraint=$t(t.betaConstraint),this.gammaConstraint=$t(t.gammaConstraint),this.betaRegularizer=dt(t.betaRegularizer),this.gammaRegularizer=dt(t.gammaRegularizer)}build(t){t=et(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new E(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new It({ndim:t.length,axes:{[e]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return x(()=>{const s=e.training==null?!1:e.training,r=q(t),i=r.shape,a=i.length,o=Oe(0,a),l=this.axis>=0?this.axis:this.axis+a;o.splice(l,1);const u=Gn(1,a);u[l]=i[l];const c=o.slice();c.sort();const h=!Ot(c,Oe(0,a).slice(0,a-1)),p=()=>{if(h){const I=A(this.movingMean.read(),u),$=A(this.movingVariance.read(),u),v=this.center?A(this.beta.read(),u):null,D=this.scale?A(this.gamma.read(),u):null;return Ks(r,I,$,v,D,this.epsilon)}else return Ks(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return p();const[f,w,y]=UE(r,this.gamma.read(),this.beta.read(),o,this.epsilon),b=(I,$,v)=>{x(()=>{const D=1-v,C=I.read(),M=T(P(C,$),D);I.write(P(C,M))})};return(()=>{b(this.movingMean,w,this.momentum),b(this.movingVariance,y,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:gt(this.betaInitializer),gammaInitializer:gt(this.gammaInitializer),movingMeanInitializer:gt(this.movingMeanInitializer),movingVarianceInitializer:gt(this.movingVarianceInitializer),betaRegularizer:at(this.betaRegularizer),gammaRegularizer:at(this.gammaRegularizer),betaConstraint:Et(this.betaConstraint),gammaConstraint:Et(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Af.className="BatchNormalization";F(Af);class xf extends J{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=pt(t.betaInitializer||"zeros"),this.gammaInitializer=pt(t.gammaInitializer||"ones"),this.betaRegularizer=dt(t.betaRegularizer),this.gammaRegularizer=dt(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=et(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=e);for(const i of this.axis)if(i<0||i>=e)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==hn(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>t[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const s=q(t),r=s.shape,i=r.length;return x(()=>{let{mean:o,variance:l}=ni(s,this.axis,!0);const u=Gn(1,i);for(const y of this.axis)u[y]=r[y];const c=y=>y!=null&&y.shape.length!==i?A(y,u):y;let h=this.scale?c(this.gamma.read()):null,p=this.center?c(this.beta.read()):null;const f=[],w=[];for(let y=0;y<i;++y)this.axis.indexOf(y)!==-1?(f.push(r[y]),w.push(1)):(f.push(1),w.push(r[y]));return o=xe(o,f),l=xe(l,f),h!=null&&(h=xe(h,w)),p!=null&&(p=xe(p,w)),Ks(s,o,l,p,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:gt(this.betaInitializer),gammaInitializer:gt(this.gammaInitializer),betaRegularizer:at(this.betaRegularizer),gammaRegularizer:at(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}xf.className="LayerNormalization";F(xf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function GE(n,t,e){return x(()=>{if(n.rank!==4)throw new E(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new E("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=wn()),e!=="channelsLast"&&e!=="channelsFirst")throw new E(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Tn(n,s)})}class Df extends J{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?wn():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new E(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new E(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new E(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new It({ndim:4})]}computeOutputShape(t){t=et(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return x(()=>GE(q(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Df.className="ZeroPadding2D";F(Df);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mi(n,t,e,s,r,i){return x(()=>{kt(r),Hp(i),ce(s),e==null&&(e=[1,1]),s==null&&(s="valid"),r==null&&(r=wn()),i==null&&(i="max"),n=Eo(n,r);let a;const o=s==="same"?"same":"valid";return i==="max"?a=ei(n,t,e,o):a=jr(n,t,e,o),r==="channelsFirst"&&(a=Q(a,[0,3,1,2])),a})}function _f(n,t,e,s,r,i){return x(()=>{kt(r),Hp(i),ce(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),r==null&&(r=wn()),i==null&&(i="max"),n=Hd(n,r);let a;const o=s==="same"?"same":"valid";return i==="max"?a=Zh(n,t,e,o):a=vh(n,t,e,o),r==="channelsFirst"&&(a=Q(a,[0,4,1,2,3])),a})}class Cf extends J{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new E(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Ct(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new E(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Ct(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,ce(this.padding),this.inputSpec=[new It({ndim:3})]}computeOutputShape(t){t=et(t);const e=_e(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return x(()=>{this.invokeCallHook(t,e),t=Vr(q(t),2);const s=this.poolingFunction(q(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Jn(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Of extends Cf{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return kt(i),ce(r),mi(t,e,s,r,i,"max")}}Of.className="MaxPooling1D";F(Of);class Ff extends Cf{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return kt(i),ce(r),mi(t,e,s,r,i,"avg")}}Ff.className="AveragePooling1D";F(Ff);class zf extends J{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new E(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Ct(this.poolSize,"poolSize"),Ct(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kt(this.dataFormat),ce(this.padding),this.inputSpec=[new It({ndim:4})]}computeOutputShape(t){t=et(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=_e(e,this.poolSize[0],this.padding,this.strides[0]),s=_e(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return x(()=>(this.invokeCallHook(t,e),this.poolingFunction(q(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Lf extends zf{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return kt(i),ce(r),mi(t,e,s,r,i,"max")}}Lf.className="MaxPooling2D";F(Lf);class Rf extends zf{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return kt(i),ce(r),mi(t,e,s,r,i,"avg")}}Rf.className="AveragePooling2D";F(Rf);class Bf extends J{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new E(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Ct(this.poolSize,"poolSize"),Ct(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kt(this.dataFormat),ce(this.padding),this.inputSpec=[new It({ndim:5})]}computeOutputShape(t){t=et(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=_e(e,this.poolSize[0],this.padding,this.strides[0]),s=_e(s,this.poolSize[1],this.padding,this.strides[1]),r=_e(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return x(()=>(this.invokeCallHook(t,e),this.poolingFunction(q(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Mf extends Bf{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return kt(i),ce(r),_f(t,e,s,r,i,"max")}}Mf.className="MaxPooling3D";F(Mf);class Pf extends Bf{constructor(t){super(t)}poolingFunction(t,e,s,r,i){return kt(i),ce(r),_f(t,e,s,r,i,"avg")}}Pf.className="AveragePooling3D";F(Pf);class Vf extends J{constructor(t){super(t),this.inputSpec=[new It({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new K}}class Wf extends Vf{constructor(t){super(t||{})}call(t,e){return x(()=>{const s=q(t);return wt(s,1)})}}Wf.className="GlobalAveragePooling1D";F(Wf);class Uf extends Vf{constructor(t){super(t||{})}call(t,e){return x(()=>{const s=q(t);return Ne(s,1)})}}Uf.className="GlobalMaxPooling1D";F(Uf);class Gf extends J{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kt(this.dataFormat),this.inputSpec=[new It({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new K}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class jf extends Gf{call(t,e){return x(()=>{const s=q(t);return this.dataFormat==="channelsLast"?wt(s,[1,2]):wt(s,[2,3])})}}jf.className="GlobalAveragePooling2D";F(jf);class qf extends Gf{call(t,e){return x(()=>{const s=q(t);return this.dataFormat==="channelsLast"?Ne(s,[1,2]):Ne(s,[2,3])})}}qf.className="GlobalMaxPooling2D";F(qf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Hf extends J{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const r=e.layer,i=en(r,s);delete e.layer;const a={layer:i};return Object.assign(a,e),new t(a)}}class Kf extends Hf{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=et(t),t.length<3)throw new E(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=et(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),r=t[1];return[s[0],r].concat(s.slice(1))}call(t,e){return x(()=>(t=q(t),nf((a,o)=>[q(this.layer.call(a,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}Kf.className="TimeDistributed";F(Kf);function jE(n){Xn(bv,"BidirectionalMergeMode",n)}const qE="concat";class Zf extends Hf{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=en(s),e.goBackwards=e.goBackwards!==!0;const r={};if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=en(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?qE:t.mergeMode,jE(this.mergeMode),t.weights)throw new K("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,r,i;return this.returnState&&(i=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):jt(r)}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const i=ef(t,s,r,this.numConstants);if(t=i.inputs,s=i.initialState,r=i.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&r==null)return super.apply(t,e);const a=[],o=[];if(s!=null){const u=s.length;if(u%2>0)throw new E("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,a.push(...s);const c=s.map(h=>new It({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),o.push(...c)}if(r!=null)throw new K("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof qe;for(const u of a)if(u instanceof qe!==l)throw new E("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[t].concat(a),c=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=c;const p=super.apply(u,e);return this.inputSpec=h,p}else return super.apply(t,e)}call(t,e){return x(()=>{const s=e.initialState;let r,i;if(s==null)r=this.forwardLayer.call(t,e),i=this.backwardLayer.call(t,e);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),i=this.backwardLayer.call(t,Object.assign(e,{initialState:u}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=ke(i,1));let o;return this.mergeMode==="concat"?o=ya([r,i]):this.mergeMode==="sum"?o=O(r,i):this.mergeMode==="ave"?o=T(.5,O(r,i)):this.mergeMode==="mul"?o=T(r,i):this.mergeMode==null&&(o=[r,i]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){zn(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),zn(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=en(e.layer);if(delete e.layer,e.numConstants!=null)throw new K("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=s,new t(r)}}Zf.className="Bidirectional";F(Zf);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Jf extends J{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return x(()=>(t=q(t),t.dtype!=="float32"&&(t=We(t,"float32")),O(T(t,this.scale),this.offset)))}}Jf.className="Rescaling";F(Jf);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:HE,cropAndResize:KE}=Ve;class Xf extends J{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,r,i,a,o,l){return x(()=>{let u,c=!1;const h=e/a,p=s/o,f=(r+e)/a,w=(i+s)/o,y=[h,p,f,w],b=[];t.rank===3?(c=!0,u=ne([t])):u=t;for(let D=0;D<u.shape[0];D++)b.push(y);const S=De(b,[b.length,4]),I=bs(0,b.length,1,"int32"),v=KE(u,S,I,[r,i],"nearest");return c?We(q(Te(v)),l):We(v,l)})}upsize(t,e,s,r){return x(()=>{const i=HE(t,[e,s]);return We(i,r)})}call(t,e){return x(()=>{const s=q(t),r=s.dtype,i=s.shape,a=i[i.length-3],o=i[i.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let u=0;return o!==this.width&&(u=Math.floor((o-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,a,o,r):this.upsize(t,this.height,this.width,r)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=et(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}Xf.className="CenterCrop";F(Xf);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZE(n,t,e,s){let r=q(n);if(r.dtype!=="int32"&&(r=We(r,"int32")),t==="int")return r;const i=r.shape;if(r.rank===0&&(r=Ut(r,-1)),t==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=Ut(r,-1)),r.rank>2)throw new E(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(t),o=r;let l;if(typeof s<"u"&&t==="count"?l=Ki(o,s,e,a):l=Ki(o,[],e,a),t!=="tfIdf")return l;if(s)return T(l,s);throw new E("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yf extends J{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=et(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return x(()=>{t=q(t),t.dtype!=="int32"&&(t=We(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new E(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=q(e.countWeights)}const r=Ne(t),i=Vs(t),a=ie(this.numTokens,r).bufferSync().get(0),o=kn(i,0).bufferSync().get(0);if(!(a&&o))throw new E(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return ZE(t,this.outputMode,this.numTokens,s)})}}Yf.className="CategoryEncoding";F(Yf);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const JE=["bilinear","nearest"],Cl=new Set(JE);class Qf extends J{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(Cl.has(t.interpolation))this.interpolation=t.interpolation;else throw new E(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=et(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return x(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Ve.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Ve.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Cl]} are supported`)})}}Qf.className="Resizing";F(Qf);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class tm extends J{constructor(t){super(t),this.randomGenerator=new gm(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}tm.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const XE=["bilinear","nearest"],Ol=new Set(XE);class em extends tm{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new E(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new E(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new E(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Ol.has(s))this.interpolation=s;else throw new E(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=et(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return x(()=>{const s=q(t);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=Zn([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*r;i=Math.round(i);const a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Ve.resizeBilinear(t,a);case"nearest":return Ve.resizeNearestNeighbor(t,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Ol]} are supported`)}})}}em.className="RandomWidth";F(em);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE=H();YE.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Jt;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Jt||(Jt={}));var Fl;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Fl||(Fl={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QE={};function nm(n){return QE[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(n,t,e,s,r){const i=t.inputParams[n];if(i&&i.inputIndexStart!==void 0){const o=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?o+1:i.inputIndexEnd,u=o<0?t.inputNames.length+o:o;if(i.type==="tensor")return zt(t.inputNames[u],e,s,r);if(i.type==="tensors"){const p=t.inputs.slice(o,l);return t.inputNames.slice(o,l).filter((w,y)=>{var b;return((b=p[y])===null||b===void 0?void 0:b.op)!=="NoOp"}).map(w=>zt(w,e,s,r))}const c=zt(t.inputNames[u],e,s,r),h=c.dataSync();return i.type==="number"?h[0]:is(c.shape,h)}const a=t.attrParams[n];return a&&a.value}function zt(n,t,e,s){const[r,i]=Xt(n,e);if(s!=null){const o=s.getHashTableHandleByName(r);if(o!=null)return o}const a=e.currentContextIds.find(o=>!!t[Rr(r,o)]);return a!==void 0?t[Rr(r,a)][i]:void 0}function zl(n,t,e){return t[Rr(n,e.currentContextId)]}function Xe(n,t){const[e,s,r]=Xt(n,t);return[Rr(e,t&&t.currentContextId),s,r]}function Rr(n,t){return t?`${n}-${t}`:n}function Xt(n,t){if(n==="")return["",0,void 0];const e=t!=null&&t.parseNodeNameCache!=null;if(e){const i=t.parseNodeNameCache.get(n);if(i!=null)return i}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const i=s[0],a=s.length===3?s[1]:void 0,o=Number(s[s.length-1]);r=[i,o,a]}return e&&t.parseNodeNameCache.set(n,r),r}function wr(n,t,e){let s=d("pad",n,t,e);if(s==="explicit"){s=d("explicitPaddings",n,t,e);const r=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)r[i][0]=s[i*2],r[i][1]=s[i*2+1];return r}return s}function Ye(n){return n.kept?n:tn(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t$=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],e$=Object.freeze(Object.defineProperty({__proto__:null,json:t$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n$=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],s$=Object.freeze(Object.defineProperty({__proto__:null,json:n$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r$=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],i$=Object.freeze(Object.defineProperty({__proto__:null,json:r$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a$=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],o$=Object.freeze(Object.defineProperty({__proto__:null,json:a$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l$=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],u$=Object.freeze(Object.defineProperty({__proto__:null,json:l$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c$=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],h$=Object.freeze(Object.defineProperty({__proto__:null,json:c$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p$=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],d$=Object.freeze(Object.defineProperty({__proto__:null,json:p$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f$=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],m$=Object.freeze(Object.defineProperty({__proto__:null,json:f$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g$=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],y$=Object.freeze(Object.defineProperty({__proto__:null,json:g$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b$=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],w$=Object.freeze(Object.defineProperty({__proto__:null,json:b$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N$=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],S$=Object.freeze(Object.defineProperty({__proto__:null,json:N$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k$=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],T$=Object.freeze(Object.defineProperty({__proto__:null,json:k$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],v$=Object.freeze(Object.defineProperty({__proto__:null,json:I$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E$=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],$$=Object.freeze(Object.defineProperty({__proto__:null,json:E$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A$=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],x$=Object.freeze(Object.defineProperty({__proto__:null,json:A$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D$=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],_$=Object.freeze(Object.defineProperty({__proto__:null,json:D$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C$=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],O$=Object.freeze(Object.defineProperty({__proto__:null,json:C$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],z$=Object.freeze(Object.defineProperty({__proto__:null,json:F$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L$=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],R$=Object.freeze(Object.defineProperty({__proto__:null,json:L$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ll{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[e$,s$,i$,o$,u$,h$,d$,m$,y$,w$,S$,T$,v$,$$,x$,_$,O$,z$,R$],e=[].concat(...t.map(s=>s.json));this.opMappers=e.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(t,e={}){const s=t.node,r=[],i=[],a=[],o=s.reduce((y,b)=>(y[b.name]=this.mapNode(b),b.op.startsWith("Placeholder")?r.push(y[b.name]):b.op==="Const"?i.push(y[b.name]):(b.input==null||b.input.length===0)&&a.push(y[b.name]),y),{});let l=[];const u=[];let c={},h={};e!=null&&(c=this.mapSignatureEntries(e.inputs),h=this.mapSignatureEntries(e.outputs));const p=Object.keys(o);p.forEach(y=>{const b=o[y];b.inputNames.forEach((S,I)=>{const[$,,v]=Xe(S),D=o[$];if(D.outputs!=null){const C=D.outputs.indexOf(v);if(C!==-1){const M=`${$}:${C}`;b.inputNames[I]=M}}b.inputs.push(D),D.children.push(b)})}),Object.keys(h).length===0?p.forEach(y=>{const b=o[y];b.children.length===0&&u.push(b)}):Object.keys(h).forEach(y=>{const[b]=Xe(y),S=o[b];S!=null&&(S.signatureKey=h[y],u.push(S))}),Object.keys(c).length>0?Object.keys(c).forEach(y=>{const[b]=Xe(y),S=o[b];S&&(S.signatureKey=c[y],l.push(S))}):l=r;let f={};t.library!=null&&t.library.function!=null&&(f=t.library.function.reduce((y,b)=>(y[b.signature.name]=this.mapFunction(b),y),{}));const w={nodes:o,inputs:l,outputs:u,weights:i,placeholders:r,signature:e,functions:f};return a.length>0&&(w.initNodes=a),w}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,s)=>(e[t[s].name]=s,e),{})}mapNode(t){const e=nm(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const s={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(s.inputParams=e.inputs.reduce((r,i)=>(r[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},r),{})),e.attrs!=null&&(s.attrParams=e.attrs.reduce((r,i)=>{const a=i.type;let o;switch(i.type){case"string":o=ia(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=ia(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":o=pa(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=pa(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":o=oa(t.attr,i.tfName,i.defaultValue||0),o===void 0&&!!i.tfDeprecatedName&&(o=oa(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":o=ha(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=ha(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":o=aa(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=aa(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":o=fa(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=fa(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":o=ca(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=ca(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":o=da(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=da(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":o=la(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=la(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":o=ua(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=ua(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":o=Rl(t.attr,i.tfName,i.defaultValue),o===void 0&&!!i.tfDeprecatedName&&(o=Rl(t.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${t.op}`)}return r[i.name]={value:o,type:a},r},{})),s}mapFunction(t){const e=t.nodeDef,s=[],r=[];let i={};e!=null&&(i=e.reduce((h,p)=>(h[p.name]=this.mapNode(p),p.op==="Const"&&r.push(h[p.name]),h),{}));const a=[],o=[];t.signature.inputArg.forEach(h=>{const[p]=Xe(h.name),f={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Co(h.type),type:"dtype"}},children:[]};f.signatureKey=h.name,a.push(f),i[p]=f}),Object.keys(i).forEach(h=>{const p=i[h];p.inputNames.forEach((f,w)=>{const[y,,b]=Xe(f),S=i[y];if(S.outputs!=null){const I=S.outputs.indexOf(b);if(I!==-1){const $=`${y}:${I}`;p.inputNames[w]=$}}p.inputs.push(S),S.children.push(p)})});const u=t.ret;t.signature.outputArg.forEach(h=>{const[p,f]=Xe(u[h.name]),w=i[p];w!=null&&(w.defaultOutput=f,o.push(w))});const c=this.mapArgsToSignature(t);return{nodes:i,inputs:a,outputs:o,weights:r,placeholders:s,signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s),e),{}),outputs:t.signature.outputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s,t.ret),e),{})}}mapArgToTensorInfo(t,e){let s=t.name;return e!=null&&(s=e[s]),{name:s,dtype:t.type}}}function B$(n){const t=H().global;if(typeof t.atob<"u")return t.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function sm(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):B$(n);return t?e:e.toLowerCase()}function ia(n,t,e,s=!1){const r=n[t];return r!=null?sm(r.s,s):e}function aa(n,t,e){const s=n[t];return s?s.b:e}function oa(n,t,e){const s=n[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:e;return typeof r=="number"?r:parseInt(r,10)}function Co(n){switch(typeof n=="string"&&(n=Jt[n]),n){case Jt.DT_FLOAT:case Jt.DT_HALF:return"float32";case Jt.DT_INT32:case Jt.DT_INT64:case Jt.DT_INT8:case Jt.DT_UINT8:return"int32";case Jt.DT_BOOL:return"bool";case Jt.DT_DOUBLE:return"float32";case Jt.DT_STRING:return"string";case Jt.DT_COMPLEX64:case Jt.DT_COMPLEX128:return"complex64";default:return null}}function Rl(n,t,e){const s=n[t];return s&&s.func?s.func.name:e}function la(n,t,e){const s=n[t];return s&&s.type?Co(s.type):e}function ua(n,t,e){const s=n[t];return s&&s.list&&s.list.type?s.list.type.map(r=>Co(r)):e}function rm(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function ca(n,t,e){const s=n[t];return s&&s.shape?rm(s.shape):e}function ha(n,t,e){const s=n[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):e}function pa(n,t,e,s=!1){const r=n[t];return r&&r.list&&r.list.s?r.list.s.map(i=>sm(i,s)):e}function da(n,t,e){const s=n[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>rm(r)):e}function fa(n,t,e){const s=n[t];return s&&s.list&&s.list.b?s.list.b:e}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M${constructor(t,e,s){this.node=t,this.tensorMap=e,this.context=s,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(r=>this.getInput(r)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((r,i)=>(r[i]=this.getAttr(i),r),{}))}getInput(t){return zt(t,this.tensorMap,this.context)}getAttr(t,e){const s=this.node.rawAttrs[t];if(s.tensor!=null)return zt(t,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return oa(this.node.rawAttrs,t,e);if(s.s!=null)return ia(this.node.rawAttrs,t,e);if(s.b!=null)return aa(this.node.rawAttrs,t,e);if(s.shape!=null)return ca(this.node.rawAttrs,t,e);if(s.type!=null)return la(this.node.rawAttrs,t,e);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return ha(this.node.rawAttrs,t,e);if(s.list.s!=null)return pa(this.node.rawAttrs,t,e);if(s.list.shape!=null)return da(this.node.rawAttrs,t,e);if(s.list.b!=null)return fa(this.node.rawAttrs,t,e);if(s.list.type!=null)return ua(this.node.rawAttrs,t,e)}return e}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rt=Object.freeze(Object.defineProperty({__proto__:null,abs:At,acos:gh,acosh:yh,add:O,addN:pb,all:Da,any:Er,argMax:fs,argMin:bh,asin:wh,asinh:Nh,atan:Sh,atan2:kh,atanh:Th,avgPool:jr,avgPool3d:vh,basicLSTMCell:Bb,batchToSpaceND:qr,batchNorm:Qs,batchNorm2d:Eh,batchNorm3d:$h,batchNorm4d:Ah,bincount:xh,bitwiseAnd:Hb,broadcastArgs:Zb,broadcastTo:Fs,buffer:Hn,cast:B,ceil:Dh,clipByValue:ae,clone:tn,complex:pn,concat:vt,concat1d:tw,concat2d:nw,concat3d:rw,concat4d:aw,conv1d:_a,conv2d:fn,conv2dTranspose:Oa,conv3d:_h,conv3dTranspose:Oh,cos:Hr,cosh:Fa,cumprod:$r,cumsum:za,denseBincount:Ki,depthToSpace:Fh,depthwiseConv2d:tr,diag:kw,dilation2d:zh,div:U,divNoNan:Lh,dot:Rh,einsum:ss,elu:Kr,ensureShape:Cw,equal:Ce,erf:La,euclideanNorm:Vh,exp:ee,expandDims:Ut,expm1:Wh,eye:Ba,fill:Ss,floor:nr,floorDiv:xa,gather:Zr,greater:ie,greaterEqual:kn,imag:Jr,isFinite:Uh,isInf:Gh,isNaN:jh,leakyRelu:Xr,less:Ws,lessEqual:Kn,linspace:a0,localResponseNormalization:qh,log:oe,log1p:Yr,logSigmoid:Hh,logSoftmax:Ma,logSumExp:Qr,logicalAnd:je,logicalNot:ti,logicalOr:Pa,logicalXor:Kh,lowerBound:k0,matMul:X,max:Ne,maxPool:ei,maxPool3d:Zh,maxPoolWithArgmax:E0,maximum:an,mean:wt,meshgrid:x0,min:Vs,minimum:Wn,mirrorPad:Jh,mod:Xh,moments:ni,mul:T,multiRNNCell:z0,multinomial:R0,neg:ht,notEqual:ys,oneHot:Wa,ones:Qt,onesLike:le,outerProduct:W0,pad:Tn,pad1d:j0,pad2d:H0,pad3d:Z0,pad4d:X0,pool:Yh,pow:nn,prelu:ri,print:mh,prod:Qh,raggedGather:iN,raggedRange:oN,raggedTensorToTensor:uN,rand:hN,randomGamma:mN,randomNormal:tp,randomStandardNormal:bN,randomUniform:Zn,randomUniformInt:SN,range:bs,real:Us,reciprocal:ep,relu:He,relu6:Ga,reshape:A,reverse:ke,reverse1d:AN,reverse2d:DN,reverse3d:CN,reverse4d:FN,round:ja,rsqrt:qa,scalar:G,selu:Ha,separableConv2d:Ka,setdiff1dAsync:PN,sigmoid:Ge,sign:np,sin:Za,sinh:Ja,slice:tt,slice1d:jN,slice2d:HN,slice3d:ZN,slice4d:XN,softmax:ii,softplus:ks,spaceToBatchND:si,fft:ai,ifft:Gs,irfft:Xa,rfft:oi,split:te,sqrt:Lt,square:it,squaredDifference:Ya,squeeze:Jn,stack:ne,step:Ts,stridedSlice:sp,sub:P,sum:W,tan:rp,tanh:Vn,tensor:De,tensor1d:Ht,tensor2d:zs,tensor3d:ip,tensor4d:c1,tensor5d:h1,tensor6d:p1,tensorScatterUpdate:m1,tile:xe,topk:op,truncatedNormal:Qa,unique:lp,unsortedSegmentSum:to,unstack:Te,upperBound:S1,variable:up,where:Bt,whereAsync:cp,zeros:Dt,zerosLike:Y,op:N,OP_SCOPE_SUFFIX:th,booleanMaskAsync:I1,transpose:Q,norm:er,movingAverage:$1,scatterND:x1,searchSorted:Va,sparseToDense:C1,gatherND:F1,dropout:R1,enclosingPowerOfTwo:hp,cosineWindow:eo,inTopKAsync:M1,image:Ve,linalg:wp,losses:wk,spectral:yk,fused:K1,signal:bk,sparse:Nk,string:Sk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P$=(n,t,e,s=Rt)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(d("a",n,t,e),d("b",n,t,e))];case"AddN":return[s.addN(d("tensors",n,t,e))];case"FloorMod":case"Mod":return[s.mod(d("a",n,t,e),d("b",n,t,e))];case"Mul":return[s.mul(d("a",n,t,e),d("b",n,t,e))];case"RealDiv":case"Div":return[s.div(d("a",n,t,e),d("b",n,t,e))];case"DivNoNan":return[s.divNoNan(d("a",n,t,e),d("b",n,t,e))];case"FloorDiv":return[s.floorDiv(d("a",n,t,e),d("b",n,t,e))];case"Sub":return[s.sub(d("a",n,t,e),d("b",n,t,e))];case"Minimum":return[s.minimum(d("a",n,t,e),d("b",n,t,e))];case"Maximum":return[s.maximum(d("a",n,t,e),d("b",n,t,e))];case"Pow":return[s.pow(d("a",n,t,e),d("b",n,t,e))];case"SquaredDifference":return[s.squaredDifference(d("a",n,t,e),d("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V$=(n,t,e,s=Rt)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(d("x",n,t,e))];case"Acos":return[s.acos(d("x",n,t,e))];case"Acosh":return[s.acosh(d("x",n,t,e))];case"Asin":return[s.asin(d("x",n,t,e))];case"Asinh":return[s.asinh(d("x",n,t,e))];case"Atan":return[s.atan(d("x",n,t,e))];case"Atan2":return[s.atan2(d("x",n,t,e),d("y",n,t,e))];case"Atanh":return[s.atanh(d("x",n,t,e))];case"Ceil":return[s.ceil(d("x",n,t,e))];case"Complex":return[s.complex(d("real",n,t,e),d("imag",n,t,e))];case"Cos":return[s.cos(d("x",n,t,e))];case"Cosh":return[s.cosh(d("x",n,t,e))];case"Elu":return[s.elu(d("x",n,t,e))];case"Erf":return[s.erf(d("x",n,t,e))];case"Exp":return[s.exp(d("x",n,t,e))];case"Expm1":return[s.expm1(d("x",n,t,e))];case"Floor":return[s.floor(d("x",n,t,e))];case"Log":return[s.log(d("x",n,t,e))];case"Log1p":return[s.log1p(d("x",n,t,e))];case"Imag":return[s.imag(d("x",n,t,e))];case"Neg":return[s.neg(d("x",n,t,e))];case"Reciprocal":return[s.reciprocal(d("x",n,t,e))];case"Real":return[s.real(d("x",n,t,e))];case"Relu":return[s.relu(d("x",n,t,e))];case"Round":return[s.round(d("x",n,t,e))];case"Selu":return[s.selu(d("x",n,t,e))];case"Sigmoid":return[s.sigmoid(d("x",n,t,e))];case"Sin":return[s.sin(d("x",n,t,e))];case"Sign":return[s.sign(d("x",n,t,e))];case"Sinh":return[s.sinh(d("x",n,t,e))];case"Softplus":return[s.softplus(d("x",n,t,e))];case"Sqrt":return[s.sqrt(d("x",n,t,e))];case"Square":return[s.square(d("x",n,t,e))];case"Tanh":return[s.tanh(d("x",n,t,e))];case"Tan":return[s.tan(d("x",n,t,e))];case"ClipByValue":return[s.clipByValue(d("x",n,t,e),d("clipValueMin",n,t,e),d("clipValueMax",n,t,e))];case"Relu6":return[s.relu6(d("x",n,t,e))];case"Rsqrt":return[s.rsqrt(zt(n.inputNames[0],t,e))];case"LeakyRelu":return[s.leakyRelu(d("x",n,t,e),d("alpha",n,t,e))];case"Prelu":return[s.prelu(d("x",n,t,e),d("alpha",n,t,e))];case"IsNan":return[s.isNaN(zt(n.inputNames[0],t,e))];case"IsInf":return[s.isInf(zt(n.inputNames[0],t,e))];case"IsFinite":return[s.isFinite(zt(n.inputNames[0],t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(n,t,e=""){if(!(typeof n=="number"||typeof t=="number")){g(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let s=0;s<n.length;s++){const r=n[s],i=t[s];g(r<0||i<0||r===i,()=>e+` Shapes ${n} and ${t} must match`)}}}function Bl(n){return!(typeof n=="number"||n.some(t=>t<0))}function Ds(n,t,e){let s=ma(n,e);const r=!Bl(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(i=>{s=ma(i.shape,s)}),!Bl(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function ma(n,t){if(typeof n=="number")return t;if(typeof t=="number")return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let s=0;s<n.length;++s){const r=n[s],i=t[s];if(r>=0&&i>=0&&r!==i)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[s]=r>=0?r:i}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W${constructor(t,e,s,r,i,a,o){this.name=t,this.dtype=e,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=i,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=G(0),_t(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),fe(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);s.tensor=e,_t(e),s.written=!0,this.tensors[t]=s}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((s,r)=>this.write(s,e[r]))}gather(t,e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let r=0;r<this.size();r++)t.push(r)}if(t.length===0)return De([],[0].concat(this.elementShape));const s=this.readMany(t);return fe(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ne(s,0)}concat(t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return De([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const s=this.readMany(e);return fe(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),vt(s,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(t,Te(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let s=0;const r=t.map(l=>(s+=l,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const i=s===0?0:e.size/s,a=[];x(()=>{e=A(e,[1,s,i]);for(let l=0;l<t.length;++l){const c=[0,l===0?0:r[l-1],0],h=[1,t[l],i];a[l]=A(tt(e,c,h),this.elementShape)}return a});const o=[];for(let l=0;l<t.length;l++)o[l]=l;this.writeMany(o,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jn{get id(){return this.idTensor.id}constructor(t,e,s,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=s,t!=null&&t.forEach(i=>{if(s!==i.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${i.dtype}`);fe(e,i.shape,"TensorList shape mismatch: "),_t(i)}),this.idTensor=G(0),this.maxNumElements=r,_t(this.idTensor)}copy(){return new jn([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,s=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);fe(t,this.elementShape,"TensorList shape mismatch: ");const r=Ds(this.elementShape,this.tensors,t);return x(()=>{const i=this.tensors.map(a=>A(a,r));return ne(i,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=Ds(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,fe(r.shape,t,"TensorList shape mismatch: "),A(r,s)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(fe(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");_t(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new jn([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let s=0;s<Math.min(this.tensors.length,t);++s)e.tensors[s]=this.tensors[s];return e}getItem(t,e,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);fe(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=Ds(this.elementShape,this.tensors,e);return A(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);fe(this.elementShape,e.shape,"TensorList shape mismatch: "),_t(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,s){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);fe(this.elementShape,s,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=Ds(this.elementShape,this.tensors,s);return t.length===0?De([],[0].concat(r)):x(()=>{const i=t.map(a=>A(this.tensors[a],r));return ne(i,0)})}concat(t,e){if(!!t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);fe(this.elementShape,e,"TensorList shape mismatch: ");const s=Ds(this.elementShape,this.tensors,e);return this.size()===0?De([],[0].concat(s)):x(()=>{const r=this.tensors.map(i=>A(i,s));return vt(r,0)})}}function U$(n,t,e){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);const r=n.shape.slice(1);fe(r,t,"TensorList shape mismatch: ");const i=Te(n);return new jn(i,t,s)}function G$(n,t,e,s){return new jn([],n,t,s)}function j$(n,t,e,s){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const i=new jn([],e,n.dtype,s),a=Te(n,0);return t.forEach((o,l)=>{i.setItem(o,a[l])}),i}function q$(n,t,e){let s=0;const r=t.map(c=>(s+=c,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const i=n.shape.slice(1),a=ma(i,e),o=s===0?0:n.size/s,l=x(()=>{const c=[];n=A(n,[1,s,o]);for(let h=0;h<t.length;++h){const f=[0,h===0?0:r[h-1],0],w=[1,t[h],o];c[h]=A(tt(n,f,w),a)}return n.dispose(),c}),u=new jn([],e,n.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H$=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{const s=d("thenBranch",n,t,e),r=d("elseBranch",n,t,e),i=d("cond",n,t,e),a=d("args",n,t,e);return(await i.data())[0]?e.functionMap[s].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap):e.functionMap[r].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{const s=d("body",n,t,e),r=d("cond",n,t,e),i=d("args",n,t,e),a=await e.functionMap[r].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap),o=i.map(c=>c.id);let l=await a[0].data();a.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let u=i;for(;l[0];){const c=u;u=await e.functionMap[s].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);const h=u.map(f=>f.id);c.forEach(f=>{!f.kept&&o.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()});const p=await e.functionMap[r].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);l=await p[0].data(),p.forEach(f=>{!f.kept&&o.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{const s=d("pred",n,t,e);return[Ye(s)]}case"Switch":{const s=d("pred",n,t,e);let r=d("data",n,t,e);return r.kept||(r=Ye(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>zt(r,t,e)!==void 0);if(s){const r=zt(s,t,e);return[Ye(r)]}return}case"Enter":{const s=d("frameName",n,t,e),r=d("tensor",n,t,e);return e.enterFrame(s),[Ye(r)]}case"Exit":{const s=d("tensor",n,t,e);return e.exitFrame(),[Ye(s)]}case"NextIteration":{const s=d("tensor",n,t,e);return e.nextIteration(),[Ye(s)]}case"TensorArrayV3":{const s=d("size",n,t,e),r=d("dtype",n,t,e),i=d("elementShape",n,t,e),a=d("dynamicSize",n,t,e),o=d("clearAfterRead",n,t,e),l=d("identicalElementShapes",n,t,e),u=d("name",n,t,e),c=new W$(u,r,s,i,l,a,o);return e.addTensorArray(c),[c.idTensor,G(1)]}case"TensorArrayWriteV3":{const s=d("tensorArrayId",n,t,e),r=d("index",n,t,e),i=d("tensor",n,t,e),a=e.getTensorArray(s.id);return a.write(r,i),[a.idTensor]}case"TensorArrayReadV3":{const s=d("tensorArrayId",n,t,e),r=d("index",n,t,e);return[e.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=d("tensorArrayId",n,t,e),r=d("indices",n,t,e),i=d("dtype",n,t,e);return[e.getTensorArray(s.id).gather(r,i)]}case"TensorArrayScatterV3":{const s=d("tensorArrayId",n,t,e),r=d("indices",n,t,e),i=d("tensor",n,t,e),a=e.getTensorArray(s.id);return a.scatter(r,i),[a.idTensor]}case"TensorArrayConcatV3":{const s=d("tensorArrayId",n,t,e),r=e.getTensorArray(s.id),i=d("dtype",n,t,e);return[r.concat(i)]}case"TensorArraySplitV3":{const s=d("tensorArrayId",n,t,e),r=d("tensor",n,t,e),i=d("lengths",n,t,e),a=e.getTensorArray(s.id);return a.split(i,r),[a.idTensor]}case"TensorArraySizeV3":{const s=d("tensorArrayId",n,t,e),r=e.getTensorArray(s.id);return[G(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=d("tensorArrayId",n,t,e),r=e.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=d("tensorListId",n,t,e),r=d("index",n,t,e),i=d("tensor",n,t,e),a=e.getTensorList(s.id);return a.setItem(r,i),[a.idTensor]}case"TensorListGetItem":{const s=d("tensorListId",n,t,e),r=d("index",n,t,e),i=d("elementShape",n,t,e),a=d("elementDType",n,t,e);return[e.getTensorList(s.id).getItem(r,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=d("indices",n,t,e),r=d("tensor",n,t,e),i=d("elementShape",n,t,e),a=d("numElements",n,t,e),o=j$(r,s,i,a);return e.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=d("elementShape",n,t,e),r=d("elementDType",n,t,e);let i;n.op==="TensorListReserve"?i="numElements":i="maxNumElements";const a=d(i,n,t,e),o=n.op==="TensorListReserve"?-1:a,l=G$(s,r,a,o);return e.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=d("tensorListId",n,t,e),r=d("indices",n,t,e),i=d("elementShape",n,t,e),a=d("elementDType",n,t,e);return[e.getTensorList(s.id).gather(r,a,i)]}case"TensorListStack":{const s=d("tensorListId",n,t,e),r=d("elementShape",n,t,e),i=d("elementDType",n,t,e),a=d("numElements",n,t,e);return[e.getTensorList(s.id).stack(r,i,a)]}case"TensorListFromTensor":{const s=d("tensor",n,t,e),r=d("elementShape",n,t,e),i=d("elementDType",n,t,e),a=U$(s,r,i);return e.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=d("tensorListId",n,t,e),r=e.getTensorList(s.id),i=d("dtype",n,t,e),a=d("elementShape",n,t,e);return[r.concat(i,a)]}case"TensorListPushBack":{const s=d("tensorListId",n,t,e),r=d("tensor",n,t,e),i=e.getTensorList(s.id);return i.pushBack(r),[i.idTensor]}case"TensorListPopBack":{const s=d("tensorListId",n,t,e),r=d("elementShape",n,t,e),i=d("elementDType",n,t,e);return[e.getTensorList(s.id).popBack(r,i)]}case"TensorListSplit":{const s=d("tensor",n,t,e),r=d("elementShape",n,t,e),i=d("lengths",n,t,e),a=q$(s,i,r);return e.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=d("tensorListId",n,t,e),r=e.getTensorList(s.id);return[G(r.size(),"int32")]}case"TensorListResize":{const s=d("tensorListId",n,t,e),r=d("size",n,t,e),a=e.getTensorList(s.id).resize(r);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ml(n,t,e){const[s,r]=d("fusedOps",n,t,e),i=s==="biasadd",a=!i,o=r==="prelu",l=s==="fusedbatchnorm",u=d("numArgs",n,t,e);if(i){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=d("strides",n,t,e),h=wr(n,t,e),p=d("dataFormat",n,t,e).toUpperCase(),f=d("dilations",n,t,e);let[w,y]=d("args",n,t,e);a&&(y=w,w=void 0);const b=d("leakyreluAlpha",n,t,e);return{stride:c,pad:h,dataFormat:p,dilations:f,biasArg:w,preluArg:y,activationFunc:r,leakyreluAlpha:b}}const K$=(n,t,e,s=Rt)=>{switch(n.op){case"Conv1D":{const r=d("stride",n,t,e),i=d("pad",n,t,e),a=d("dataFormat",n,t,e).toUpperCase(),o=d("dilation",n,t,e);return[s.conv1d(d("x",n,t,e),d("filter",n,t,e),r,i,a,o)]}case"Conv2D":{const r=d("strides",n,t,e),i=wr(n,t,e),a=d("dataFormat",n,t,e).toUpperCase(),o=d("dilations",n,t,e);return[s.conv2d(d("x",n,t,e),d("filter",n,t,e),[r[1],r[2]],i,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Ml(n,t,e);return[s.fused.conv2d({x:d("x",n,t,e),filter:d("filter",n,t,e),strides:[r[1],r[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=Ml(n,t,e);return[s.fused.depthwiseConv2d({x:d("x",n,t,e),filter:d("filter",n,t,e),strides:[r[1],r[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=d("outputShape",n,t,e),i=d("strides",n,t,e),a=wr(n,t,e);return[s.conv2dTranspose(d("x",n,t,e),d("filter",n,t,e),r,[i[1],i[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=d("strides",n,t,e),i=wr(n,t,e),a=d("dilations",n,t,e),o=d("dataFormat",n,t,e).toUpperCase();return[s.depthwiseConv2d(d("input",n,t,e),d("filter",n,t,e),[r[1],r[2]],i,o,[a[1],a[2]])]}case"Conv3D":{const r=d("strides",n,t,e),i=d("pad",n,t,e),a=d("dataFormat",n,t,e).toUpperCase(),o=d("dilations",n,t,e);return[s.conv3d(d("x",n,t,e),d("filter",n,t,e),[r[1],r[2],r[3]],i,a,[o[1],o[2],o[3]])]}case"AvgPool":{const r=d("strides",n,t,e),i=d("pad",n,t,e),a=d("kernelSize",n,t,e);return[s.avgPool(d("x",n,t,e),[a[1],a[2]],[r[1],r[2]],i)]}case"MaxPool":{const r=d("strides",n,t,e),i=d("pad",n,t,e),a=d("kernelSize",n,t,e);return[s.maxPool(d("x",n,t,e),[a[1],a[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{const r=d("strides",n,t,e),i=d("pad",n,t,e),a=d("kernelSize",n,t,e),o=d("includeBatchInIndex",n,t,e),{result:l,indexes:u}=s.maxPoolWithArgmax(d("x",n,t,e),[a[1],a[2]],[r[1],r[2]],i,o);return[l,u]}case"AvgPool3D":{const r=d("strides",n,t,e),i=d("pad",n,t,e),a=d("kernelSize",n,t,e);return[s.avgPool3d(d("x",n,t,e),[a[1],a[2],a[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{const r=d("strides",n,t,e),i=d("pad",n,t,e),a=d("kernelSize",n,t,e);return[s.maxPool3d(d("x",n,t,e),[a[1],a[2],a[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{const r=d("strides",n,t,e),i=d("pad",n,t,e),a=d("dilations",n,t,e),o=r[1],l=r[2],u=a[1],c=a[2];return[s.dilation2d(d("x",n,t,e),d("filter",n,t,e),[o,l],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z$=(n,t,e,s=Rt)=>{switch(n.op){case"Fill":{const r=d("shape",n,t,e),i=d("dtype",n,t,e),a=d("value",n,t,e);return[s.fill(r,a,i)]}case"LinSpace":{const r=d("start",n,t,e),i=d("stop",n,t,e),a=d("num",n,t,e);return[s.linspace(r,i,a)]}case"Multinomial":{const r=d("logits",n,t,e),i=d("numSamples",n,t,e),a=d("seed",n,t,e);return[s.multinomial(r,i,a)]}case"OneHot":{const r=d("indices",n,t,e),i=d("depth",n,t,e),a=d("onValue",n,t,e),o=d("offValue",n,t,e),l=d("dtype",n,t,e);return[s.oneHot(r,i,a,o,l)]}case"Ones":return[s.ones(d("shape",n,t,e),d("dtype",n,t,e))];case"OnesLike":return[s.onesLike(d("x",n,t,e))];case"RandomStandardNormal":return[s.randomStandardNormal(d("shape",n,t,e),d("dtype",n,t,e),d("seed",n,t,e))];case"RandomUniform":return[s.randomUniform(d("shape",n,t,e),d("minval",n,t,e),d("maxval",n,t,e),d("dtype",n,t,e))];case"RandomUniformInt":return[s.randomUniformInt(d("shape",n,t,e),d("minval",n,t,e),d("maxval",n,t,e),d("seed",n,t,e))];case"Range":{const r=d("start",n,t,e),i=d("stop",n,t,e),a=d("step",n,t,e);return[s.range(r,i,a,d("dtype",n,t,e))]}case"TruncatedNormal":{const r=d("shape",n,t,e),i=d("mean",n,t,e),a=d("stdDev",n,t,e),o=d("seed",n,t,e);return[s.truncatedNormal(r,i,a,d("dtype",n,t,e),o)]}case"Zeros":return[s.zeros(d("shape",n,t,e),d("dtype",n,t,e))];case"ZerosLike":return[s.zerosLike(d("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ei(n,t,e){const s=d("boxes",n,t,e),r=d("scores",n,t,e),i=d("maxOutputSize",n,t,e),a=d("iouThreshold",n,t,e),o=d("scoreThreshold",n,t,e),l=d("softNmsSigma",n,t,e);return{boxes:s,scores:r,maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}}const J$=async(n,t,e,s,r=Rt)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Ei(n,t,e),h=await r.image.nonMaxSuppressionWithScoreAsync(i,a,o,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Ei(n,t,e),c=d("padToMaxOutputSize",n,t,e),h=await r.image.nonMaxSuppressionPaddedAsync(i,a,o,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Ei(n,t,e);return[await r.image.nonMaxSuppressionAsync(i,a,o,l,u)]}case"Where":{const i=r.cast(d("condition",n,t,e),"bool"),a=[await r.whereAsync(i)];return i.dispose(),a}case"ListDiff":return r.setdiff1dAsync(d("x",n,t,e),d("y",n,t,e));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X$=(n,t,e,s=Rt)=>{switch(n.op){case"LowerBound":{const r=d("sortedSequence",n,t,e),i=d("values",n,t,e);return[s.lowerBound(r,i)]}case"TopKV2":{const r=d("x",n,t,e),i=d("k",n,t,e),a=d("sorted",n,t,e),o=s.topk(r,i,a);return[o.values,o.indices]}case"UpperBound":{const r=d("sortedSequence",n,t,e),i=d("values",n,t,e);return[s.upperBound(r,i)]}case"Unique":{const r=d("x",n,t,e),i=s.unique(r);return[i.values,i.indices]}case"UniqueV2":{const r=d("x",n,t,e),i=d("axis",n,t,e),a=s.unique(r,i);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y$=(n,t,e,s=Rt)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const r=d("default",n,t,e);return[zt(n.name,t,e)||r];case"Placeholder":return[zt(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=d("x",n,t,e);return[Ye(c)]}case"IdentityN":return d("x",n,t,e).map(c=>Ye(c));case"Snapshot":const i=d("x",n,t,e);return[Ye(i)];case"Shape":return[s.tensor1d(d("x",n,t,e).shape,"int32")];case"ShapeN":return d("x",n,t,e).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(d("x",n,t,e).size,"int32")];case"Rank":return[s.scalar(d("x",n,t,e).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const a=d("x",n,t,e),o=d("data",n,t,e),l=d("message",n,t,e),u=d("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q${get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=G(0),this.tensorMap=new Map,_t(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return G(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),x(()=>{const r=Te(e),i=s.length,a=r.length;g(i===a,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${a} elements.`);for(let o=0;o<i;o++){const l=s[o],u=r[o];_t(u),this.tensorMap.set(l,u)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return x(()=>{const r=[];for(let i=0;i<s.length;i++){const a=s[i],o=this.findWithDefault(a,e);r.push(o)}return ne(r)})}findWithDefault(t,e){const s=this.tensorMap.get(t);return s!=null?s:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tA=async(n,t,e,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const i=d("keyDType",n,t,e),a=d("valueDType",n,t,e),o=new Q$(i,a);return s.addHashTable(n.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=d("tableHandle",n,t,e,s),i=d("keys",n,t,e),a=d("values",n,t,e);return[await s.getHashTableById(r.id).import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=d("tableHandle",n,t,e,s),i=d("keys",n,t,e),a=d("defaultValue",n,t,e);return[await s.getHashTableById(r.id).find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=d("tableHandle",n,t,e,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA=(n,t,e,s=Rt)=>{switch(n.op){case"ResizeBilinear":{const r=d("images",n,t,e),i=d("size",n,t,e),a=d("alignCorners",n,t,e),o=d("halfPixelCenters",n,t,e);return[s.image.resizeBilinear(r,[i[0],i[1]],a,o)]}case"ResizeNearestNeighbor":{const r=d("images",n,t,e),i=d("size",n,t,e),a=d("alignCorners",n,t,e),o=d("halfPixelCenters",n,t,e);return[s.image.resizeNearestNeighbor(r,[i[0],i[1]],a,o)]}case"CropAndResize":{const r=d("image",n,t,e),i=d("boxes",n,t,e),a=d("boxInd",n,t,e),o=d("cropSize",n,t,e),l=d("method",n,t,e),u=d("extrapolationValue",n,t,e);return[s.image.cropAndResize(r,i,a,o,l,u)]}case"ImageProjectiveTransformV3":{const r=d("images",n,t,e),i=d("transforms",n,t,e),a=d("outputShape",n,t,e),o=d("fillValue",n,t,e),l=d("interpolation",n,t,e),u=d("fillMode",n,t,e);return[s.image.transform(r,i,l.toLowerCase(),u.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nA=(n,t,e,s=Rt)=>{switch(n.op){case"Equal":return[s.equal(d("a",n,t,e),d("b",n,t,e))];case"NotEqual":return[s.notEqual(d("a",n,t,e),d("b",n,t,e))];case"Greater":return[s.greater(d("a",n,t,e),d("b",n,t,e))];case"GreaterEqual":return[s.greaterEqual(d("a",n,t,e),d("b",n,t,e))];case"Less":return[s.less(d("a",n,t,e),d("b",n,t,e))];case"LessEqual":return[s.lessEqual(d("a",n,t,e),d("b",n,t,e))];case"LogicalAnd":return[s.logicalAnd(d("a",n,t,e),d("b",n,t,e))];case"LogicalNot":return[s.logicalNot(d("a",n,t,e))];case"LogicalOr":return[s.logicalOr(d("a",n,t,e),d("b",n,t,e))];case"Select":case"SelectV2":return[s.where(d("condition",n,t,e),d("a",n,t,e),d("b",n,t,e))];case"BitwiseAnd":return[s.bitwiseAnd(d("a",n,t,e),d("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sA=(n,t,e,s=Rt)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(d("a",n,t,e),d("b",n,t,e),d("transposeA",n,t,e),d("transposeB",n,t,e))];case"Einsum":return[s.einsum(d("equation",n,t,e),...d("tensors",n,t,e))];case"Transpose":return[s.transpose(d("x",n,t,e),d("perm",n,t,e))];case"_FusedMatMul":const[r,i]=d("fusedOps",n,t,e),a=r==="biasadd",o=i==="prelu",l=d("numArgs",n,t,e),u=d("leakyreluAlpha",n,t,e);if(a){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=d("args",n,t,e);return[s.fused.matMul({a:d("a",n,t,e),b:d("b",n,t,e),transposeA:d("transposeA",n,t,e),transposeB:d("transposeB",n,t,e),bias:c,activation:i,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(d("a",n,t,e),d("numLower",n,t,e),d("numUpper",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rA=(n,t,e,s=Rt)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(d("x",n,t,e),d("axis",n,t,e),d("keepDims",n,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(d("x",n,t,e),d("mean",n,t,e),d("variance",n,t,e),d("offset",n,t,e),d("scale",n,t,e),d("epsilon",n,t,e))];case"FusedBatchNormV3":return[s.batchNorm(d("x",n,t,e),d("mean",n,t,e),d("variance",n,t,e),d("offset",n,t,e),d("scale",n,t,e),d("epsilon",n,t,e))];case"LRN":return[s.localResponseNormalization(d("x",n,t,e),d("radius",n,t,e),d("bias",n,t,e),d("alpha",n,t,e),d("beta",n,t,e))];case"Softmax":return[s.softmax(d("x",n,t,e))];case"LogSoftmax":return[s.logSoftmax(d("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iA=(n,t,e,s=Rt)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:i}=s.raggedGather(d("paramsNestedSplits",n,t,e),d("paramsDenseValues",n,t,e),d("indices",n,t,e),d("outputRaggedRank",n,t,e));return r.concat(i)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:i}=s.raggedRange(d("starts",n,t,e),d("limits",n,t,e),d("splits",n,t,e));return[r,i]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(d("shape",n,t,e),d("values",n,t,e),d("defaultValue",n,t,e),d("rowPartitionTensors",n,t,e),d("rowPartitionTypes",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aA=(n,t,e,s=Rt)=>{switch(n.op){case"Max":{const o=d("axis",n,t,e),l=d("keepDims",n,t,e);return[s.max(d("x",n,t,e),o,l)]}case"Mean":{const o=d("axis",n,t,e),l=d("keepDims",n,t,e);return[s.mean(d("x",n,t,e),o,l)]}case"Min":{const o=d("axis",n,t,e),l=d("keepDims",n,t,e);return[s.min(d("x",n,t,e),o,l)]}case"Sum":{const o=d("axis",n,t,e),l=d("keepDims",n,t,e);return[s.sum(d("x",n,t,e),o,l)]}case"All":{const o=d("axis",n,t,e),l=d("keepDims",n,t,e);return[s.all(d("x",n,t,e),o,l)]}case"Any":{const o=d("axis",n,t,e),l=d("keepDims",n,t,e);return[s.any(d("x",n,t,e),o,l)]}case"ArgMax":{const o=d("axis",n,t,e);return[s.argMax(d("x",n,t,e),o)]}case"ArgMin":{const o=d("axis",n,t,e);return[s.argMin(d("x",n,t,e),o)]}case"Prod":{const o=d("axis",n,t,e),l=d("keepDims",n,t,e);return[s.prod(d("x",n,t,e),o,l)]}case"Cumprod":{const o=d("axis",n,t,e),l=d("exclusive",n,t,e),u=d("reverse",n,t,e);return[s.cumprod(d("x",n,t,e),o,l,u)]}case"Cumsum":{const o=d("axis",n,t,e),l=d("exclusive",n,t,e),u=d("reverse",n,t,e);return[s.cumsum(d("x",n,t,e),o,l,u)]}case"Bincount":const r=d("x",n,t,e),i=d("weights",n,t,e),a=d("size",n,t,e);return[s.bincount(r,i,a)];case"DenseBincount":{const o=d("x",n,t,e),l=d("weights",n,t,e),u=d("size",n,t,e),c=d("binaryOutput",n,t,e);return[s.denseBincount(o,l,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oA=(n,t,e,s=Rt)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=d("n",n,t,e),i=d("axis",n,t,e);let a=d("tensors",n,t,e);return a=a.slice(0,r),[s.concat(a,i)]}case"Gather":{const r=d("x",n,t,e),i=d("indices",n,t,e);return[s.gather(r,s.cast(i,"int32"),0)]}case"GatherV2":{const r=d("axis",n,t,e),i=d("batchDims",n,t,e),a=d("x",n,t,e),o=d("indices",n,t,e);return[s.gather(a,s.cast(o,"int32"),r,i)]}case"Reverse":{const r=d("dims",n,t,e),i=[];for(let o=0;o<r.length;o++)r[o]&&i.push(o);const a=d("x",n,t,e);return[s.reverse(a,i)]}case"ReverseV2":{const r=d("axis",n,t,e),i=d("x",n,t,e);return[s.reverse(i,r)]}case"Slice":{const r=d("begin",n,t,e),i=d("size",n,t,e);return[s.slice(d("x",n,t,e),r,i)]}case"StridedSlice":{const r=d("begin",n,t,e),i=d("end",n,t,e),a=d("strides",n,t,e),o=d("beginMask",n,t,e),l=d("endMask",n,t,e),u=d("ellipsisMask",n,t,e),c=d("newAxisMask",n,t,e),h=d("shrinkAxisMask",n,t,e),p=d("x",n,t,e);return[s.stridedSlice(p,r,i,a,o,l,u,c,h)]}case"Pack":return x(()=>{const r=d("axis",n,t,e),i=d("tensors",n,t,e),a=i[0].shape,o=s.squeeze(i[0]).shape,l=i.map(u=>{const c=Ot(u.shape,a);if(!c&&!Ot(s.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,a)});return[s.stack(l,r)]});case"Unpack":{const r=d("axis",n,t,e),i=d("tensor",n,t,e);return s.unstack(i,r)}case"Tile":{const r=d("reps",n,t,e);return[s.tile(d("x",n,t,e),r)]}case"Split":case"SplitV":{const r=d("axis",n,t,e),i=d("numOrSizeSplits",n,t,e),a=d("x",n,t,e);return s.split(a,i,r)}case"ScatterNd":{const r=d("indices",n,t,e),i=d("values",n,t,e),a=d("shape",n,t,e);return[s.scatterND(r,i,a)]}case"GatherNd":{const r=d("x",n,t,e),i=d("indices",n,t,e);return[s.gatherND(r,i)]}case"SparseToDense":{const r=d("sparseIndices",n,t,e),i=d("outputShape",n,t,e),a=d("sparseValues",n,t,e),o=d("defaultValue",n,t,e);return[s.sparseToDense(r,a,i,a.dtype===o.dtype?o:s.cast(o,a.dtype))]}case"TensorScatterUpdate":{const r=d("indices",n,t,e),i=d("values",n,t,e),a=d("tensor",n,t,e);return[s.tensorScatterUpdate(a,r,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lA=(n,t,e,s=Rt)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:i,emptyRowIndicator:a,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(d("indices",n,t,e),d("values",n,t,e),d("denseShape",n,t,e),d("defaultValue",n,t,e));return[r,i,a,o]}case"SparseReshape":{const{outputIndices:r,outputShape:i}=s.sparse.sparseReshape(d("inputIndices",n,t,e),d("inputShape",n,t,e),d("newShape",n,t,e));return[r,i]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(d("data",n,t,e),d("indices",n,t,e),d("segmentIds",n,t,e))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(d("data",n,t,e),d("indices",n,t,e),d("segmentIds",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uA=(n,t,e,s=Rt)=>{switch(n.op){case"FFT":return[s.fft(d("x",n,t,e))];case"IFFT":return[s.ifft(d("x",n,t,e))];case"RFFT":return[s.rfft(d("x",n,t,e))];case"IRFFT":return[s.irfft(d("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cA=(n,t,e,s=Rt)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(d("input",n,t,e),d("pattern",n,t,e),d("rewrite",n,t,e),d("replaceGlobal",n,t,e))];case"StringNGrams":{const{nGrams:r,nGramsSplits:i}=s.string.stringNGrams(d("data",n,t,e),d("dataSplits",n,t,e),d("separator",n,t,e),d("nGramWidths",n,t,e),d("leftPad",n,t,e),d("rightPad",n,t,e),d("padWidth",n,t,e),d("preserveShortSequences",n,t,e));return[r,i]}case"StringSplit":{const{indices:r,values:i,shape:a}=s.string.stringSplit(d("input",n,t,e),d("delimiter",n,t,e),d("skipEmpty",n,t,e));return[r,i,a]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(d("input",n,t,e),d("numBuckets",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hA=(n,t,e,s=Rt)=>{switch(n.op){case"Cast":return[s.cast(d("x",n,t,e),d("dtype",n,t,e))];case"ExpandDims":{const r=d("axis",n,t,e);return[s.expandDims(d("x",n,t,e),r)]}case"Squeeze":{const r=d("axis",n,t,e);return[s.squeeze(d("x",n,t,e),r)]}case"Reshape":return[s.reshape(d("x",n,t,e),d("shape",n,t,e))];case"EnsureShape":return[s.ensureShape(d("x",n,t,e),d("shape",n,t,e))];case"MirrorPad":return[s.mirrorPad(d("x",n,t,e),d("padding",n,t,e),d("mode",n,t,e))];case"PadV2":case"Pad":return[s.pad(d("x",n,t,e),d("padding",n,t,e),d("constantValue",n,t,e))];case"SpaceToBatchND":{const r=d("blockShape",n,t,e),i=d("paddings",n,t,e);return[s.spaceToBatchND(d("x",n,t,e),r,i)]}case"BatchToSpaceND":{const r=d("blockShape",n,t,e),i=d("crops",n,t,e);return[s.batchToSpaceND(d("x",n,t,e),r,i)]}case"DepthToSpace":{const r=d("blockSize",n,t,e),i=d("dataFormat",n,t,e).toUpperCase();return[s.depthToSpace(d("x",n,t,e),r,i)]}case"BroadcastTo":return[s.broadcastTo(d("x",n,t,e),d("shape",n,t,e))];case"BroadcastArgs":return[s.broadcastArgs(d("s0",n,t,e),d("s1",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pl(n,t,e,s,r=x){const i=((a,o,l)=>{switch(a.category){case"arithmetic":return r(()=>P$(a,o,l));case"basic_math":return r(()=>V$(a,o,l));case"control":return H$(a,o,l);case"convolution":return r(()=>K$(a,o,l));case"creation":return r(()=>Z$(a,o,l));case"dynamic":return J$(a,o,l);case"evaluation":return r(()=>X$(a,o,l));case"image":return r(()=>eA(a,o,l));case"graph":return r(()=>Y$(a,o,l));case"logical":return r(()=>nA(a,o,l));case"matrices":return r(()=>sA(a,o,l));case"normalization":return r(()=>rA(a,o,l));case"ragged":return r(()=>iA(a,o,l));case"reduction":return r(()=>aA(a,o,l));case"slice_join":return r(()=>oA(a,o,l));case"sparse":return r(()=>lA(a,o,l));case"spectral":return r(()=>uA(a,o,l));case"string":return r(()=>cA(a,o,l));case"transformation":return r(()=>hA(a,o,l));case"hash_table":return tA(a,o,l,s);case"custom":const u=nm(a.op);if(u&&u.customExecutor)return u.customExecutor(new M$(a,o,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return Ln(i)?i.then(a=>[].concat(a)):[].concat(i)}class Vl{constructor(t={},e={},s={},r={},i){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const s=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(s))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wl(n,t,e,s){const r=new Set,i=[];let a=null,o=null;const l=new Set,u=new Set(Object.keys(n).map(p=>Xt(p)[0]));s=s||[];const c=new Set(s.map(p=>Xt(p.name)[0])),h=[...t];for(;h.length>0;){const p=h.pop();if((Cn(p)||wA(p)||NA(p))&&a==null&&(a=p,o=a.children.map(f=>f.name).filter(f=>r.has(f))),r.add(p.name),e[p.name]==null&&!u.has(p.name)&&!c.has(p.name)){if(p.inputs.length===0){i.push(p.name);continue}p.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),h.push(f))})}}return{inputs:n,outputs:t,usedNodes:r,missingInputs:i,dynamicNode:a,syncInputs:o}}function pA(n,t){const{usedNodes:e,inputs:s}=t,r=Object.keys(s).map(b=>Xt(b)[0]).map(b=>n.nodes[b]),i=n.initNodes||[],a=b=>e.has(typeof b=="string"?b:b.name);function o(b){return[...new Map(b.map(S=>[S.name,S])).values()]}const l=o([...r,...n.weights,...i]).filter(a),u=o([...l,...Object.values(n.nodes)]).filter(a),c=new Map(u.map(b=>[b.name,b])),h={};for(const b of u){h[b.name]=h[b.name]||0;for(const S of b.children)a(S)||(h[S.name]=Number.POSITIVE_INFINITY),h[S.name]=(h[S.name]||0)+1}const p=Object.entries(h).filter(([,b])=>b===0).map(([b])=>b),f=[...p];for(;p.length>0;){const b=p.pop(),S=c.get(b);for(const I of S.children.filter(a))--h[I.name]===0&&(f.push(I.name),p.push(I.name))}const w=f.map(b=>c.get(b)),y=dA(w,l);return fA(y,l),y}function dA(n,t){const e=new Map(n.map(a=>[a.name,a])),s=t.map(a=>a.name),r=new Set(s);for(;s.length>0;){const a=s.pop(),o=e.get(a);for(const l of o.children)!e.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(a=>r.has(a.name))}class fr extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}}function fA(n,t){const e=new Map(n.map((o,l)=>[o.name,l])),s=new Set(t.map(o=>o.name)),r=o=>s.has(typeof o=="string"?o:o.name),i=new Set(n.map(o=>o.name)),a=o=>i.has(typeof o=="string"?o:o.name);for(const o of n){for(const l of o.children.filter(a)){if(!e.has(l.name))throw new fr(`Child ${l.name} of node ${o.name} is unreachable.`);if(e.get(o.name)>e.get(l.name))throw new fr(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!r(o))for(const l of o.inputs){if(!e.has(l.name))throw new fr(`Input ${l.name} of node ${o.name} is unreachable.`);if(e.get(l.name)>e.get(o.name))throw new fr(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function mA(n){const t=new Map(n.map((o,l)=>[o.name,l])),e=Number.MAX_SAFE_INTEGER,s=n.map((o,l)=>Cn(o)?e:l),r=o=>{const l=s[t.get(o.name)];return l==null?-1:l},i=n.map((o,l)=>o.children.map(r).reduce((u,c)=>Math.max(u,c),s[l])),a=new Map;for(let o=0;o<n.length;++o){const l=i[o];if(l===e)continue;const u=n[o],c=n[l];a.has(c.name)||a.set(c.name,[]),a.get(c.name).push(u)}return a}const gA=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),yA=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),bA=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Cn(n){return gA.has(n.op)}function wA(n){return yA.has(n.op)}function NA(n){return bA.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Br{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(s=>t[s].map(r=>r.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new Br(t.functions[s],this)})}getCompilationKey(t,e){const s=t.map(i=>i.name).sort(),r=e.map(i=>i.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(t,e){const s=Wl(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:i,syncInputs:a}=s;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const u=e.map(h=>h.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}const o=pA(this.graph,s),l=mA(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;const e=t.clone();return _t(e),e}cloneTensorList(t){return t?t.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,s])=>[e,this.cloneTensorList(s)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=s.map(p=>this.graph.nodes[Xt(p)[0]]),i=e.map(p=>Xt(p)[0]),a=new Set(i);let o=i.map(p=>this.graph.nodes[p]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(r,o);let u=this.compiledMap.get(l);u==null&&(u=this.compile(t,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const c={},h={};return x(()=>{const p=new Vl(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(S=>{const[I,$]=Xt(S,p),v=[];v[$]=t[S],f[I]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[I]=this.cloneTensorList(v))});const w=this.getFrozenTensorIds(f),{orderedNodes:y,nodeLiveUntilMap:b}=u;for(const S of y){if(f[S.name])continue;const I=Pl(S,f,p,this._resourceManager);if(Ln(I))throw new Error(`The execution of the op '${S.op}' returned a promise. Please use model.executeAsync() instead.`);f[S.name]=I,this.keepIntermediateTensors&&(this.clonedTensorsMap[S.name]=this.cloneTensorList(I)),this.checkTensorForDisposalWithNodeLiveUntilInfo(S,f,p,w,a,b.get(S.name))}return this.parent==null&&p.dispose(w),e.map(S=>zt(S,f,p))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(r=>r.id)));return new Set(e)}checkTensorForDisposal(t,e,s,r,i,a,o){if(!(Cn(e)||a.has(t))){for(const l of s[t])l!=null&&(o[l.id]=(o[l.id]||0)+e.children.length);for(const l of e.inputs){if(Cn(l))continue;const u=zl(l.name,s,r);if(u!=null)for(const c of u){if(!c||c.kept||i.has(c.id))continue;const h=o[c.id];h===1?(c.dispose(),delete o[c.id]):h!=null&&o[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,s,r,i,a){function o(l){return Cn(l)||i.has(l.name)}if(!(Cn(t)||a==null))for(const l of a){if(o(l))continue;const u=zl(l.name,e,s);for(const c of u)!c||c.kept||r.has(c.id)||c.dispose()}}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){!this.clonedTensorsMap||(Object.values(this.clonedTensorsMap).forEach(t=>{for(const e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e,s=!1,r={},i={}){this.disposeIntermediateTensors(),s||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const a=new Vl(this.weightMap,r,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(t,a,e,s),l=e.map(p=>zt(p,o,a)),u=l.map(p=>p.id),c=Object.keys(t).map(p=>t[p].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach(p=>{p.forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(h),l}async executeFunctionAsync(t,e,s){const r=t.reduce((i,a,o)=>(i[this.inputs[o].name]=a,i),{});return this._executeAsync(r,this.outputNodes,!0,e,s)}async executeWithControlFlow(t,e,s,r){const i=Object.keys(t),a=i.map(v=>this.graph.nodes[Xt(v)[0]]),o=s.map(v=>Xt(v)[0]),l=new Set(o);let u=o.map(v=>this.graph.nodes[v]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:p,syncInputs:f}=Wl(t,u,this.weightMap,this._initNodes),w=[...a,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:e.currentContext})),y=Object.assign({},this.weightMap);Object.keys(t).forEach(v=>{const[D,C]=Xt(v),M=[];M[C]=t[v],y[D]=M});const b={},S=this.getFrozenTensorIds(y),I={};for(;w.length>0;){const v=this.processStack(a,w,e,y,I,S,l,b,c);await Promise.all(v)}p==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const $=u.filter(v=>!Cn(v)&&!zt(v.name,y,e)).map(v=>v.name);if($.length>0){let v="";throw p!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${$}] from the provided inputs [${i}]. Consider providing the following inputs: [${h}]. ${v}`)}return y}processStack(t,e,s,r,i,a,o,l,u){const c=[];for(;e.length>0;){const h=e.pop();s.currentContext=h.contexts;let p="";if(h.node.op==="Enter"&&d("isConstant",h.node,r,s)&&([p]=Xe(h.node.name,s)),r[h.node.name]==null){const f=Pl(h.node,r,s,this._resourceManager);p||([p]=Xe(h.node.name,s));const w=s.currentContext;Ln(f)?c.push(f.then(y=>(r[p]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(y)),s.currentContext=w,this.checkTensorForDisposal(p,h.node,r,s,a,o,l),this.processChildNodes(h.node,e,s,r,i,u),y))):(r[p]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(f)),this.checkTensorForDisposal(p,h.node,r,s,a,o,l),this.processChildNodes(h.node,e,s,r,i,u))}else this.processChildNodes(h.node,e,s,r,i,u)}return c}processChildNodes(t,e,s,r,i,a){t.children.forEach(o=>{const[l]=Xe(o.name,s);i[l]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!zt(u,r,s))&&(i[l]=!0,e.push({contexts:s.currentContext,node:o})):o.inputNames.every(u=>!!zt(u,r,s))&&(i[l]=!0,e.push({contexts:s.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const s=t[e],[r]=Xt(e),i=this.graph.nodes[r];if(i.attrParams.shape&&i.attrParams.shape.value){const a=i.attrParams.shape.value,o=a.length===s.shape.length&&s.shape.every((l,u)=>a[u]===-1||a[u]===l);g(o,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&g(s.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(t){var e,s;const r={};for(const i in t){const a=(s=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||s===void 0?void 0:s[i];a!=null?r[a.name]=t[i]:r[i]=t[i]}return r}checkInputs(t){const e=Object.keys(t).filter(s=>{const[r]=Xt(s);return this.graph.nodes[r]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var s,r;const i=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[e];return i!=null?i.name:e},{})}checkOutputs(t){t.forEach(e=>{const[s]=Xt(e);if(!this.graph.nodes[s])throw new Error(`The output '${e}' is not found in the graph`)})}}class SA{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kA="?tfjs-format=file",TA="model.json";class IA{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},s=_p){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=s,e==null&&(this.loadOptions={}),this.resourceManager=new SA}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return Ln(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){const e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}async loadStreaming(t){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const e=await sh(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)}loadWithWeightMap(t,e){this.artifacts=t;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(r=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Br(Ll.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const i=Ll.Instance.transformGraph(t.modelInitializer);this.initializer=new Br(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if(typeof t=="string"){const s=this.io.getSaveHandlers(t);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`);t=s[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){const e=t instanceof mt?[t]:t,s={};return e.forEach((r,i)=>s[this.structuredOutputKeys[i]]=r),s}return t}predict(t,e){const s=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(t,e){const s=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(t){var e;if(!(t instanceof mt)&&!Array.isArray(t)){const i=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(i!=null)for(const a in i){const o=i[a];o.resourceId!=null&&(t[a]=this.resourceIdToCapturedInput[o.resourceId])}return t}t=Array.isArray(t)?t:[t];const s=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${t.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((i,a)=>{var o,l,u;const c=(u=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[a])===null||u===void 0?void 0:u.resourceId;return c!=null?i[a]=this.resourceIdToCapturedInput[c]:i[a]=t[r++],i},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){const e=this.initializerSignature.outputs,s=Object.keys(e);for(let r=0;r<s.length;r++){const i=s[r],a=e[i];this.resourceIdToCapturedInput[a.resourceId]=t[r]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=this.executor.execute(t,e);return s.length>1?s:s[0]}async executeAsync(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=await this.executor.executeAsync(t,e);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,s)=>(e[s]=[t[s]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Z(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Mx(n,t={},e=_p){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof n=="string"&&(n=vA(n));const s=new IA(n,t,e);return await s.load(),s}function vA(n){return n.endsWith("/")||(n=n+"/"),`${n}${TA}${kA}`}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ul;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Ul||(Ul={}));/** @license See the LICENSE file. *//** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */export{sT as $,Pn as A,rn as B,ms as C,Ab as D,Zt as E,so as F,ro as G,io as H,ao as I,ax as J,ox as K,lx as L,ux as M,cx as N,hx as O,Vp as P,px as Q,Ze as R,dx as S,fx as T,mx as U,gx as V,nx as W,d1 as X,ap as Y,tx as Z,nT as _,g as a,Vm as a$,yx as a0,bx as a1,wx as a2,Nx as a3,Sx as a4,kx as a5,xn as a6,PA as a7,Tx as a8,Ix as a9,vt as aA,xe as aB,tp as aC,H1 as aD,Q as aE,Ht as aF,Zr as aG,T as aH,U as aI,At as aJ,ae as aK,aw as aL,rw as aM,nw as aN,tw as aO,R1 as aP,qA as aQ,H as aR,ba as aS,zA as aT,ps as aU,Yl as aV,st as aW,Xs as aX,km as aY,BA as aZ,RA as a_,vx as aa,Ex as ab,$x as ac,Ax as ad,xx as ae,Dx as af,_x as ag,Cx as ah,Ox as ai,Fx as aj,zx as ak,Iy as al,x as am,kt as an,O as ao,K as ap,Kr as aq,B as ar,A as as,E as at,ls as au,tt as av,XN as aw,ZN as ax,HN as ay,jN as az,Hn as b,au as b$,wa as b0,Ta as b1,Dg as b2,ka as b3,FA as b4,Ea as b5,Sa as b6,Bm as b7,Hl as b8,du as b9,Zk as bA,Jk as bB,Ic as bC,xc as bD,Wg as bE,WA as bF,Dc as bG,wm as bH,KA as bI,Eu as bJ,Mu as bK,ic as bL,lc as bM,pc as bN,uc as bO,OA as bP,hu as bQ,Bo as bR,Ql as bS,tu as bT,eu as bU,Om as bV,Fm as bW,nu as bX,su as bY,ru as bZ,iu as b_,ng as ba,Au as bb,Du as bc,_u as bd,Cu as be,og as bf,zu as bg,cg as bh,hg as bi,Pu as bj,Gu as bk,Zu as bl,Yu as bm,Qu as bn,UA as bo,kg as bp,gr as bq,ac as br,ze as bs,Fs as bt,mc as bu,Li as bv,kc as bw,bc as bx,Pp as by,jk as bz,Lx as c,Wu as c$,lu as c0,ou as c1,uu as c2,Ot as c3,cu as c4,Lm as c5,zm as c6,Ou as c7,pu as c8,Rm as c9,LA as cA,Ym as cB,MA as cC,vc as cD,tg as cE,eg as cF,$u as cG,xu as cH,vu as cI,sg as cJ,rg as cK,Wr as cL,ig as cM,Mo as cN,Po as cO,ag as cP,Fu as cQ,aT as cR,lg as cS,Lu as cT,Ru as cU,Bu as cV,pg as cW,Vu as cX,dg as cY,fg as cZ,mg as c_,Pm as ca,fu as cb,mu as cc,ug as cd,gu as ce,yu as cf,Wm as cg,bu as ch,wu as ci,Um as cj,Gm as ck,Nu as cl,Su as cm,qm as cn,jm as co,Zl as cp,ku as cq,Hm as cr,Km as cs,Tu as ct,Zm as cu,Jm as cv,Xm as cw,Iu as cx,Qm as cy,is as cz,Zo as d,Hg as d$,yg as d0,Uu as d1,ju as d2,qu as d3,wg as d4,bg as d5,Ng as d6,Hu as d7,Ku as d8,Ju as d9,Og as dA,zg as dB,gc as dC,yc as dD,Sc as dE,wc as dF,Nc as dG,Tc as dH,Ec as dI,Lg as dJ,Rg as dK,Bg as dL,Mg as dM,Pg as dN,$c as dO,Vg as dP,Lc as dQ,Ug as dR,Xk as dS,Hk as dT,Gg as dU,jg as dV,qg as dW,_c as dX,Cc as dY,Fg as dZ,Ia as d_,Xu as da,Ac as db,Sg as dc,Tg as dd,Ig as de,vg as df,ec as dg,zc as dh,tc as di,nc as dj,Ie as dk,sc as dl,rc as dm,Eg as dn,$g as dp,Ag as dq,xg as dr,oc as ds,hc as dt,Cg as du,cc as dv,_g as dw,dc as dx,Jg as dy,fc as dz,jc as e,Kg as e0,Sr as e1,Zg as e2,Oc as e3,Fc as e4,VA as e5,_A as e6,mr as e7,xA as e8,Sm as e9,jA as ea,CA as eb,Bs as ec,DA as ed,G as ee,$i as ef,eT as eg,Ny as eh,Rs as ei,GA as ej,Dt as ek,Ro as el,iT as em,rT as en,P as eo,Ve as ep,Z as eq,ex as er,HA as es,Mx as et,Qt as eu,Bh as f,Fw as g,zw as h,gs as i,YA as j,Mh as k,Ra as l,QA as m,XA as n,Ft as o,lt as p,rx as q,ix as r,sx as s,ZA as t,Hc as u,kb as v,JA as w,Gr as x,Tb as y,Ih as z};
